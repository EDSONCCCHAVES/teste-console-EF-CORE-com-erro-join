using System;
using Microsoft.EntityFrameworkCore;

namespace MaxConsole.DTO
{
    public partial class db603Context : DbContext
    {
        public db603Context()
        {
        }

        public db603Context(DbContextOptions<db603Context> options)
            : base(options)
        {
            var log = _myContext.Log.FirstOrDefault(o => o.Id > 0);
        }

        public virtual DbSet<EctBairros> EctBairros { get; set; }
        public virtual DbSet<EctCep> EctCep { get; set; }
        public virtual DbSet<EctCidades> EctCidades { get; set; }
        public virtual DbSet<EctEstados> EctEstados { get; set; }
        public virtual DbSet<EctFaixaBairro> EctFaixaBairro { get; set; }
        public virtual DbSet<EctFaixaLocalidade> EctFaixaLocalidade { get; set; }
        public virtual DbSet<EctFaixaUop> EctFaixaUop { get; set; }
        public virtual DbSet<EctLogradouro> EctLogradouro { get; set; }
        public virtual DbSet<EctPaises> EctPaises { get; set; }
        public virtual DbSet<GaAtendimentosEtapa> GaAtendimentosEtapa { get; set; }
        public virtual DbSet<GaAvisosDebitosParcelas> GaAvisosDebitosParcelas { get; set; }
        public virtual DbSet<GaEstimativasProjetos> GaEstimativasProjetos { get; set; }
        public virtual DbSet<GaEstimativasSprint> GaEstimativasSprint { get; set; }
        public virtual DbSet<GaFasesImplantacao> GaFasesImplantacao { get; set; }
        public virtual DbSet<GaKambanSprint> GaKambanSprint { get; set; }
        public virtual DbSet<GaProgramacaoBuilds> GaProgramacaoBuilds { get; set; }
        public virtual DbSet<GaProjetos> GaProjetos { get; set; }
        public virtual DbSet<GaRecursos> GaRecursos { get; set; }
        public virtual DbSet<GaSetoresImplantacao> GaSetoresImplantacao { get; set; }
        public virtual DbSet<GaSistemas> GaSistemas { get; set; }
        public virtual DbSet<GaSistemasItemSubMenu> GaSistemasItemSubMenu { get; set; }
        public virtual DbSet<GaSistemasMenu> GaSistemasMenu { get; set; }
        public virtual DbSet<GaSistemasSubMenu> GaSistemasSubMenu { get; set; }
        public virtual DbSet<GaSprint> GaSprint { get; set; }
        public virtual DbSet<GaTarefasDiarias> GaTarefasDiarias { get; set; }
        public virtual DbSet<GaTiposEstimativas> GaTiposEstimativas { get; set; }
        public virtual DbSet<GaTiposRecursos> GaTiposRecursos { get; set; }
        public virtual DbSet<GaTiposRecursosProjetos> GaTiposRecursosProjetos { get; set; }
        public virtual DbSet<GiControleVersaoGiGeral> GiControleVersaoGiGeral { get; set; }
        public virtual DbSet<GiControleVersaoGiRefratario> GiControleVersaoGiRefratario { get; set; }
        public virtual DbSet<GsAdiantamentos> GsAdiantamentos { get; set; }
        public virtual DbSet<GsAdiantamentosItens> GsAdiantamentosItens { get; set; }
        public virtual DbSet<GsAdiantamentosItensCcusto> GsAdiantamentosItensCcusto { get; set; }
        public virtual DbSet<GsAgentesOperadoras> GsAgentesOperadoras { get; set; }
        public virtual DbSet<GsAgentesPagamento> GsAgentesPagamento { get; set; }
        public virtual DbSet<GsAlmoxarifados> GsAlmoxarifados { get; set; }
        public virtual DbSet<GsAlmoxarifadosHistorico> GsAlmoxarifadosHistorico { get; set; }
        public virtual DbSet<GsAlmoxarifadosHistoricoSeries> GsAlmoxarifadosHistoricoSeries { get; set; }
        public virtual DbSet<GsArquivosProgramacao> GsArquivosProgramacao { get; set; }
        public virtual DbSet<GsAssistenciaTecnica> GsAssistenciaTecnica { get; set; }
        public virtual DbSet<GsAssistenciaTecnicaItens> GsAssistenciaTecnicaItens { get; set; }
        public virtual DbSet<GsAssistenciaTecnicaLaudo> GsAssistenciaTecnicaLaudo { get; set; }
        public virtual DbSet<GsAssociados> GsAssociados { get; set; }
        public virtual DbSet<GsAssociados2> GsAssociados2 { get; set; }
        public virtual DbSet<GsAssociadosAreaTeste> GsAssociadosAreaTeste { get; set; }
        public virtual DbSet<GsAssociadosBackup21horas> GsAssociadosBackup21horas { get; set; }
        public virtual DbSet<GsAssociadosCodigos> GsAssociadosCodigos { get; set; }
        public virtual DbSet<GsAssociadosDocumentos> GsAssociadosDocumentos { get; set; }
        public virtual DbSet<GsAssociadosDocumentosLog> GsAssociadosDocumentosLog { get; set; }
        public virtual DbSet<GsAssociadosDocumentosOrcamentos> GsAssociadosDocumentosOrcamentos { get; set; }
        public virtual DbSet<GsAssociadosEmpresas> GsAssociadosEmpresas { get; set; }
        public virtual DbSet<GsAssociadosEmpresasAtividades> GsAssociadosEmpresasAtividades { get; set; }
        public virtual DbSet<GsAssociadosEmpresasNfe> GsAssociadosEmpresasNfe { get; set; }
        public virtual DbSet<GsAssociadosEmpresasNfeContingencia> GsAssociadosEmpresasNfeContingencia { get; set; }
        public virtual DbSet<GsAssociadosEmpresasNfse> GsAssociadosEmpresasNfse { get; set; }
        public virtual DbSet<GsAssociadosEmpresasSetores> GsAssociadosEmpresasSetores { get; set; }
        public virtual DbSet<GsAssociadosFiliais> GsAssociadosFiliais { get; set; }
        public virtual DbSet<GsAssociadosHistorico> GsAssociadosHistorico { get; set; }
        public virtual DbSet<GsAssociadosLicencas> GsAssociadosLicencas { get; set; }
        public virtual DbSet<GsAssociadosNfse> GsAssociadosNfse { get; set; }
        public virtual DbSet<GsAssociadosOld> GsAssociadosOld { get; set; }
        public virtual DbSet<GsAssociadosOriginal> GsAssociadosOriginal { get; set; }
        public virtual DbSet<GsAssociadosParametros> GsAssociadosParametros { get; set; }
        public virtual DbSet<GsAssociadosParametrosTxt> GsAssociadosParametrosTxt { get; set; }
        public virtual DbSet<GsAssociadosPrivilegios> GsAssociadosPrivilegios { get; set; }
        public virtual DbSet<GsAtendimentos> GsAtendimentos { get; set; }
        public virtual DbSet<GsAtendimentosAudio> GsAtendimentosAudio { get; set; }
        public virtual DbSet<GsAtendimentosInformacoes> GsAtendimentosInformacoes { get; set; }
        public virtual DbSet<GsAtualizacaoSistema> GsAtualizacaoSistema { get; set; }
        public virtual DbSet<GsBancos> GsBancos { get; set; }
        public virtual DbSet<GsBancosClientes> GsBancosClientes { get; set; }
        public virtual DbSet<GsBeneficios> GsBeneficios { get; set; }
        public virtual DbSet<GsBeneficiosFuncionarios> GsBeneficiosFuncionarios { get; set; }
        public virtual DbSet<GsBorderoPagamento> GsBorderoPagamento { get; set; }
        public virtual DbSet<GsBorderoPagamentoCheque> GsBorderoPagamentoCheque { get; set; }
        public virtual DbSet<GsBorderoPagamentoChequeBaixas> GsBorderoPagamentoChequeBaixas { get; set; }
        public virtual DbSet<GsBorderoPagamentoDetalhes> GsBorderoPagamentoDetalhes { get; set; }
        public virtual DbSet<GsBorderoPagamentoForpg> GsBorderoPagamentoForpg { get; set; }
        public virtual DbSet<GsBorderoPagamentoTitulos> GsBorderoPagamentoTitulos { get; set; }
        public virtual DbSet<GsBorderoRecebimento> GsBorderoRecebimento { get; set; }
        public virtual DbSet<GsBorderoRecebimentoCheque> GsBorderoRecebimentoCheque { get; set; }
        public virtual DbSet<GsBorderoRecebimentoChequeBaixas> GsBorderoRecebimentoChequeBaixas { get; set; }
        public virtual DbSet<GsBorderoRecebimentoDetalhes> GsBorderoRecebimentoDetalhes { get; set; }
        public virtual DbSet<GsBorderoRecebimentoTitulos> GsBorderoRecebimentoTitulos { get; set; }
        public virtual DbSet<GsCadContasBancarias> GsCadContasBancarias { get; set; }
        public virtual DbSet<GsCancelamentosPedidosCompras> GsCancelamentosPedidosCompras { get; set; }
        public virtual DbSet<GsCargosFuncionarios> GsCargosFuncionarios { get; set; }
        public virtual DbSet<GsCargosNiveis> GsCargosNiveis { get; set; }
        public virtual DbSet<GsCartaoPontoApontamento> GsCartaoPontoApontamento { get; set; }
        public virtual DbSet<GsCategoriaTitulos> GsCategoriaTitulos { get; set; }
        public virtual DbSet<GsCentroCusto> GsCentroCusto { get; set; }
        public virtual DbSet<GsCerimonial> GsCerimonial { get; set; }
        public virtual DbSet<GsCerimonialItens> GsCerimonialItens { get; set; }
        public virtual DbSet<GsCfop> GsCfop { get; set; }
        public virtual DbSet<GsChamadoTecnico> GsChamadoTecnico { get; set; }
        public virtual DbSet<GsChamadoTecnicoEquipamentos> GsChamadoTecnicoEquipamentos { get; set; }
        public virtual DbSet<GsChamadoTecnicoMateriais> GsChamadoTecnicoMateriais { get; set; }
        public virtual DbSet<GsChamadoTecnicoSeries> GsChamadoTecnicoSeries { get; set; }
        public virtual DbSet<GsClassificacaoTitulos> GsClassificacaoTitulos { get; set; }
        public virtual DbSet<GsClientesFornecedores> GsClientesFornecedores { get; set; }
        public virtual DbSet<GsClientesFornecedoresContatos> GsClientesFornecedoresContatos { get; set; }
        public virtual DbSet<GsClientesFornecedoresEndereco> GsClientesFornecedoresEndereco { get; set; }
        public virtual DbSet<GsClientesFornecedoresEndereco2> GsClientesFornecedoresEndereco2 { get; set; }
        public virtual DbSet<GsClientesFornecedoresGrupos> GsClientesFornecedoresGrupos { get; set; }
        public virtual DbSet<GsClientesFornecedoresObs> GsClientesFornecedoresObs { get; set; }
        public virtual DbSet<GsClientesFornecedoresOrigem> GsClientesFornecedoresOrigem { get; set; }
        public virtual DbSet<GsCodigos> GsCodigos { get; set; }
        public virtual DbSet<GsComissaovendas> GsComissaovendas { get; set; }
        public virtual DbSet<GsCompromissosAgendados> GsCompromissosAgendados { get; set; }
        public virtual DbSet<GsCompromissosAgendadosAtendentes> GsCompromissosAgendadosAtendentes { get; set; }
        public virtual DbSet<GsCondicoesPagto> GsCondicoesPagto { get; set; }
        public virtual DbSet<GsCondicoesPagtoParcelas> GsCondicoesPagtoParcelas { get; set; }
        public virtual DbSet<GsConfImpressora> GsConfImpressora { get; set; }
        public virtual DbSet<GsContasBancarias> GsContasBancarias { get; set; }
        public virtual DbSet<GsContasBancariasCheque> GsContasBancariasCheque { get; set; }
        public virtual DbSet<GsContasPagarBaixas> GsContasPagarBaixas { get; set; }
        public virtual DbSet<GsContasPagarCcusto> GsContasPagarCcusto { get; set; }
        public virtual DbSet<GsContasPagarParcela> GsContasPagarParcela { get; set; }
        public virtual DbSet<GsContasPagarParcelasBak> GsContasPagarParcelasBak { get; set; }
        public virtual DbSet<GsContasPagarTitulos> GsContasPagarTitulos { get; set; }
        public virtual DbSet<GsContasReceberBaixas> GsContasReceberBaixas { get; set; }
        public virtual DbSet<GsContasReceberBaixasCheques> GsContasReceberBaixasCheques { get; set; }
        public virtual DbSet<GsContasReceberCcusto> GsContasReceberCcusto { get; set; }
        public virtual DbSet<GsContasReceberCobban> GsContasReceberCobban { get; set; }
        public virtual DbSet<GsContasReceberParcelas> GsContasReceberParcelas { get; set; }
        public virtual DbSet<GsContasReceberTitulos> GsContasReceberTitulos { get; set; }
        public virtual DbSet<GsContratos> GsContratos { get; set; }
        public virtual DbSet<GsContratosEquipamentos> GsContratosEquipamentos { get; set; }
        public virtual DbSet<GsContratosRag> GsContratosRag { get; set; }
        public virtual DbSet<GsContratosRagTipoVisitas> GsContratosRagTipoVisitas { get; set; }
        public virtual DbSet<GsContratosRagVisitas> GsContratosRagVisitas { get; set; }
        public virtual DbSet<GsControleCheque> GsControleCheque { get; set; }
        public virtual DbSet<GsControleContratos> GsControleContratos { get; set; }
        public virtual DbSet<GsControleDocumentos> GsControleDocumentos { get; set; }
        public virtual DbSet<GsControleTalaoCheques> GsControleTalaoCheques { get; set; }
        public virtual DbSet<GsControleVersao> GsControleVersao { get; set; }
        public virtual DbSet<GsControleVersaoGiGeral> GsControleVersaoGiGeral { get; set; }
        public virtual DbSet<GsControleVersaoGiRefratario> GsControleVersaoGiRefratario { get; set; }
        public virtual DbSet<GsControleVersaoPublicacao> GsControleVersaoPublicacao { get; set; }
        public virtual DbSet<GsCotasvendas> GsCotasvendas { get; set; }
        public virtual DbSet<GsCotasvendasFuncionarios> GsCotasvendasFuncionarios { get; set; }
        public virtual DbSet<GsDatacenterHistorico> GsDatacenterHistorico { get; set; }
        public virtual DbSet<GsDatacenterHistoricoReajuste> GsDatacenterHistoricoReajuste { get; set; }
        public virtual DbSet<GsDistribuidores> GsDistribuidores { get; set; }
        public virtual DbSet<GsEquipamentos> GsEquipamentos { get; set; }
        public virtual DbSet<GsEquipamentosAgenda> GsEquipamentosAgenda { get; set; }
        public virtual DbSet<GsEquipamentosApresentacao> GsEquipamentosApresentacao { get; set; }
        public virtual DbSet<GsEquipamentosClassificacao> GsEquipamentosClassificacao { get; set; }
        public virtual DbSet<GsEquipamentosFabricantes> GsEquipamentosFabricantes { get; set; }
        public virtual DbSet<GsEquipamentosFamilias> GsEquipamentosFamilias { get; set; }
        public virtual DbSet<GsEquipamentosGrupos> GsEquipamentosGrupos { get; set; }
        public virtual DbSet<GsEquipamentosKitFixo> GsEquipamentosKitFixo { get; set; }
        public virtual DbSet<GsEquipamentosKitfixoMateriais> GsEquipamentosKitfixoMateriais { get; set; }
        public virtual DbSet<GsEquipamentosKitfixoServicos> GsEquipamentosKitfixoServicos { get; set; }
        public virtual DbSet<GsEquipamentosRecebidosApp> GsEquipamentosRecebidosApp { get; set; }
        public virtual DbSet<GsEquipamentosSerie> GsEquipamentosSerie { get; set; }
        public virtual DbSet<GsEquipamentosTabPreco> GsEquipamentosTabPreco { get; set; }
        public virtual DbSet<GsEquipesvendas> GsEquipesvendas { get; set; }
        public virtual DbSet<GsEquipesvendasComissoes> GsEquipesvendasComissoes { get; set; }
        public virtual DbSet<GsEquipesvendasFuncionarios> GsEquipesvendasFuncionarios { get; set; }
        public virtual DbSet<GsEstradas> GsEstradas { get; set; }
        public virtual DbSet<GsEventos> GsEventos { get; set; }
        public virtual DbSet<GsEventosAdiantamentos> GsEventosAdiantamentos { get; set; }
        public virtual DbSet<GsEventosAgenda> GsEventosAgenda { get; set; }
        public virtual DbSet<GsEventosAgendaTecnicos> GsEventosAgendaTecnicos { get; set; }
        public virtual DbSet<GsEventosAgendaTecnicosLog> GsEventosAgendaTecnicosLog { get; set; }
        public virtual DbSet<GsEventosAndamento> GsEventosAndamento { get; set; }
        public virtual DbSet<GsEventosArquivosLog> GsEventosArquivosLog { get; set; }
        public virtual DbSet<GsEventosBv> GsEventosBv { get; set; }
        public virtual DbSet<GsEventosCliente> GsEventosCliente { get; set; }
        public virtual DbSet<GsEventosConsumo> GsEventosConsumo { get; set; }
        public virtual DbSet<GsEventosDespesas> GsEventosDespesas { get; set; }
        public virtual DbSet<GsEventosDespesasCcusto> GsEventosDespesasCcusto { get; set; }
        public virtual DbSet<GsEventosEquipamentos> GsEventosEquipamentos { get; set; }
        public virtual DbSet<GsEventosEquipamentosSeries> GsEventosEquipamentosSeries { get; set; }
        public virtual DbSet<GsEventosEquipamentosSeriesKit> GsEventosEquipamentosSeriesKit { get; set; }
        public virtual DbSet<GsEventosEquipamentosTerceiros> GsEventosEquipamentosTerceiros { get; set; }
        public virtual DbSet<GsEventosEquipamentosTerceirosCcusto> GsEventosEquipamentosTerceirosCcusto { get; set; }
        public virtual DbSet<GsEventosEquipe> GsEventosEquipe { get; set; }
        public virtual DbSet<GsEventosEquipeFuncionarios> GsEventosEquipeFuncionarios { get; set; }
        public virtual DbSet<GsEventosEquipeLegenda> GsEventosEquipeLegenda { get; set; }
        public virtual DbSet<GsEventosEquipes> GsEventosEquipes { get; set; }
        public virtual DbSet<GsEventosEquipesFuncionarios> GsEventosEquipesFuncionarios { get; set; }
        public virtual DbSet<GsEventosHoraTecnica> GsEventosHoraTecnica { get; set; }
        public virtual DbSet<GsEventosHoraTecnicaCcusto> GsEventosHoraTecnicaCcusto { get; set; }
        public virtual DbSet<GsEventosLocal> GsEventosLocal { get; set; }
        public virtual DbSet<GsEventosMateriais> GsEventosMateriais { get; set; }
        public virtual DbSet<GsEventosMateriaisItens> GsEventosMateriaisItens { get; set; }
        public virtual DbSet<GsEventosRag> GsEventosRag { get; set; }
        public virtual DbSet<GsEventosRelacaoEquipamentos> GsEventosRelacaoEquipamentos { get; set; }
        public virtual DbSet<GsEventosRelacaoEquipamentosLab> GsEventosRelacaoEquipamentosLab { get; set; }
        public virtual DbSet<GsEventosRelacaoEquipamentosLabItens> GsEventosRelacaoEquipamentosLabItens { get; set; }
        public virtual DbSet<GsEventosRelacaoMateriais> GsEventosRelacaoMateriais { get; set; }
        public virtual DbSet<GsEventosServicos> GsEventosServicos { get; set; }
        public virtual DbSet<GsEventosTecnicos> GsEventosTecnicos { get; set; }
        public virtual DbSet<GsEventosVeiculos> GsEventosVeiculos { get; set; }
        public virtual DbSet<GsEventosVeiculosLegenda> GsEventosVeiculosLegenda { get; set; }
        public virtual DbSet<GsEventosVeiculosMotoristas> GsEventosVeiculosMotoristas { get; set; }
        public virtual DbSet<GsFalhaSeguranca> GsFalhaSeguranca { get; set; }
        public virtual DbSet<GsFamiliaServicos> GsFamiliaServicos { get; set; }
        public virtual DbSet<GsFaq> GsFaq { get; set; }
        public virtual DbSet<GsFluxoCaixa> GsFluxoCaixa { get; set; }
        public virtual DbSet<GsFluxoComentarios> GsFluxoComentarios { get; set; }
        public virtual DbSet<GsFolha> GsFolha { get; set; }
        public virtual DbSet<GsFolhaAux> GsFolhaAux { get; set; }
        public virtual DbSet<GsFolhaLancamentos> GsFolhaLancamentos { get; set; }
        public virtual DbSet<GsFolhaPagamento> GsFolhaPagamento { get; set; }
        public virtual DbSet<GsFolhaVerbas> GsFolhaVerbas { get; set; }
        public virtual DbSet<GsFolhaVerbasDescontos> GsFolhaVerbasDescontos { get; set; }
        public virtual DbSet<GsFornecedoresTipos> GsFornecedoresTipos { get; set; }
        public virtual DbSet<GsFuncionarios> GsFuncionarios { get; set; }
        public virtual DbSet<GsFuncionariosBeneficios> GsFuncionariosBeneficios { get; set; }
        public virtual DbSet<GsFuncionariosCargosNiveis> GsFuncionariosCargosNiveis { get; set; }
        public virtual DbSet<GsFuncionariosCentroCusto> GsFuncionariosCentroCusto { get; set; }
        public virtual DbSet<GsFuncionariosContabancaria> GsFuncionariosContabancaria { get; set; }
        public virtual DbSet<GsFuncionariosFerias> GsFuncionariosFerias { get; set; }
        public virtual DbSet<GsFuncionariosFilhos> GsFuncionariosFilhos { get; set; }
        public virtual DbSet<GsFuncionariosFolha> GsFuncionariosFolha { get; set; }
        public virtual DbSet<GsFuncionariosHistorico> GsFuncionariosHistorico { get; set; }
        public virtual DbSet<GsFuncionariosTelefones> GsFuncionariosTelefones { get; set; }
        public virtual DbSet<GsGerenciadorArquivos> GsGerenciadorArquivos { get; set; }
        public virtual DbSet<GsGruposMateriais> GsGruposMateriais { get; set; }
        public virtual DbSet<GsIgrejaRecepcao> GsIgrejaRecepcao { get; set; }
        public virtual DbSet<GsInventarioMaterial> GsInventarioMaterial { get; set; }
        public virtual DbSet<GsInventarioMaterialItens> GsInventarioMaterialItens { get; set; }
        public virtual DbSet<GsKitEquipamentos> GsKitEquipamentos { get; set; }
        public virtual DbSet<GsKitMateriais> GsKitMateriais { get; set; }
        public virtual DbSet<GsKitServicos> GsKitServicos { get; set; }
        public virtual DbSet<GsLancamentosFolha> GsLancamentosFolha { get; set; }
        public virtual DbSet<GsLegenda> GsLegenda { get; set; }
        public virtual DbSet<GsLicencaAcesso> GsLicencaAcesso { get; set; }
        public virtual DbSet<GsLog> GsLog { get; set; }
        public virtual DbSet<GsLogAcesso> GsLogAcesso { get; set; }
        public virtual DbSet<GsLogEmail> GsLogEmail { get; set; }
        public virtual DbSet<GsLogEmpresa> GsLogEmpresa { get; set; }
        public virtual DbSet<GsLogPolitica> GsLogPolitica { get; set; }
        public virtual DbSet<GsManutencaoEquipamentos> GsManutencaoEquipamentos { get; set; }
        public virtual DbSet<GsManutencaoHistorico> GsManutencaoHistorico { get; set; }
        public virtual DbSet<GsManutencaoHistoricoReajuste> GsManutencaoHistoricoReajuste { get; set; }
        public virtual DbSet<GsMateriais> GsMateriais { get; set; }
        public virtual DbSet<GsMateriaisFabricantes> GsMateriaisFabricantes { get; set; }
        public virtual DbSet<GsMensagem> GsMensagem { get; set; }
        public virtual DbSet<GsMensagensRecado> GsMensagensRecado { get; set; }
        public virtual DbSet<GsMobiliario> GsMobiliario { get; set; }
        public virtual DbSet<GsMobiliarioGrupos> GsMobiliarioGrupos { get; set; }
        public virtual DbSet<GsMovimentacaoBancaria> GsMovimentacaoBancaria { get; set; }
        public virtual DbSet<GsMovimentacaoCaixa> GsMovimentacaoCaixa { get; set; }
        public virtual DbSet<GsMovimentacaoEstoque> GsMovimentacaoEstoque { get; set; }
        public virtual DbSet<GsMovimentacaoEstoqueItens> GsMovimentacaoEstoqueItens { get; set; }
        public virtual DbSet<GsMusicas04022016142358> GsMusicas04022016142358 { get; set; }
        public virtual DbSet<GsMusicas04022016143046> GsMusicas04022016143046 { get; set; }
        public virtual DbSet<GsMusicas04022016143419> GsMusicas04022016143419 { get; set; }
        public virtual DbSet<GsMusicas04022016143459> GsMusicas04022016143459 { get; set; }
        public virtual DbSet<GsMusicas04022016144018> GsMusicas04022016144018 { get; set; }
        public virtual DbSet<GsMusicas04022016144219> GsMusicas04022016144219 { get; set; }
        public virtual DbSet<GsMusicas04022016144528> GsMusicas04022016144528 { get; set; }
        public virtual DbSet<GsMusicas04022016144610> GsMusicas04022016144610 { get; set; }
        public virtual DbSet<GsMusicas04022016144631> GsMusicas04022016144631 { get; set; }
        public virtual DbSet<GsMusicas04022016145035> GsMusicas04022016145035 { get; set; }
        public virtual DbSet<GsMusicas04022016145107> GsMusicas04022016145107 { get; set; }
        public virtual DbSet<GsMusicas04022016145841> GsMusicas04022016145841 { get; set; }
        public virtual DbSet<GsMusicas04022016145901> GsMusicas04022016145901 { get; set; }
        public virtual DbSet<GsMusicas04022016145932> GsMusicas04022016145932 { get; set; }
        public virtual DbSet<GsMusicas04032015162234> GsMusicas04032015162234 { get; set; }
        public virtual DbSet<GsMusicas04082015150159> GsMusicas04082015150159 { get; set; }
        public virtual DbSet<GsMusicas04082015162537> GsMusicas04082015162537 { get; set; }
        public virtual DbSet<GsMusicas04112014145515> GsMusicas04112014145515 { get; set; }
        public virtual DbSet<GsMusicas04122015165536> GsMusicas04122015165536 { get; set; }
        public virtual DbSet<GsMusicas05012016115732> GsMusicas05012016115732 { get; set; }
        public virtual DbSet<GsMusicas05012016115735> GsMusicas05012016115735 { get; set; }
        public virtual DbSet<GsMusicas05022015191124> GsMusicas05022015191124 { get; set; }
        public virtual DbSet<GsMusicas05022016125817> GsMusicas05022016125817 { get; set; }
        public virtual DbSet<GsMusicas05022016135318> GsMusicas05022016135318 { get; set; }
        public virtual DbSet<GsMusicas05022016135321> GsMusicas05022016135321 { get; set; }
        public virtual DbSet<GsMusicas05022016152356> GsMusicas05022016152356 { get; set; }
        public virtual DbSet<GsMusicas05022016152616> GsMusicas05022016152616 { get; set; }
        public virtual DbSet<GsMusicas05052015172334> GsMusicas05052015172334 { get; set; }
        public virtual DbSet<GsMusicas05082015162029> GsMusicas05082015162029 { get; set; }
        public virtual DbSet<GsMusicas05082015162034> GsMusicas05082015162034 { get; set; }
        public virtual DbSet<GsMusicas05112014141708> GsMusicas05112014141708 { get; set; }
        public virtual DbSet<GsMusicas05112015102746> GsMusicas05112015102746 { get; set; }
        public virtual DbSet<GsMusicas05112015102756> GsMusicas05112015102756 { get; set; }
        public virtual DbSet<GsMusicas05112015111615> GsMusicas05112015111615 { get; set; }
        public virtual DbSet<GsMusicas05112015111617> GsMusicas05112015111617 { get; set; }
        public virtual DbSet<GsMusicas06012016163147> GsMusicas06012016163147 { get; set; }
        public virtual DbSet<GsMusicas06042015152420> GsMusicas06042015152420 { get; set; }
        public virtual DbSet<GsMusicas06072015120348> GsMusicas06072015120348 { get; set; }
        public virtual DbSet<GsMusicas06102015123035> GsMusicas06102015123035 { get; set; }
        public virtual DbSet<GsMusicas07082015144612> GsMusicas07082015144612 { get; set; }
        public virtual DbSet<GsMusicas07102015142836> GsMusicas07102015142836 { get; set; }
        public virtual DbSet<GsMusicas07102015144056> GsMusicas07102015144056 { get; set; }
        public virtual DbSet<GsMusicas07102015164452> GsMusicas07102015164452 { get; set; }
        public virtual DbSet<GsMusicas07102015164600> GsMusicas07102015164600 { get; set; }
        public virtual DbSet<GsMusicas07102015164749> GsMusicas07102015164749 { get; set; }
        public virtual DbSet<GsMusicas07102015173015> GsMusicas07102015173015 { get; set; }
        public virtual DbSet<GsMusicas07122015105620> GsMusicas07122015105620 { get; set; }
        public virtual DbSet<GsMusicas07122015105641> GsMusicas07122015105641 { get; set; }
        public virtual DbSet<GsMusicas08042015180634> GsMusicas08042015180634 { get; set; }
        public virtual DbSet<GsMusicas08052015152323> GsMusicas08052015152323 { get; set; }
        public virtual DbSet<GsMusicas08052015174521> GsMusicas08052015174521 { get; set; }
        public virtual DbSet<GsMusicas08072015150439> GsMusicas08072015150439 { get; set; }
        public virtual DbSet<GsMusicas08102015092556> GsMusicas08102015092556 { get; set; }
        public virtual DbSet<GsMusicas08102015092640> GsMusicas08102015092640 { get; set; }
        public virtual DbSet<GsMusicas08102015092751> GsMusicas08102015092751 { get; set; }
        public virtual DbSet<GsMusicas08102015105631> GsMusicas08102015105631 { get; set; }
        public virtual DbSet<GsMusicas08102015105841> GsMusicas08102015105841 { get; set; }
        public virtual DbSet<GsMusicas08102015111326> GsMusicas08102015111326 { get; set; }
        public virtual DbSet<GsMusicas08102015115548> GsMusicas08102015115548 { get; set; }
        public virtual DbSet<GsMusicas08102015143745> GsMusicas08102015143745 { get; set; }
        public virtual DbSet<GsMusicas08102015143917> GsMusicas08102015143917 { get; set; }
        public virtual DbSet<GsMusicas08102015144032> GsMusicas08102015144032 { get; set; }
        public virtual DbSet<GsMusicas09022015150414> GsMusicas09022015150414 { get; set; }
        public virtual DbSet<GsMusicas09022015164202> GsMusicas09022015164202 { get; set; }
        public virtual DbSet<GsMusicas09062015154032> GsMusicas09062015154032 { get; set; }
        public virtual DbSet<GsMusicas09112015141051> GsMusicas09112015141051 { get; set; }
        public virtual DbSet<GsMusicas10062015022130> GsMusicas10062015022130 { get; set; }
        public virtual DbSet<GsMusicas10112015101035> GsMusicas10112015101035 { get; set; }
        public virtual DbSet<GsMusicas10112015125554> GsMusicas10112015125554 { get; set; }
        public virtual DbSet<GsMusicas10122015165456> GsMusicas10122015165456 { get; set; }
        public virtual DbSet<GsMusicas10122015165531> GsMusicas10122015165531 { get; set; }
        public virtual DbSet<GsMusicas10122015165544> GsMusicas10122015165544 { get; set; }
        public virtual DbSet<GsMusicas10142015102047am> GsMusicas10142015102047am { get; set; }
        public virtual DbSet<GsMusicas10142015104530am> GsMusicas10142015104530am { get; set; }
        public virtual DbSet<GsMusicas10142015110324am> GsMusicas10142015110324am { get; set; }
        public virtual DbSet<GsMusicas10142015123026pm> GsMusicas10142015123026pm { get; set; }
        public virtual DbSet<GsMusicas1014201542345pm> GsMusicas1014201542345pm { get; set; }
        public virtual DbSet<GsMusicas1015201585749am> GsMusicas1015201585749am { get; set; }
        public virtual DbSet<GsMusicas1020201541022pm> GsMusicas1020201541022pm { get; set; }
        public virtual DbSet<GsMusicas11012016104100> GsMusicas11012016104100 { get; set; }
        public virtual DbSet<GsMusicas11012016104150> GsMusicas11012016104150 { get; set; }
        public virtual DbSet<GsMusicas11012016104238> GsMusicas11012016104238 { get; set; }
        public virtual DbSet<GsMusicas11012016104306> GsMusicas11012016104306 { get; set; }
        public virtual DbSet<GsMusicas11012016104603> GsMusicas11012016104603 { get; set; }
        public virtual DbSet<GsMusicas11012016105223> GsMusicas11012016105223 { get; set; }
        public virtual DbSet<GsMusicas11012016105237> GsMusicas11012016105237 { get; set; }
        public virtual DbSet<GsMusicas11012016105255> GsMusicas11012016105255 { get; set; }
        public virtual DbSet<GsMusicas11012016105316> GsMusicas11012016105316 { get; set; }
        public virtual DbSet<GsMusicas11012016105340> GsMusicas11012016105340 { get; set; }
        public virtual DbSet<GsMusicas11022016103003> GsMusicas11022016103003 { get; set; }
        public virtual DbSet<GsMusicas11022016103822> GsMusicas11022016103822 { get; set; }
        public virtual DbSet<GsMusicas11022016103918> GsMusicas11022016103918 { get; set; }
        public virtual DbSet<GsMusicas11022016103959> GsMusicas11022016103959 { get; set; }
        public virtual DbSet<GsMusicas11092015124411> GsMusicas11092015124411 { get; set; }
        public virtual DbSet<GsMusicas11092015124742> GsMusicas11092015124742 { get; set; }
        public virtual DbSet<GsMusicas11112014113754> GsMusicas11112014113754 { get; set; }
        public virtual DbSet<GsMusicas11122015162600> GsMusicas11122015162600 { get; set; }
        public virtual DbSet<GsMusicas12012016163046> GsMusicas12012016163046 { get; set; }
        public virtual DbSet<GsMusicas12012016165037> GsMusicas12012016165037 { get; set; }
        public virtual DbSet<GsMusicas12012016165551> GsMusicas12012016165551 { get; set; }
        public virtual DbSet<GsMusicas12022016112200> GsMusicas12022016112200 { get; set; }
        public virtual DbSet<GsMusicas12022016112217> GsMusicas12022016112217 { get; set; }
        public virtual DbSet<GsMusicas12022016114833> GsMusicas12022016114833 { get; set; }
        public virtual DbSet<GsMusicas12022016122438> GsMusicas12022016122438 { get; set; }
        public virtual DbSet<GsMusicas12022016122608> GsMusicas12022016122608 { get; set; }
        public virtual DbSet<GsMusicas12022016122706> GsMusicas12022016122706 { get; set; }
        public virtual DbSet<GsMusicas12022016135002> GsMusicas12022016135002 { get; set; }
        public virtual DbSet<GsMusicas12022016160609> GsMusicas12022016160609 { get; set; }
        public virtual DbSet<GsMusicas12112015112015> GsMusicas12112015112015 { get; set; }
        public virtual DbSet<GsMusicas12112015112118> GsMusicas12112015112118 { get; set; }
        public virtual DbSet<GsMusicas12112015135143> GsMusicas12112015135143 { get; set; }
        public virtual DbSet<GsMusicas12112015140313> GsMusicas12112015140313 { get; set; }
        public virtual DbSet<GsMusicas12112015142634> GsMusicas12112015142634 { get; set; }
        public virtual DbSet<GsMusicas12112015144419> GsMusicas12112015144419 { get; set; }
        public virtual DbSet<GsMusicas12112015145101> GsMusicas12112015145101 { get; set; }
        public virtual DbSet<GsMusicas12112015145145> GsMusicas12112015145145 { get; set; }
        public virtual DbSet<GsMusicas12112015145225> GsMusicas12112015145225 { get; set; }
        public virtual DbSet<GsMusicas12112015145427> GsMusicas12112015145427 { get; set; }
        public virtual DbSet<GsMusicas12112015150237> GsMusicas12112015150237 { get; set; }
        public virtual DbSet<GsMusicas12112015151030> GsMusicas12112015151030 { get; set; }
        public virtual DbSet<GsMusicas13012015173913> GsMusicas13012015173913 { get; set; }
        public virtual DbSet<GsMusicas13012016101407> GsMusicas13012016101407 { get; set; }
        public virtual DbSet<GsMusicas13012016101717> GsMusicas13012016101717 { get; set; }
        public virtual DbSet<GsMusicas13012016101733> GsMusicas13012016101733 { get; set; }
        public virtual DbSet<GsMusicas13012016113706> GsMusicas13012016113706 { get; set; }
        public virtual DbSet<GsMusicas13012016113821> GsMusicas13012016113821 { get; set; }
        public virtual DbSet<GsMusicas13012016114522> GsMusicas13012016114522 { get; set; }
        public virtual DbSet<GsMusicas13012016114600> GsMusicas13012016114600 { get; set; }
        public virtual DbSet<GsMusicas13012016115459> GsMusicas13012016115459 { get; set; }
        public virtual DbSet<GsMusicas13012016115916> GsMusicas13012016115916 { get; set; }
        public virtual DbSet<GsMusicas13012016120020> GsMusicas13012016120020 { get; set; }
        public virtual DbSet<GsMusicas13012016121954> GsMusicas13012016121954 { get; set; }
        public virtual DbSet<GsMusicas13012016124147> GsMusicas13012016124147 { get; set; }
        public virtual DbSet<GsMusicas13012016124506> GsMusicas13012016124506 { get; set; }
        public virtual DbSet<GsMusicas13012016124803> GsMusicas13012016124803 { get; set; }
        public virtual DbSet<GsMusicas13012016124818> GsMusicas13012016124818 { get; set; }
        public virtual DbSet<GsMusicas13012016130332> GsMusicas13012016130332 { get; set; }
        public virtual DbSet<GsMusicas13012016141451> GsMusicas13012016141451 { get; set; }
        public virtual DbSet<GsMusicas13012016141459> GsMusicas13012016141459 { get; set; }
        public virtual DbSet<GsMusicas13012016150229> GsMusicas13012016150229 { get; set; }
        public virtual DbSet<GsMusicas13012016150518> GsMusicas13012016150518 { get; set; }
        public virtual DbSet<GsMusicas13012016150534> GsMusicas13012016150534 { get; set; }
        public virtual DbSet<GsMusicas13012016150814> GsMusicas13012016150814 { get; set; }
        public virtual DbSet<GsMusicas13012016151542> GsMusicas13012016151542 { get; set; }
        public virtual DbSet<GsMusicas13022015105652> GsMusicas13022015105652 { get; set; }
        public virtual DbSet<GsMusicas13022015153343> GsMusicas13022015153343 { get; set; }
        public virtual DbSet<GsMusicas13052015093007> GsMusicas13052015093007 { get; set; }
        public virtual DbSet<GsMusicas13102015094723> GsMusicas13102015094723 { get; set; }
        public virtual DbSet<GsMusicas13102015143929> GsMusicas13102015143929 { get; set; }
        public virtual DbSet<GsMusicas13102015144608> GsMusicas13102015144608 { get; set; }
        public virtual DbSet<GsMusicas13102015151700> GsMusicas13102015151700 { get; set; }
        public virtual DbSet<GsMusicas13102015151941> GsMusicas13102015151941 { get; set; }
        public virtual DbSet<GsMusicas13102015152903> GsMusicas13102015152903 { get; set; }
        public virtual DbSet<GsMusicas13102015162440> GsMusicas13102015162440 { get; set; }
        public virtual DbSet<GsMusicas13102015162833> GsMusicas13102015162833 { get; set; }
        public virtual DbSet<GsMusicas13102015162908> GsMusicas13102015162908 { get; set; }
        public virtual DbSet<GsMusicas13102015165701> GsMusicas13102015165701 { get; set; }
        public virtual DbSet<GsMusicas13102015170127> GsMusicas13102015170127 { get; set; }
        public virtual DbSet<GsMusicas13102015171130> GsMusicas13102015171130 { get; set; }
        public virtual DbSet<GsMusicas13102015171819> GsMusicas13102015171819 { get; set; }
        public virtual DbSet<GsMusicas1312015173910> GsMusicas1312015173910 { get; set; }
        public virtual DbSet<GsMusicas14012016090742> GsMusicas14012016090742 { get; set; }
        public virtual DbSet<GsMusicas14012016090830> GsMusicas14012016090830 { get; set; }
        public virtual DbSet<GsMusicas14012016110617> GsMusicas14012016110617 { get; set; }
        public virtual DbSet<GsMusicas14012016110718> GsMusicas14012016110718 { get; set; }
        public virtual DbSet<GsMusicas14082015175911> GsMusicas14082015175911 { get; set; }
        public virtual DbSet<GsMusicas14102015100126> GsMusicas14102015100126 { get; set; }
        public virtual DbSet<GsMusicas14122015161014> GsMusicas14122015161014 { get; set; }
        public virtual DbSet<GsMusicas14122015161039> GsMusicas14122015161039 { get; set; }
        public virtual DbSet<GsMusicas14122015161515> GsMusicas14122015161515 { get; set; }
        public virtual DbSet<GsMusicas15012015182228> GsMusicas15012015182228 { get; set; }
        public virtual DbSet<GsMusicas15092015164231> GsMusicas15092015164231 { get; set; }
        public virtual DbSet<GsMusicas15092015165121> GsMusicas15092015165121 { get; set; }
        public virtual DbSet<GsMusicas15092015170343> GsMusicas15092015170343 { get; set; }
        public virtual DbSet<GsMusicas15102015125727> GsMusicas15102015125727 { get; set; }
        public virtual DbSet<GsMusicas15122015111552> GsMusicas15122015111552 { get; set; }
        public virtual DbSet<GsMusicas15122015111558> GsMusicas15122015111558 { get; set; }
        public virtual DbSet<GsMusicas15122015142239> GsMusicas15122015142239 { get; set; }
        public virtual DbSet<GsMusicas15122015204122> GsMusicas15122015204122 { get; set; }
        public virtual DbSet<GsMusicas16022016094719> GsMusicas16022016094719 { get; set; }
        public virtual DbSet<GsMusicas16022016094855> GsMusicas16022016094855 { get; set; }
        public virtual DbSet<GsMusicas16022016094949> GsMusicas16022016094949 { get; set; }
        public virtual DbSet<GsMusicas16022016095032> GsMusicas16022016095032 { get; set; }
        public virtual DbSet<GsMusicas16022016095105> GsMusicas16022016095105 { get; set; }
        public virtual DbSet<GsMusicas16022016095129> GsMusicas16022016095129 { get; set; }
        public virtual DbSet<GsMusicas16022016095246> GsMusicas16022016095246 { get; set; }
        public virtual DbSet<GsMusicas16022016095401> GsMusicas16022016095401 { get; set; }
        public virtual DbSet<GsMusicas16022016163721> GsMusicas16022016163721 { get; set; }
        public virtual DbSet<GsMusicas16042015172943> GsMusicas16042015172943 { get; set; }
        public virtual DbSet<GsMusicas16092015111100> GsMusicas16092015111100 { get; set; }
        public virtual DbSet<GsMusicas16092015111101> GsMusicas16092015111101 { get; set; }
        public virtual DbSet<GsMusicas16092015111816> GsMusicas16092015111816 { get; set; }
        public virtual DbSet<GsMusicas16092015125443> GsMusicas16092015125443 { get; set; }
        public virtual DbSet<GsMusicas16092015132503> GsMusicas16092015132503 { get; set; }
        public virtual DbSet<GsMusicas16112015142528> GsMusicas16112015142528 { get; set; }
        public virtual DbSet<GsMusicas16122015132453> GsMusicas16122015132453 { get; set; }
        public virtual DbSet<GsMusicas16122015132628> GsMusicas16122015132628 { get; set; }
        public virtual DbSet<GsMusicas16122015144153> GsMusicas16122015144153 { get; set; }
        public virtual DbSet<GsMusicas17022016120224> GsMusicas17022016120224 { get; set; }
        public virtual DbSet<GsMusicas17022016142808> GsMusicas17022016142808 { get; set; }
        public virtual DbSet<GsMusicas17022016143643> GsMusicas17022016143643 { get; set; }
        public virtual DbSet<GsMusicas17022016155850> GsMusicas17022016155850 { get; set; }
        public virtual DbSet<GsMusicas17022016163038> GsMusicas17022016163038 { get; set; }
        public virtual DbSet<GsMusicas17032015175515> GsMusicas17032015175515 { get; set; }
        public virtual DbSet<GsMusicas17082015103841> GsMusicas17082015103841 { get; set; }
        public virtual DbSet<GsMusicas17082015103847> GsMusicas17082015103847 { get; set; }
        public virtual DbSet<GsMusicas17082015103929> GsMusicas17082015103929 { get; set; }
        public virtual DbSet<GsMusicas17082015105225> GsMusicas17082015105225 { get; set; }
        public virtual DbSet<GsMusicas17112015160059> GsMusicas17112015160059 { get; set; }
        public virtual DbSet<GsMusicas17112015160337> GsMusicas17112015160337 { get; set; }
        public virtual DbSet<GsMusicas17112015175029> GsMusicas17112015175029 { get; set; }
        public virtual DbSet<GsMusicas17112015175300> GsMusicas17112015175300 { get; set; }
        public virtual DbSet<GsMusicas17122015120859> GsMusicas17122015120859 { get; set; }
        public virtual DbSet<GsMusicas17122015121400> GsMusicas17122015121400 { get; set; }
        public virtual DbSet<GsMusicas17122015121408> GsMusicas17122015121408 { get; set; }
        public virtual DbSet<GsMusicas17122015121415> GsMusicas17122015121415 { get; set; }
        public virtual DbSet<GsMusicas17122015121526> GsMusicas17122015121526 { get; set; }
        public virtual DbSet<GsMusicas17122015121617> GsMusicas17122015121617 { get; set; }
        public virtual DbSet<GsMusicas17122015121630> GsMusicas17122015121630 { get; set; }
        public virtual DbSet<GsMusicas17122015121702> GsMusicas17122015121702 { get; set; }
        public virtual DbSet<GsMusicas17122015123658> GsMusicas17122015123658 { get; set; }
        public virtual DbSet<GsMusicas17122015123720> GsMusicas17122015123720 { get; set; }
        public virtual DbSet<GsMusicas17122015123955> GsMusicas17122015123955 { get; set; }
        public virtual DbSet<GsMusicas17122015124056> GsMusicas17122015124056 { get; set; }
        public virtual DbSet<GsMusicas17122015131541> GsMusicas17122015131541 { get; set; }
        public virtual DbSet<GsMusicas17122015171626> GsMusicas17122015171626 { get; set; }
        public virtual DbSet<GsMusicas17122015171827> GsMusicas17122015171827 { get; set; }
        public virtual DbSet<GsMusicas18012016100103> GsMusicas18012016100103 { get; set; }
        public virtual DbSet<GsMusicas18012016145434> GsMusicas18012016145434 { get; set; }
        public virtual DbSet<GsMusicas18012016145550> GsMusicas18012016145550 { get; set; }
        public virtual DbSet<GsMusicas18012016150026> GsMusicas18012016150026 { get; set; }
        public virtual DbSet<GsMusicas18022016102934> GsMusicas18022016102934 { get; set; }
        public virtual DbSet<GsMusicas18022016103818> GsMusicas18022016103818 { get; set; }
        public virtual DbSet<GsMusicas18022016103925> GsMusicas18022016103925 { get; set; }
        public virtual DbSet<GsMusicas18022016104601> GsMusicas18022016104601 { get; set; }
        public virtual DbSet<GsMusicas18022016173259> GsMusicas18022016173259 { get; set; }
        public virtual DbSet<GsMusicas18022016173334> GsMusicas18022016173334 { get; set; }
        public virtual DbSet<GsMusicas18022016173400> GsMusicas18022016173400 { get; set; }
        public virtual DbSet<GsMusicas18022016173415> GsMusicas18022016173415 { get; set; }
        public virtual DbSet<GsMusicas18112015100230> GsMusicas18112015100230 { get; set; }
        public virtual DbSet<GsMusicas18112015100454> GsMusicas18112015100454 { get; set; }
        public virtual DbSet<GsMusicas18112015100518> GsMusicas18112015100518 { get; set; }
        public virtual DbSet<GsMusicas18122015164622> GsMusicas18122015164622 { get; set; }
        public virtual DbSet<GsMusicas18122015164747> GsMusicas18122015164747 { get; set; }
        public virtual DbSet<GsMusicas18122015164811> GsMusicas18122015164811 { get; set; }
        public virtual DbSet<GsMusicas18122015173705> GsMusicas18122015173705 { get; set; }
        public virtual DbSet<GsMusicas18122015180552> GsMusicas18122015180552 { get; set; }
        public virtual DbSet<GsMusicas19022015153858> GsMusicas19022015153858 { get; set; }
        public virtual DbSet<GsMusicas19022016144450> GsMusicas19022016144450 { get; set; }
        public virtual DbSet<GsMusicas19022016144518> GsMusicas19022016144518 { get; set; }
        public virtual DbSet<GsMusicas19022016145322> GsMusicas19022016145322 { get; set; }
        public virtual DbSet<GsMusicas19022016145718> GsMusicas19022016145718 { get; set; }
        public virtual DbSet<GsMusicas19022016151707> GsMusicas19022016151707 { get; set; }
        public virtual DbSet<GsMusicas19022016151913> GsMusicas19022016151913 { get; set; }
        public virtual DbSet<GsMusicas19052015100640> GsMusicas19052015100640 { get; set; }
        public virtual DbSet<GsMusicas19082015161637> GsMusicas19082015161637 { get; set; }
        public virtual DbSet<GsMusicas19082015161639> GsMusicas19082015161639 { get; set; }
        public virtual DbSet<GsMusicas19112015155735> GsMusicas19112015155735 { get; set; }
        public virtual DbSet<GsMusicas19112015162212> GsMusicas19112015162212 { get; set; }
        public virtual DbSet<GsMusicas19112015162426> GsMusicas19112015162426 { get; set; }
        public virtual DbSet<GsMusicas1952015100650> GsMusicas1952015100650 { get; set; }
        public virtual DbSet<GsMusicas1952015100930> GsMusicas1952015100930 { get; set; }
        public virtual DbSet<GsMusicas20032015160155> GsMusicas20032015160155 { get; set; }
        public virtual DbSet<GsMusicas20072015153939> GsMusicas20072015153939 { get; set; }
        public virtual DbSet<GsMusicas20082015130342> GsMusicas20082015130342 { get; set; }
        public virtual DbSet<GsMusicas20082015143653> GsMusicas20082015143653 { get; set; }
        public virtual DbSet<GsMusicas20082015155538> GsMusicas20082015155538 { get; set; }
        public virtual DbSet<GsMusicas20082015155546> GsMusicas20082015155546 { get; set; }
        public virtual DbSet<GsMusicas20082015155609> GsMusicas20082015155609 { get; set; }
        public virtual DbSet<GsMusicas20082015164632> GsMusicas20082015164632 { get; set; }
        public virtual DbSet<GsMusicas20102015141653> GsMusicas20102015141653 { get; set; }
        public virtual DbSet<GsMusicas2072015110154> GsMusicas2072015110154 { get; set; }
        public virtual DbSet<GsMusicas2152015170119> GsMusicas2152015170119 { get; set; }
        public virtual DbSet<GsMusicas22012016100156> GsMusicas22012016100156 { get; set; }
        public virtual DbSet<GsMusicas22012016110513> GsMusicas22012016110513 { get; set; }
        public virtual DbSet<GsMusicas22012016110515> GsMusicas22012016110515 { get; set; }
        public virtual DbSet<GsMusicas22042015170020> GsMusicas22042015170020 { get; set; }
        public virtual DbSet<GsMusicas22102015172615> GsMusicas22102015172615 { get; set; }
        public virtual DbSet<GsMusicas22102015172804> GsMusicas22102015172804 { get; set; }
        public virtual DbSet<GsMusicas22102015174320> GsMusicas22102015174320 { get; set; }
        public virtual DbSet<GsMusicas2242015170019> GsMusicas2242015170019 { get; set; }
        public virtual DbSet<GsMusicas23022016113840> GsMusicas23022016113840 { get; set; }
        public virtual DbSet<GsMusicas23022016113940> GsMusicas23022016113940 { get; set; }
        public virtual DbSet<GsMusicas23022016113952> GsMusicas23022016113952 { get; set; }
        public virtual DbSet<GsMusicas23022016114005> GsMusicas23022016114005 { get; set; }
        public virtual DbSet<GsMusicas23022016165702> GsMusicas23022016165702 { get; set; }
        public virtual DbSet<GsMusicas23022016165705> GsMusicas23022016165705 { get; set; }
        public virtual DbSet<GsMusicas23042015172309> GsMusicas23042015172309 { get; set; }
        public virtual DbSet<GsMusicas23112015112435> GsMusicas23112015112435 { get; set; }
        public virtual DbSet<GsMusicas23112015114611> GsMusicas23112015114611 { get; set; }
        public virtual DbSet<GsMusicas23112015115719> GsMusicas23112015115719 { get; set; }
        public virtual DbSet<GsMusicas23112015131522> GsMusicas23112015131522 { get; set; }
        public virtual DbSet<GsMusicas23112015133300> GsMusicas23112015133300 { get; set; }
        public virtual DbSet<GsMusicas23112015165001> GsMusicas23112015165001 { get; set; }
        public virtual DbSet<GsMusicas2312015154538> GsMusicas2312015154538 { get; set; }
        public virtual DbSet<GsMusicas2312015154544> GsMusicas2312015154544 { get; set; }
        public virtual DbSet<GsMusicas24022016095141> GsMusicas24022016095141 { get; set; }
        public virtual DbSet<GsMusicas24022016095412> GsMusicas24022016095412 { get; set; }
        public virtual DbSet<GsMusicas24032015162511> GsMusicas24032015162511 { get; set; }
        public virtual DbSet<GsMusicas24112015121747> GsMusicas24112015121747 { get; set; }
        public virtual DbSet<GsMusicas24112015181026> GsMusicas24112015181026 { get; set; }
        public virtual DbSet<GsMusicas24112015181055> GsMusicas24112015181055 { get; set; }
        public virtual DbSet<GsMusicas25012016164644> GsMusicas25012016164644 { get; set; }
        public virtual DbSet<GsMusicas25012016170126> GsMusicas25012016170126 { get; set; }
        public virtual DbSet<GsMusicas25092015113716> GsMusicas25092015113716 { get; set; }
        public virtual DbSet<GsMusicas25092015113739> GsMusicas25092015113739 { get; set; }
        public virtual DbSet<GsMusicas25092015113944> GsMusicas25092015113944 { get; set; }
        public virtual DbSet<GsMusicas25092015114242> GsMusicas25092015114242 { get; set; }
        public virtual DbSet<GsMusicas25092015114504> GsMusicas25092015114504 { get; set; }
        public virtual DbSet<GsMusicas25092015114804> GsMusicas25092015114804 { get; set; }
        public virtual DbSet<GsMusicas25092015131838> GsMusicas25092015131838 { get; set; }
        public virtual DbSet<GsMusicas25092015131856> GsMusicas25092015131856 { get; set; }
        public virtual DbSet<GsMusicas25092015141716> GsMusicas25092015141716 { get; set; }
        public virtual DbSet<GsMusicas25092015142040> GsMusicas25092015142040 { get; set; }
        public virtual DbSet<GsMusicas25092015142238> GsMusicas25092015142238 { get; set; }
        public virtual DbSet<GsMusicas25092015142511> GsMusicas25092015142511 { get; set; }
        public virtual DbSet<GsMusicas25112015094315> GsMusicas25112015094315 { get; set; }
        public virtual DbSet<GsMusicas25112015153223> GsMusicas25112015153223 { get; set; }
        public virtual DbSet<GsMusicas25112015153312> GsMusicas25112015153312 { get; set; }
        public virtual DbSet<GsMusicas25112015153531> GsMusicas25112015153531 { get; set; }
        public virtual DbSet<GsMusicas25112015154359> GsMusicas25112015154359 { get; set; }
        public virtual DbSet<GsMusicas25112015154405> GsMusicas25112015154405 { get; set; }
        public virtual DbSet<GsMusicas25112015154411> GsMusicas25112015154411 { get; set; }
        public virtual DbSet<GsMusicas25112015154650> GsMusicas25112015154650 { get; set; }
        public virtual DbSet<GsMusicas25112015154707> GsMusicas25112015154707 { get; set; }
        public virtual DbSet<GsMusicas25112015154754> GsMusicas25112015154754 { get; set; }
        public virtual DbSet<GsMusicas25112015154805> GsMusicas25112015154805 { get; set; }
        public virtual DbSet<GsMusicas25112015154809> GsMusicas25112015154809 { get; set; }
        public virtual DbSet<GsMusicas25112015155702> GsMusicas25112015155702 { get; set; }
        public virtual DbSet<GsMusicas25112015161037> GsMusicas25112015161037 { get; set; }
        public virtual DbSet<GsMusicas25112015161931> GsMusicas25112015161931 { get; set; }
        public virtual DbSet<GsMusicas25112015162919> GsMusicas25112015162919 { get; set; }
        public virtual DbSet<GsMusicas25112015164437> GsMusicas25112015164437 { get; set; }
        public virtual DbSet<GsMusicas25112015173425> GsMusicas25112015173425 { get; set; }
        public virtual DbSet<GsMusicas25112015195146> GsMusicas25112015195146 { get; set; }
        public virtual DbSet<GsMusicas25112015195355> GsMusicas25112015195355 { get; set; }
        public virtual DbSet<GsMusicas26012015164204> GsMusicas26012015164204 { get; set; }
        public virtual DbSet<GsMusicas26012016160004> GsMusicas26012016160004 { get; set; }
        public virtual DbSet<GsMusicas26022016095003> GsMusicas26022016095003 { get; set; }
        public virtual DbSet<GsMusicas26022016095032> GsMusicas26022016095032 { get; set; }
        public virtual DbSet<GsMusicas26022016115253> GsMusicas26022016115253 { get; set; }
        public virtual DbSet<GsMusicas26022016115258> GsMusicas26022016115258 { get; set; }
        public virtual DbSet<GsMusicas26102015165946> GsMusicas26102015165946 { get; set; }
        public virtual DbSet<GsMusicas26112015113645> GsMusicas26112015113645 { get; set; }
        public virtual DbSet<GsMusicas26112015113753> GsMusicas26112015113753 { get; set; }
        public virtual DbSet<GsMusicas26112015114629> GsMusicas26112015114629 { get; set; }
        public virtual DbSet<GsMusicas26112015142550> GsMusicas26112015142550 { get; set; }
        public virtual DbSet<GsMusicas2612015164201> GsMusicas2612015164201 { get; set; }
        public virtual DbSet<GsMusicas27102015173612> GsMusicas27102015173612 { get; set; }
        public virtual DbSet<GsMusicas27102015173705> GsMusicas27102015173705 { get; set; }
        public virtual DbSet<GsMusicas27112015094945> GsMusicas27112015094945 { get; set; }
        public virtual DbSet<GsMusicas27112015110528> GsMusicas27112015110528 { get; set; }
        public virtual DbSet<GsMusicas27112015110621> GsMusicas27112015110621 { get; set; }
        public virtual DbSet<GsMusicas27112015113658> GsMusicas27112015113658 { get; set; }
        public virtual DbSet<GsMusicas27112015113659> GsMusicas27112015113659 { get; set; }
        public virtual DbSet<GsMusicas27112015144519> GsMusicas27112015144519 { get; set; }
        public virtual DbSet<GsMusicas27112015144707> GsMusicas27112015144707 { get; set; }
        public virtual DbSet<GsMusicas27112015145045> GsMusicas27112015145045 { get; set; }
        public virtual DbSet<GsMusicas28012016114714> GsMusicas28012016114714 { get; set; }
        public virtual DbSet<GsMusicas28012016114844> GsMusicas28012016114844 { get; set; }
        public virtual DbSet<GsMusicas28012016171733> GsMusicas28012016171733 { get; set; }
        public virtual DbSet<GsMusicas28012016175119> GsMusicas28012016175119 { get; set; }
        public virtual DbSet<GsMusicas28092015110855> GsMusicas28092015110855 { get; set; }
        public virtual DbSet<GsMusicas28092015161707> GsMusicas28092015161707 { get; set; }
        public virtual DbSet<GsMusicas28092015165823> GsMusicas28092015165823 { get; set; }
        public virtual DbSet<GsMusicas29092015160428> GsMusicas29092015160428 { get; set; }
        public virtual DbSet<GsMusicas29102015112554> GsMusicas29102015112554 { get; set; }
        public virtual DbSet<GsMusicas30092015094109> GsMusicas30092015094109 { get; set; }
        public virtual DbSet<GsMusicas30092015100557> GsMusicas30092015100557 { get; set; }
        public virtual DbSet<GsMusicas30092015100650> GsMusicas30092015100650 { get; set; }
        public virtual DbSet<GsMusicas30092015111742> GsMusicas30092015111742 { get; set; }
        public virtual DbSet<GsMusicas30102014100444> GsMusicas30102014100444 { get; set; }
        public virtual DbSet<GsMusicas30102015110805> GsMusicas30102015110805 { get; set; }
        public virtual DbSet<GsMusicas30102015110943> GsMusicas30102015110943 { get; set; }
        public virtual DbSet<GsMusicas30102015111027> GsMusicas30102015111027 { get; set; }
        public virtual DbSet<GsMusicas30102015111054> GsMusicas30102015111054 { get; set; }
        public virtual DbSet<GsMusicas30102015111119> GsMusicas30102015111119 { get; set; }
        public virtual DbSet<GsMusicas30102015111519> GsMusicas30102015111519 { get; set; }
        public virtual DbSet<GsMusicas30102015111558> GsMusicas30102015111558 { get; set; }
        public virtual DbSet<GsMusicas30102015111629> GsMusicas30102015111629 { get; set; }
        public virtual DbSet<GsMusicas30102015115604> GsMusicas30102015115604 { get; set; }
        public virtual DbSet<GsMusicas30102015115657> GsMusicas30102015115657 { get; set; }
        public virtual DbSet<GsMusicas30102015115834> GsMusicas30102015115834 { get; set; }
        public virtual DbSet<GsMusicas30102015120025> GsMusicas30102015120025 { get; set; }
        public virtual DbSet<GsMusicas30112015105959> GsMusicas30112015105959 { get; set; }
        public virtual DbSet<GsMusicas30112015110148> GsMusicas30112015110148 { get; set; }
        public virtual DbSet<GsMusicas30112015111002> GsMusicas30112015111002 { get; set; }
        public virtual DbSet<GsMusicas30112015143232> GsMusicas30112015143232 { get; set; }
        public virtual DbSet<GsMusicas30112015144710> GsMusicas30112015144710 { get; set; }
        public virtual DbSet<GsMusicas30112015152501> GsMusicas30112015152501 { get; set; }
        public virtual DbSet<GsMusicas552015172330> GsMusicas552015172330 { get; set; }
        public virtual DbSet<GsMusicas672015115939> GsMusicas672015115939 { get; set; }
        public virtual DbSet<GsMusicas672015121400> GsMusicas672015121400 { get; set; }
        public virtual DbSet<GsMusicas672015122216> GsMusicas672015122216 { get; set; }
        public virtual DbSet<GsMusicas672015123159> GsMusicas672015123159 { get; set; }
        public virtual DbSet<GsMusicas842015180735> GsMusicas842015180735 { get; set; }
        public virtual DbSet<GsMusicas852015152321> GsMusicas852015152321 { get; set; }
        public virtual DbSet<GsNfeCondicoesPagto> GsNfeCondicoesPagto { get; set; }
        public virtual DbSet<GsNfeErro> GsNfeErro { get; set; }
        public virtual DbSet<GsNfeInutilizacao> GsNfeInutilizacao { get; set; }
        public virtual DbSet<GsNfeLote> GsNfeLote { get; set; }
        public virtual DbSet<GsNfeXml> GsNfeXml { get; set; }
        public virtual DbSet<GsNfseAtividade> GsNfseAtividade { get; set; }
        public virtual DbSet<GsNfseLote> GsNfseLote { get; set; }
        public virtual DbSet<GsNfseLoteAlerta> GsNfseLoteAlerta { get; set; }
        public virtual DbSet<GsNfseLoteErro> GsNfseLoteErro { get; set; }
        public virtual DbSet<GsNfsePrefeituras> GsNfsePrefeituras { get; set; }
        public virtual DbSet<GsNfseXml> GsNfseXml { get; set; }
        public virtual DbSet<GsNivelRelacao> GsNivelRelacao { get; set; }
        public virtual DbSet<GsNomeEvento> GsNomeEvento { get; set; }
        public virtual DbSet<GsNotaFiscal> GsNotaFiscal { get; set; }
        public virtual DbSet<GsNotaFiscalConfig> GsNotaFiscalConfig { get; set; }
        public virtual DbSet<GsNotaFiscalConfiguracao> GsNotaFiscalConfiguracao { get; set; }
        public virtual DbSet<GsNotaFiscalConfiguracaoOld> GsNotaFiscalConfiguracaoOld { get; set; }
        public virtual DbSet<GsNotaFiscalDescricaoGeral> GsNotaFiscalDescricaoGeral { get; set; }
        public virtual DbSet<GsNotaFiscalEquipamento> GsNotaFiscalEquipamento { get; set; }
        public virtual DbSet<GsNotaFiscalMateriais> GsNotaFiscalMateriais { get; set; }
        public virtual DbSet<GsNotaFiscalNfeAlerta> GsNotaFiscalNfeAlerta { get; set; }
        public virtual DbSet<GsNotaFiscalNfeXml> GsNotaFiscalNfeXml { get; set; }
        public virtual DbSet<GsNotaFiscalParcela> GsNotaFiscalParcela { get; set; }
        public virtual DbSet<GsNotaFiscalSeries> GsNotaFiscalSeries { get; set; }
        public virtual DbSet<GsNotaFiscalServico> GsNotaFiscalServico { get; set; }
        public virtual DbSet<GsObservacoesOrcamentos> GsObservacoesOrcamentos { get; set; }
        public virtual DbSet<GsOcorrenciaAtendimento> GsOcorrenciaAtendimento { get; set; }
        public virtual DbSet<GsOcorrenciaDemissao> GsOcorrenciaDemissao { get; set; }
        public virtual DbSet<GsOperadorasCartao> GsOperadorasCartao { get; set; }
        public virtual DbSet<GsOrcamentoParcelaBak> GsOrcamentoParcelaBak { get; set; }
        public virtual DbSet<GsOrcamentos> GsOrcamentos { get; set; }
        public virtual DbSet<GsOrcamentosAdiantamentos> GsOrcamentosAdiantamentos { get; set; }
        public virtual DbSet<GsOrcamentosAgenda> GsOrcamentosAgenda { get; set; }
        public virtual DbSet<GsOrcamentosAgendaTecnicos> GsOrcamentosAgendaTecnicos { get; set; }
        public virtual DbSet<GsOrcamentosBv> GsOrcamentosBv { get; set; }
        public virtual DbSet<GsOrcamentosCancelamentos> GsOrcamentosCancelamentos { get; set; }
        public virtual DbSet<GsOrcamentosCttParcelas> GsOrcamentosCttParcelas { get; set; }
        public virtual DbSet<GsOrcamentosDespesas> GsOrcamentosDespesas { get; set; }
        public virtual DbSet<GsOrcamentosEquipamentos> GsOrcamentosEquipamentos { get; set; }
        public virtual DbSet<GsOrcamentosEquipamentosTerceiros> GsOrcamentosEquipamentosTerceiros { get; set; }
        public virtual DbSet<GsOrcamentosEstrutura> GsOrcamentosEstrutura { get; set; }
        public virtual DbSet<GsOrcamentosEstruturaEquipamentos> GsOrcamentosEstruturaEquipamentos { get; set; }
        public virtual DbSet<GsOrcamentosGruposDespesas> GsOrcamentosGruposDespesas { get; set; }
        public virtual DbSet<GsOrcamentosImagem> GsOrcamentosImagem { get; set; }
        public virtual DbSet<GsOrcamentosMateriais> GsOrcamentosMateriais { get; set; }
        public virtual DbSet<GsOrcamentosObservacoes> GsOrcamentosObservacoes { get; set; }
        public virtual DbSet<GsOrcamentosParcela> GsOrcamentosParcela { get; set; }
        public virtual DbSet<GsOrcamentosPs> GsOrcamentosPs { get; set; }
        public virtual DbSet<GsOrcamentosServicos> GsOrcamentosServicos { get; set; }
        public virtual DbSet<GsOrcamentosSubgruposDespesas> GsOrcamentosSubgruposDespesas { get; set; }
        public virtual DbSet<GsOrcamentosTecnicos> GsOrcamentosTecnicos { get; set; }
        public virtual DbSet<GsPaises> GsPaises { get; set; }
        public virtual DbSet<GsParametrosPlanoContas> GsParametrosPlanoContas { get; set; }
        public virtual DbSet<GsPedagio> GsPedagio { get; set; }
        public virtual DbSet<GsPedidosCompras> GsPedidosCompras { get; set; }
        public virtual DbSet<GsPedidosComprasCancelamentos> GsPedidosComprasCancelamentos { get; set; }
        public virtual DbSet<GsPedidosComprasCcusto> GsPedidosComprasCcusto { get; set; }
        public virtual DbSet<GsPedidosComprasEquipamentos> GsPedidosComprasEquipamentos { get; set; }
        public virtual DbSet<GsPedidosComprasMateriais> GsPedidosComprasMateriais { get; set; }
        public virtual DbSet<GsPedidosComprasParcelas> GsPedidosComprasParcelas { get; set; }
        public virtual DbSet<GsPedidosComprasSolicitacoes> GsPedidosComprasSolicitacoes { get; set; }
        public virtual DbSet<GsPedidosVendas> GsPedidosVendas { get; set; }
        public virtual DbSet<GsPedidosVendasEquipamentos> GsPedidosVendasEquipamentos { get; set; }
        public virtual DbSet<GsPedidosVendasParcelas> GsPedidosVendasParcelas { get; set; }
        public virtual DbSet<GsPlanocontasContas> GsPlanocontasContas { get; set; }
        public virtual DbSet<GsPlanocontasGrupos> GsPlanocontasGrupos { get; set; }
        public virtual DbSet<GsPlanocontasSetor> GsPlanocontasSetor { get; set; }
        public virtual DbSet<GsPlanocontasSubcontas> GsPlanocontasSubcontas { get; set; }
        public virtual DbSet<GsPlanocontasSubgrupos> GsPlanocontasSubgrupos { get; set; }
        public virtual DbSet<GsPlanosContasNfeRag> GsPlanosContasNfeRag { get; set; }
        public virtual DbSet<GsPrestacaoContas> GsPrestacaoContas { get; set; }
        public virtual DbSet<GsPrestacaoContasItens> GsPrestacaoContasItens { get; set; }
        public virtual DbSet<GsPrivilegios> GsPrivilegios { get; set; }
        public virtual DbSet<GsPrivilegiosUsuarios> GsPrivilegiosUsuarios { get; set; }
        public virtual DbSet<GsRagAtualizacao> GsRagAtualizacao { get; set; }
        public virtual DbSet<GsRagAtualizacaoGestor> GsRagAtualizacaoGestor { get; set; }
        public virtual DbSet<GsRagAvdeb02092014170945> GsRagAvdeb02092014170945 { get; set; }
        public virtual DbSet<GsRagAvdeb09082019140637> GsRagAvdeb09082019140637 { get; set; }
        public virtual DbSet<GsRagAvdeb23032016154340> GsRagAvdeb23032016154340 { get; set; }
        public virtual DbSet<GsRagAvdeb26112015104240> GsRagAvdeb26112015104240 { get; set; }
        public virtual DbSet<GsRagAvdeb28012016163405> GsRagAvdeb28012016163405 { get; set; }
        public virtual DbSet<GsRagAvisoAux> GsRagAvisoAux { get; set; }
        public virtual DbSet<GsRagAvisoDb> GsRagAvisoDb { get; set; }
        public virtual DbSet<GsRagAvisoDbAux> GsRagAvisoDbAux { get; set; }
        public virtual DbSet<GsRagAvisoDbParcelas> GsRagAvisoDbParcelas { get; set; }
        public virtual DbSet<GsRagCobrancaNfe> GsRagCobrancaNfe { get; set; }
        public virtual DbSet<GsRagControleDesenvolvimento> GsRagControleDesenvolvimento { get; set; }
        public virtual DbSet<GsRagControleDesenvolvimentoCom> GsRagControleDesenvolvimentoCom { get; set; }
        public virtual DbSet<GsRagDatacenter> GsRagDatacenter { get; set; }
        public virtual DbSet<GsRagDesenvolvimento> GsRagDesenvolvimento { get; set; }
        public virtual DbSet<GsRagDriverImpressora> GsRagDriverImpressora { get; set; }
        public virtual DbSet<GsRagFaq> GsRagFaq { get; set; }
        public virtual DbSet<GsRagFaqArquivo> GsRagFaqArquivo { get; set; }
        public virtual DbSet<GsRagFaqLog> GsRagFaqLog { get; set; }
        public virtual DbSet<GsRagFaqPrivilegiosGrupos> GsRagFaqPrivilegiosGrupos { get; set; }
        public virtual DbSet<GsRagFaqPrivilegiosSetor> GsRagFaqPrivilegiosSetor { get; set; }
        public virtual DbSet<GsRagFaqPrivilegiosSubgrupos> GsRagFaqPrivilegiosSubgrupos { get; set; }
        public virtual DbSet<GsRagGruposFaq> GsRagGruposFaq { get; set; }
        public virtual DbSet<GsRagImagens> GsRagImagens { get; set; }
        public virtual DbSet<GsRagIndicesReajusteContratos> GsRagIndicesReajusteContratos { get; set; }
        public virtual DbSet<GsRagMensagens> GsRagMensagens { get; set; }
        public virtual DbSet<GsRagMensagensParametros> GsRagMensagensParametros { get; set; }
        public virtual DbSet<GsRagOrcamentos> GsRagOrcamentos { get; set; }
        public virtual DbSet<GsRagOrcamentosCustom> GsRagOrcamentosCustom { get; set; }
        public virtual DbSet<GsRagOrcamentosEquipe> GsRagOrcamentosEquipe { get; set; }
        public virtual DbSet<GsRagOrcamentosParcelas> GsRagOrcamentosParcelas { get; set; }
        public virtual DbSet<GsRagParcelamento> GsRagParcelamento { get; set; }
        public virtual DbSet<GsRagParcelamentoItens> GsRagParcelamentoItens { get; set; }
        public virtual DbSet<GsRagProgramacao> GsRagProgramacao { get; set; }
        public virtual DbSet<GsRagProgramacaoApontamentos> GsRagProgramacaoApontamentos { get; set; }
        public virtual DbSet<GsRagProgramacaoDetalhes> GsRagProgramacaoDetalhes { get; set; }
        public virtual DbSet<GsRagProgramacaoItens> GsRagProgramacaoItens { get; set; }
        public virtual DbSet<GsRagProgramacaoLog> GsRagProgramacaoLog { get; set; }
        public virtual DbSet<GsRagProgramacaoTestes> GsRagProgramacaoTestes { get; set; }
        public virtual DbSet<GsRagProgramadores> GsRagProgramadores { get; set; }
        public virtual DbSet<GsRagRamosAtividadesAssociados> GsRagRamosAtividadesAssociados { get; set; }
        public virtual DbSet<GsRagSubgruposFaq> GsRagSubgruposFaq { get; set; }
        public virtual DbSet<GsRagTabDescontos> GsRagTabDescontos { get; set; }
        public virtual DbSet<GsRagTabDescontosConcessao> GsRagTabDescontosConcessao { get; set; }
        public virtual DbSet<GsRagTabDescontosGi> GsRagTabDescontosGi { get; set; }
        public virtual DbSet<GsRagTabFidelidade> GsRagTabFidelidade { get; set; }
        public virtual DbSet<GsRagTabHospedagem> GsRagTabHospedagem { get; set; }
        public virtual DbSet<GsRagTabImplantacao> GsRagTabImplantacao { get; set; }
        public virtual DbSet<GsRagTabImplantacaoGi> GsRagTabImplantacaoGi { get; set; }
        public virtual DbSet<GsRagTabImplantacaoSubproduto> GsRagTabImplantacaoSubproduto { get; set; }
        public virtual DbSet<GsRagTabPagamento> GsRagTabPagamento { get; set; }
        public virtual DbSet<GsRagTabProdutos> GsRagTabProdutos { get; set; }
        public virtual DbSet<GsRagTabelaNfe> GsRagTabelaNfe { get; set; }
        public virtual DbSet<GsRagUsuariosContas> GsRagUsuariosContas { get; set; }
        public virtual DbSet<GsRagfaqRelacao> GsRagfaqRelacao { get; set; }
        public virtual DbSet<GsRamoAtividade> GsRamoAtividade { get; set; }
        public virtual DbSet<GsRelatorios> GsRelatorios { get; set; }
        public virtual DbSet<GsRelatoriosTabelas> GsRelatoriosTabelas { get; set; }
        public virtual DbSet<GsRelogioAlarme> GsRelogioAlarme { get; set; }
        public virtual DbSet<GsRequisicoesCompras> GsRequisicoesCompras { get; set; }
        public virtual DbSet<GsRequisicoesComprasItens> GsRequisicoesComprasItens { get; set; }
        public virtual DbSet<GsScript> GsScript { get; set; }
        public virtual DbSet<GsServicos> GsServicos { get; set; }
        public virtual DbSet<GsServidores> GsServidores { get; set; }
        public virtual DbSet<GsSimulacaoRecebiveis> GsSimulacaoRecebiveis { get; set; }
        public virtual DbSet<GsSimulacaoRecebiveisDocumento> GsSimulacaoRecebiveisDocumento { get; set; }
        public virtual DbSet<GsSistemaFilesystem> GsSistemaFilesystem { get; set; }
        public virtual DbSet<GsSistemaHelp> GsSistemaHelp { get; set; }
        public virtual DbSet<GsSistemaParametros> GsSistemaParametros { get; set; }
        public virtual DbSet<GsSistemaParametrosMemo> GsSistemaParametrosMemo { get; set; }
        public virtual DbSet<GsSistemaPopup> GsSistemaPopup { get; set; }
        public virtual DbSet<GsSistemaPublicacaoArquivos> GsSistemaPublicacaoArquivos { get; set; }
        public virtual DbSet<GsSistemaUpdate> GsSistemaUpdate { get; set; }
        public virtual DbSet<GsStatusEvento> GsStatusEvento { get; set; }
        public virtual DbSet<GsSubcategoriasTitulos> GsSubcategoriasTitulos { get; set; }
        public virtual DbSet<GsSugestaoPagtoAgrupamento> GsSugestaoPagtoAgrupamento { get; set; }
        public virtual DbSet<GsSugestaoRectoAgrupamento> GsSugestaoRectoAgrupamento { get; set; }
        public virtual DbSet<GsSuporteTecnicoMsg> GsSuporteTecnicoMsg { get; set; }
        public virtual DbSet<GsSystemLog> GsSystemLog { get; set; }
        public virtual DbSet<GsTabelaNcm> GsTabelaNcm { get; set; }
        public virtual DbSet<GsTabelasGestorAtual> GsTabelasGestorAtual { get; set; }
        public virtual DbSet<GsTabelasPrecos> GsTabelasPrecos { get; set; }
        public virtual DbSet<GsTelefones> GsTelefones { get; set; }
        public virtual DbSet<GsTelefonesContas> GsTelefonesContas { get; set; }
        public virtual DbSet<GsTelefonesContasRegistro> GsTelefonesContasRegistro { get; set; }
        public virtual DbSet<GsTipoServidor> GsTipoServidor { get; set; }
        public virtual DbSet<GsTipoTransporte> GsTipoTransporte { get; set; }
        public virtual DbSet<GsTrajeto> GsTrajeto { get; set; }
        public virtual DbSet<GsTransfDadosReajusteDatacenter> GsTransfDadosReajusteDatacenter { get; set; }
        public virtual DbSet<GsTransportador> GsTransportador { get; set; }
        public virtual DbSet<GsUnidadeMedida> GsUnidadeMedida { get; set; }
        public virtual DbSet<GsUsuarioRagMsg> GsUsuarioRagMsg { get; set; }
        public virtual DbSet<GsUsuarios> GsUsuarios { get; set; }
        public virtual DbSet<GsUsuariosAlmoxarifados> GsUsuariosAlmoxarifados { get; set; }
        public virtual DbSet<GsUsuariosParametros> GsUsuariosParametros { get; set; }
        public virtual DbSet<GsUsuariosPrivilegios> GsUsuariosPrivilegios { get; set; }
        public virtual DbSet<GsUsuariosRagMsgSup> GsUsuariosRagMsgSup { get; set; }
        public virtual DbSet<GsUsuariosSistemas> GsUsuariosSistemas { get; set; }
        public virtual DbSet<GsVeiculos> GsVeiculos { get; set; }
        public virtual DbSet<GsVersoesAlteracoes> GsVersoesAlteracoes { get; set; }
        public virtual DbSet<GtApostilasTreinamentos> GtApostilasTreinamentos { get; set; }
        public virtual DbSet<GtApostilasTreinamentosLog> GtApostilasTreinamentosLog { get; set; }
        public virtual DbSet<GtLogSugestoesPagamentos> GtLogSugestoesPagamentos { get; set; }
        public virtual DbSet<GtLogSugestoesRecebimentos> GtLogSugestoesRecebimentos { get; set; }
        public virtual DbSet<GtNfseCamposXml> GtNfseCamposXml { get; set; }
        public virtual DbSet<GtNfseCfopPrefeituras> GtNfseCfopPrefeituras { get; set; }
        public virtual DbSet<GtNfseClassificacaoServicos> GtNfseClassificacaoServicos { get; set; }
        public virtual DbSet<GtNfseConfiguracao> GtNfseConfiguracao { get; set; }
        public virtual DbSet<GtNfseConfiguracaoCliente> GtNfseConfiguracaoCliente { get; set; }
        public virtual DbSet<GtNfseLayout> GtNfseLayout { get; set; }
        public virtual DbSet<GtNfseLigacaoCamposMetodos> GtNfseLigacaoCamposMetodos { get; set; }
        public virtual DbSet<GtNfseLigacaoCamposTagsXml> GtNfseLigacaoCamposTagsXml { get; set; }
        public virtual DbSet<GtNfseLigacaoNotaFiscalIntermediarios> GtNfseLigacaoNotaFiscalIntermediarios { get; set; }
        public virtual DbSet<GtNfseMetodos> GtNfseMetodos { get; set; }
        public virtual DbSet<GtNfseTagsXml> GtNfseTagsXml { get; set; }
        public virtual DbSet<GtNfseXmlMetodos> GtNfseXmlMetodos { get; set; }
        public virtual DbSet<GtNotaFiscalLog> GtNotaFiscalLog { get; set; }
        public virtual DbSet<GtNotaFiscalServicoNfse> GtNotaFiscalServicoNfse { get; set; }
        public virtual DbSet<GtNotaFiscalServicoNfseLog> GtNotaFiscalServicoNfseLog { get; set; }
        public virtual DbSet<GtNotaFiscalServicoParcela> GtNotaFiscalServicoParcela { get; set; }
        public virtual DbSet<GtPrefeituras> GtPrefeituras { get; set; }
        public virtual DbSet<GtProvedores> GtProvedores { get; set; }
        public virtual DbSet<GtVideosTreinamentos> GtVideosTreinamentos { get; set; }
        public virtual DbSet<GtVideosTreinamentosLog> GtVideosTreinamentosLog { get; set; }
        public virtual DbSet<MInventario> MInventario { get; set; }
        public virtual DbSet<TmpGsAgendaOperacoes> TmpGsAgendaOperacoes { get; set; }
        public virtual DbSet<TmpRelComparativoDespesasReceitas8577> TmpRelComparativoDespesasReceitas8577 { get; set; }
        public virtual DbSet<TmpSetoresContas> TmpSetoresContas { get; set; }
        public virtual DbSet<VGsContasReceberEventos> VGsContasReceberEventos { get; set; }
        public virtual DbSet<VwTotalEquipamentosOrcamentosCobrados> VwTotalEquipamentosOrcamentosCobrados { get; set; }
        public virtual DbSet<VwTotalEquipamentosOrcamentosNaocobrados> VwTotalEquipamentosOrcamentosNaocobrados { get; set; }
            
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning \\To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=MAX\\SQLEXPRESS;Initial Catalog=db603;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EctBairros>(entity =>
            {
                entity.HasKey(e => e.BaiNuSequencial);

                entity.ToTable("ECT_BAIRROS");

                entity.HasIndex(e => e.LocNuSequencial)
                    .HasName("Idx_LOC_NU_SEQUENCIAL");

                entity.Property(e => e.BaiNuSequencial)
                    .HasColumnName("BAI_NU_SEQUENCIAL")
                    .ValueGeneratedNever();

                entity.Property(e => e.BaiNo)
                    .HasColumnName("BAI_NO")
                    .HasMaxLength(72)
                    .IsUnicode(false);

                entity.Property(e => e.BaiNoAbrev)
                    .HasColumnName("BAI_NO_ABREV")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.LocNuSequencial).HasColumnName("LOC_NU_SEQUENCIAL");

                entity.Property(e => e.UfeSg)
                    .HasColumnName("UFE_SG")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EctCep>(entity =>
            {
                entity.HasKey(e => new { e.LogNuCep, e.LogInTabela });

                entity.ToTable("ECT_CEP");

                entity.Property(e => e.LogNuCep).HasColumnName("LOG_NU_CEP");

                entity.Property(e => e.LogInTabela).HasColumnName("LOG_IN_TABELA");

                entity.Property(e => e.Cep)
                    .HasColumnName("CEP")
                    .HasMaxLength(8)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EctCidades>(entity =>
            {
                entity.HasKey(e => e.LocNuSequencial);

                entity.ToTable("ECT_CIDADES");

                entity.HasIndex(e => e.EstId)
                    .HasName("Idx_EST_ID");

                entity.HasIndex(e => e.LocNoSemAcento)
                    .HasName("Idx_LOC_NO_SEM_ACENTO");

                entity.HasIndex(e => e.LocNosub)
                    .HasName("Idx_LOC_NOSUB");

                entity.HasIndex(e => e.UfeSg)
                    .HasName("Idx_UFE_SG");

                entity.Property(e => e.LocNuSequencial)
                    .HasColumnName("LOC_NU_SEQUENCIAL")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cep)
                    .HasColumnName("CEP")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodigoIbge).HasColumnName("CODIGO_IBGE");

                entity.Property(e => e.CodigoSiafi).HasColumnName("CODIGO_SIAFI");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EstId).HasColumnName("EST_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.LocInSituacao).HasColumnName("LOC_IN_SITUACAO");

                entity.Property(e => e.LocInTipoLocalidade)
                    .HasColumnName("LOC_IN_TIPO_LOCALIDADE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.LocNo)
                    .HasColumnName("LOC_NO")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.LocNoSemAcento)
                    .HasColumnName("LOC_NO_SEM_ACENTO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocNosub)
                    .HasColumnName("LOC_NOSUB")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LocNuSequencialSub).HasColumnName("LOC_NU_SEQUENCIAL_SUB");

                entity.Property(e => e.LocSit).HasColumnName("LOC_SIT");

                entity.Property(e => e.SetId).HasColumnName("SET_ID");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UfeSg)
                    .HasColumnName("UFE_SG")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EctEstados>(entity =>
            {
                entity.HasKey(e => e.UfeId);

                entity.ToTable("ECT_ESTADOS");

                entity.HasIndex(e => e.PaisId)
                    .HasName("Idx_PAIS_ID");

                entity.Property(e => e.UfeId)
                    .HasColumnName("UFE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.PaisId).HasColumnName("PAIS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UfeLinksintegra)
                    .HasColumnName("UFE_LINKSINTEGRA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UfeNo)
                    .HasColumnName("UFE_NO")
                    .HasMaxLength(72)
                    .IsUnicode(false);

                entity.Property(e => e.UfeRad1Fim)
                    .HasColumnName("UFE_RAD1_FIM")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.UfeRad1Ini)
                    .HasColumnName("UFE_RAD1_INI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.UfeRad2Fim)
                    .HasColumnName("UFE_RAD2_FIM")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.UfeRad2Ini)
                    .HasColumnName("UFE_RAD2_INI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.UfeSg)
                    .HasColumnName("UFE_SG")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.UfeSit).HasColumnName("UFE_SIT");

                entity.Property(e => e.UfeSuf1Fim)
                    .HasColumnName("UFE_SUF1_FIM")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.UfeSuf1Ini)
                    .HasColumnName("UFE_SUF1_INI")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.UfeSuf2Fim)
                    .HasColumnName("UFE_SUF2_FIM")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.UfeSuf2Ini)
                    .HasColumnName("UFE_SUF2_INI")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EctFaixaBairro>(entity =>
            {
                entity.HasKey(e => new { e.BaiNuSequencial, e.FcbNuOrdem });

                entity.ToTable("ECT_FAIXA_BAIRRO");

                entity.Property(e => e.BaiNuSequencial).HasColumnName("BAI_NU_SEQUENCIAL");

                entity.Property(e => e.FcbNuOrdem).HasColumnName("FCB_NU_ORDEM");

                entity.Property(e => e.FcbRadFim)
                    .HasColumnName("FCB_RAD_FIM")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FcbRadIni)
                    .HasColumnName("FCB_RAD_INI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FcbSufFim)
                    .HasColumnName("FCB_SUF_FIM")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FcbSufIni)
                    .HasColumnName("FCB_SUF_INI")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<EctFaixaLocalidade>(entity =>
            {
                entity.HasKey(e => e.LocNuSequencial);

                entity.ToTable("ECT_FAIXA_LOCALIDADE");

                entity.Property(e => e.LocNuSequencial)
                    .HasColumnName("LOC_NU_SEQUENCIAL")
                    .ValueGeneratedNever();

                entity.Property(e => e.LocRad1Fim)
                    .HasColumnName("LOC_RAD1_FIM")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.LocRad1Ini)
                    .HasColumnName("LOC_RAD1_INI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.LocRad2Fim)
                    .HasColumnName("LOC_RAD2_FIM")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.LocRad2Ini)
                    .HasColumnName("LOC_RAD2_INI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.LocSuf1Fim)
                    .HasColumnName("LOC_SUF1_FIM")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LocSuf1Ini)
                    .HasColumnName("LOC_SUF1_INI")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LocSuf2Fim)
                    .HasColumnName("LOC_SUF2_FIM")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LocSuf2Ini)
                    .HasColumnName("LOC_SUF2_INI")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<EctFaixaUop>(entity =>
            {
                entity.HasKey(e => new { e.UopNuSequencial, e.FncNuInicial, e.FncNuFinal });

                entity.ToTable("ECT_FAIXA_UOP");

                entity.Property(e => e.UopNuSequencial).HasColumnName("UOP_NU_SEQUENCIAL");

                entity.Property(e => e.FncNuInicial).HasColumnName("FNC_NU_INICIAL");

                entity.Property(e => e.FncNuFinal).HasColumnName("FNC_NU_FINAL");

                entity.Property(e => e.FncInTipo)
                    .HasColumnName("FNC_IN_TIPO")
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EctLogradouro>(entity =>
            {
                entity.HasKey(e => e.LogNuSequencial);

                entity.ToTable("ECT_LOGRADOURO");

                entity.HasIndex(e => e.LocNuSequencial)
                    .HasName("Idx_LOC_NU_SEQUENCIAL");

                entity.Property(e => e.LogNuSequencial)
                    .HasColumnName("LOG_NU_SEQUENCIAL")
                    .ValueGeneratedNever();

                entity.Property(e => e.BaiNuSequencialFim).HasColumnName("BAI_NU_SEQUENCIAL_FIM");

                entity.Property(e => e.BaiNuSequencialIni).HasColumnName("BAI_NU_SEQUENCIAL_INI");

                entity.Property(e => e.Cep).HasColumnName("CEP");

                entity.Property(e => e.LocNuSequencial).HasColumnName("LOC_NU_SEQUENCIAL");

                entity.Property(e => e.LogComplemento)
                    .HasColumnName("LOG_COMPLEMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LogNo)
                    .HasColumnName("LOG_NO")
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.LogNoSemAcento)
                    .HasColumnName("LOG_NO_SEM_ACENTO")
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.LogNome)
                    .HasColumnName("LOG_NOME")
                    .HasMaxLength(125)
                    .IsUnicode(false);

                entity.Property(e => e.LogStatusTipoLog)
                    .HasColumnName("LOG_STATUS_TIPO_LOG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LogTipoLogradouro)
                    .HasColumnName("LOG_TIPO_LOGRADOURO")
                    .HasMaxLength(72)
                    .IsUnicode(false);

                entity.Property(e => e.UfeSg)
                    .HasColumnName("UFE_SG")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<EctPaises>(entity =>
            {
                entity.HasKey(e => e.PaisId);

                entity.ToTable("ECT_PAISES");

                entity.Property(e => e.PaisId)
                    .HasColumnName("PAIS_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.PaisCod).HasColumnName("PAIS_COD");

                entity.Property(e => e.PaisNome)
                    .HasColumnName("PAIS_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PaisSgl)
                    .HasColumnName("PAIS_SGL")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PaisSit).HasColumnName("PAIS_SIT");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GaAtendimentosEtapa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_ATENDIMENTOS_ETAPA");

                entity.Property(e => e.AteId).HasColumnName("ATE_ID");

                entity.Property(e => e.EtapaFlag).HasColumnName("ETAPA_FLAG");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.NirelId).HasColumnName("NIREL_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GaAvisosDebitosParcelas>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_AVISOS_DEBITOS_PARCELAS");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AvdpContaCartao).HasColumnName("AVDP_CONTA_CARTAO");

                entity.Property(e => e.AvdpCustasOperadora).HasColumnName("AVDP_CUSTAS_OPERADORA");

                entity.Property(e => e.AvdpDatvencto)
                    .HasColumnName("AVDP_DATVENCTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.AvdpDebitoCredito).HasColumnName("AVDP_DEBITO_CREDITO");

                entity.Property(e => e.AvdpDesconto).HasColumnName("AVDP_DESCONTO");

                entity.Property(e => e.AvdpNumparcela).HasColumnName("AVDP_NUMPARCELA");

                entity.Property(e => e.AvdpTaxaOperadora).HasColumnName("AVDP_TAXA_OPERADORA");

                entity.Property(e => e.AvdpValboleto).HasColumnName("AVDP_VALBOLETO");

                entity.Property(e => e.AvdpValjuros).HasColumnName("AVDP_VALJUROS");

                entity.Property(e => e.AvdpValmulta).HasColumnName("AVDP_VALMULTA");

                entity.Property(e => e.AvdpValsubtotal).HasColumnName("AVDP_VALSUBTOTAL");

                entity.Property(e => e.AvdpValtotal).HasColumnName("AVDP_VALTOTAL");

                entity.Property(e => e.AvisoDebitoId).HasColumnName("AVISO_DEBITO_ID");

                entity.Property(e => e.FormaPagamentoId).HasColumnName("FORMA_PAGAMENTO_ID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.OperadoraCartaoId).HasColumnName("OPERADORA_CARTAO_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");
            });

            modelBuilder.Entity<GaEstimativasProjetos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_ESTIMATIVAS_PROJETOS");

                entity.Property(e => e.EprFazer).HasColumnName("EPR_FAZER");

                entity.Property(e => e.EprMelhorias).HasColumnName("EPR_MELHORIAS");

                entity.Property(e => e.EprProgresso).HasColumnName("EPR_PROGRESSO");

                entity.Property(e => e.EprPronto).HasColumnName("EPR_PRONTO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TrpId).HasColumnName("TRP_ID");
            });

            modelBuilder.Entity<GaEstimativasSprint>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_ESTIMATIVAS_SPRINT");

                entity.Property(e => e.EpsFazer).HasColumnName("EPS_FAZER");

                entity.Property(e => e.EpsMelhorias).HasColumnName("EPS_MELHORIAS");

                entity.Property(e => e.EpsProgresso).HasColumnName("EPS_PROGRESSO");

                entity.Property(e => e.EpsPronto).HasColumnName("EPS_PRONTO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SptId).HasColumnName("SPT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TrpId).HasColumnName("TRP_ID");
            });

            modelBuilder.Entity<GaFasesImplantacao>(entity =>
            {
                entity.ToTable("GA_FASES_IMPLANTACAO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("ID da Fase de Implantação");

                entity.Property(e => e.FsiDesc)
                    .HasColumnName("FSI_DESC")
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasComment("Descrição da Fase de Implantação");

                entity.Property(e => e.FsiDias)
                    .HasColumnName("FSI_DIAS")
                    .HasComment("Dias de Implantação da Fase");

                entity.Property(e => e.FsiObs)
                    .HasColumnName("FSI_OBS")
                    .HasColumnType("text")
                    .HasComment("Observações da Fase de Implantação");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("Data de Cadastro da Fase de Implantação");

                entity.Property(e => e.SysDel)
                    .HasColumnName("SYS_DEL")
                    .HasDefaultValueSql("((0))")
                    .HasComment("Flag de Exclusão da Fase de Implantação");
            });

            modelBuilder.Entity<GaKambanSprint>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_KAMBAN_SPRINT");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.KspDatfin)
                    .HasColumnName("KSP_DATFIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.KspDatini)
                    .HasColumnName("KSP_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.KspPeriodo).HasColumnName("KSP_PERIODO");

                entity.Property(e => e.KspStatus).HasColumnName("KSP_STATUS");

                entity.Property(e => e.SptId).HasColumnName("SPT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GaProgramacaoBuilds>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_PROGRAMACAO_BUILDS");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PrbBuildNum)
                    .IsRequired()
                    .HasColumnName("PRB_BUILD_NUM")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.PrbPrgId).HasColumnName("PRB_PRG_ID");

                entity.Property(e => e.PrbTesterId).HasColumnName("PRB_TESTER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GaProjetos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_PROJETOS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PrjNome)
                    .HasColumnName("PRJ_NOME")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TesId).HasColumnName("TES_ID");

                entity.Property(e => e.TprId).HasColumnName("TPR_ID");
            });

            modelBuilder.Entity<GaRecursos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_RECURSOS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.RcsDesc)
                    .HasColumnName("RCS_DESC")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TrsId).HasColumnName("TRS_ID");
            });

            modelBuilder.Entity<GaSetoresImplantacao>(entity =>
            {
                entity.ToTable("GA_SETORES_IMPLANTACAO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasComment("ID do Setor de Implantação");

                entity.Property(e => e.StiDesc)
                    .HasColumnName("STI_DESC")
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasComment("Descrição do Setor de Implantação");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())")
                    .HasComment("Data de Cadastro do Setor de Implantação");

                entity.Property(e => e.SysDel)
                    .HasColumnName("SYS_DEL")
                    .HasDefaultValueSql("((0))")
                    .HasComment("Flag de Exclusão do Setor de Implantação");
            });

            modelBuilder.Entity<GaSistemas>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_SISTEMAS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysCodigo).HasColumnName("SYS_CODIGO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysDescCompleta)
                    .HasColumnName("SYS_DESC_COMPLETA")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.SysDescReduzida)
                    .HasColumnName("SYS_DESC_REDUZIDA")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SysObjeto)
                    .HasColumnName("SYS_OBJETO")
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GaSistemasItemSubMenu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_SISTEMAS_ITEM_SUB_MENU");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysId).HasColumnName("SYS_ID");

                entity.Property(e => e.SysItemSubMenuCodigo).HasColumnName("SYS_ITEM_SUB_MENU_CODIGO");

                entity.Property(e => e.SysItemSubMenuDesc)
                    .HasColumnName("SYS_ITEM_SUB_MENU_DESC")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SysItemSubMenuObjeto)
                    .HasColumnName("SYS_ITEM_SUB_MENU_OBJETO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SysMenuId).HasColumnName("SYS_MENU_ID");

                entity.Property(e => e.SysSubMenuId).HasColumnName("SYS_SUB_MENU_ID");
            });

            modelBuilder.Entity<GaSistemasMenu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_SISTEMAS_MENU");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysId).HasColumnName("SYS_ID");

                entity.Property(e => e.SysMenuCodigo).HasColumnName("SYS_MENU_CODIGO");

                entity.Property(e => e.SysMenuDesc)
                    .HasColumnName("SYS_MENU_DESC")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SysMenuObjeto)
                    .HasColumnName("SYS_MENU_OBJETO")
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GaSistemasSubMenu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_SISTEMAS_SUB_MENU");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysId).HasColumnName("SYS_ID");

                entity.Property(e => e.SysMenuId).HasColumnName("SYS_MENU_ID");

                entity.Property(e => e.SysSubMenuCodigo).HasColumnName("SYS_SUB_MENU_CODIGO");

                entity.Property(e => e.SysSubMenuDesc)
                    .HasColumnName("SYS_SUB_MENU_DESC")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SysSubMenuObjeto)
                    .HasColumnName("SYS_SUB_MENU_OBJETO")
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GaSprint>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_SPRINT");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PrjId).HasColumnName("PRJ_ID");

                entity.Property(e => e.SptDatfin)
                    .HasColumnName("SPT_DATFIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.SptDatini)
                    .HasColumnName("SPT_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.SptNome)
                    .IsRequired()
                    .HasColumnName("SPT_NOME")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.SptQtdsol).HasColumnName("SPT_QTDSOL");

                entity.Property(e => e.SptSit).HasColumnName("SPT_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GaTarefasDiarias>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_TAREFAS_DIARIAS");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FunNome)
                    .HasColumnName("FUN_NOME")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TdsAssunto)
                    .HasColumnName("TDS_ASSUNTO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TdsCliente)
                    .HasColumnName("TDS_CLIENTE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TdsCor).HasColumnName("TDS_COR");

                entity.Property(e => e.TdsDataalerta)
                    .HasColumnName("TDS_DATAALERTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.TdsDatafim)
                    .HasColumnName("TDS_DATAFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.TdsDatainicio)
                    .HasColumnName("TDS_DATAINICIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.TdsDescricao)
                    .HasColumnName("TDS_DESCRICAO")
                    .HasColumnType("text");

                entity.Property(e => e.TdsFimatual).HasColumnName("TDS_FIMATUAL");

                entity.Property(e => e.TdsIdrepeticao).HasColumnName("TDS_IDREPETICAO");

                entity.Property(e => e.TdsInforepeticao)
                    .HasColumnName("TDS_INFOREPETICAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TdsInicioatual).HasColumnName("TDS_INICIOATUAL");

                entity.Property(e => e.TdsMinutosalerta).HasColumnName("TDS_MINUTOSALERTA");

                entity.Property(e => e.TdsOpcoes).HasColumnName("TDS_OPCOES");

                entity.Property(e => e.TdsSolicitante)
                    .HasColumnName("TDS_SOLICITANTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TdsStatus).HasColumnName("TDS_STATUS");

                entity.Property(e => e.TdsTempogasto)
                    .HasColumnName("TDS_TEMPOGASTO")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.TdsTipo).HasColumnName("TDS_TIPO");

                entity.Property(e => e.TdsTitulo)
                    .HasColumnName("TDS_TITULO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GaTiposEstimativas>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_TIPOS_ESTIMATIVAS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TesDesc)
                    .HasColumnName("TES_DESC")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.TesFator).HasColumnName("TES_FATOR");
            });

            modelBuilder.Entity<GaTiposRecursos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_TIPOS_RECURSOS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TrsDesc)
                    .HasColumnName("TRS_DESC")
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GaTiposRecursosProjetos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GA_TIPOS_RECURSOS_PROJETOS");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PrjId).HasColumnName("PRJ_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TrpQtd).HasColumnName("TRP_QTD");

                entity.Property(e => e.TrpValor).HasColumnName("TRP_VALOR");

                entity.Property(e => e.TrsId).HasColumnName("TRS_ID");
            });

            modelBuilder.Entity<GiControleVersaoGiGeral>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GI_CONTROLE_VERSAO_GI_GERAL");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConverData)
                    .HasColumnName("CONVER_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatfim)
                    .HasColumnName("CONVER_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatini)
                    .HasColumnName("CONVER_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverGravasolicitacao).HasColumnName("CONVER_GRAVASOLICITACAO");

                entity.Property(e => e.ConverHorfim).HasColumnName("CONVER_HORFIM");

                entity.Property(e => e.ConverHorini).HasColumnName("CONVER_HORINI");

                entity.Property(e => e.ConverId).HasColumnName("CONVER_ID");

                entity.Property(e => e.ConverInfo)
                    .HasColumnName("CONVER_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.ConverMod).HasColumnName("CONVER_MOD");

                entity.Property(e => e.ConverPercqbr).HasColumnName("CONVER_PERCQBR");

                entity.Property(e => e.ConverPrioridade).HasColumnName("CONVER_PRIORIDADE");

                entity.Property(e => e.ConverTitulo)
                    .HasColumnName("CONVER_TITULO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVerpub)
                    .HasColumnName("CONVER_VERPUB")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersao)
                    .HasColumnName("CONVER_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersit).HasColumnName("CONVER_VERSIT");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GiControleVersaoGiRefratario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GI_CONTROLE_VERSAO_GI_REFRATARIO");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConverData)
                    .HasColumnName("CONVER_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatfim)
                    .HasColumnName("CONVER_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatini)
                    .HasColumnName("CONVER_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverGravasolicitacao).HasColumnName("CONVER_GRAVASOLICITACAO");

                entity.Property(e => e.ConverHorfim).HasColumnName("CONVER_HORFIM");

                entity.Property(e => e.ConverHorini).HasColumnName("CONVER_HORINI");

                entity.Property(e => e.ConverId).HasColumnName("CONVER_ID");

                entity.Property(e => e.ConverInfo)
                    .HasColumnName("CONVER_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.ConverMod).HasColumnName("CONVER_MOD");

                entity.Property(e => e.ConverPercqbr).HasColumnName("CONVER_PERCQBR");

                entity.Property(e => e.ConverPrioridade).HasColumnName("CONVER_PRIORIDADE");

                entity.Property(e => e.ConverTitulo)
                    .HasColumnName("CONVER_TITULO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVerpub)
                    .HasColumnName("CONVER_VERPUB")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersao)
                    .HasColumnName("CONVER_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersit).HasColumnName("CONVER_VERSIT");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAdiantamentos>(entity =>
            {
                entity.HasKey(e => new { e.AdiId, e.AssId });

                entity.ToTable("GS_ADIANTAMENTOS");

                entity.HasIndex(e => e.AdiData)
                    .HasName("Idx_ADI_DATA");

                entity.HasIndex(e => e.AdiDatcan)
                    .HasName("Idx_ADI_DATCAN");

                entity.HasIndex(e => e.AdiDatliq)
                    .HasName("Idx_ADI_DATLIQ");

                entity.HasIndex(e => e.AdievtId)
                    .HasName("Idx_ADIEVT_ID");

                entity.HasIndex(e => e.AdiorcId)
                    .HasName("Idx_ADIORC_ID");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.AdiId).HasColumnName("ADI_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AdiData)
                    .HasColumnName("ADI_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.AdiDatcan)
                    .HasColumnName("ADI_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.AdiDatliq)
                    .HasColumnName("ADI_DATLIQ")
                    .HasColumnType("datetime");

                entity.Property(e => e.AdiMotcan)
                    .HasColumnName("ADI_MOTCAN")
                    .HasColumnType("text");

                entity.Property(e => e.AdiNum).HasColumnName("ADI_NUM");

                entity.Property(e => e.AdiObs)
                    .HasColumnName("ADI_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.AdiOperacao).HasColumnName("ADI_OPERACAO");

                entity.Property(e => e.AdiSit).HasColumnName("ADI_SIT");

                entity.Property(e => e.AdiTipo).HasColumnName("ADI_TIPO");

                entity.Property(e => e.AdiValor)
                    .HasColumnName("ADI_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.AdievtId).HasColumnName("ADIEVT_ID");

                entity.Property(e => e.AdiorcId).HasColumnName("ADIORC_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.ConbanIdDestino).HasColumnName("CONBAN_ID_DESTINO");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.MovbanId).HasColumnName("MOVBAN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAdiantamentosItens>(entity =>
            {
                entity.HasKey(e => new { e.AdiiteId, e.AssId });

                entity.ToTable("GS_ADIANTAMENTOS_ITENS");

                entity.HasIndex(e => e.AdiId)
                    .HasName("Idx_ADI_ID");

                entity.HasIndex(e => e.AdiiteData)
                    .HasName("Idx_ADIITE_DATA");

                entity.HasIndex(e => e.CattitId)
                    .HasName("Idx_CATTIT_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.SubcattitId)
                    .HasName("Idx_SUBCATTIT_ID");

                entity.Property(e => e.AdiiteId).HasColumnName("ADIITE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AdiId).HasColumnName("ADI_ID");

                entity.Property(e => e.AdiiteData)
                    .HasColumnName("ADIITE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.AdiiteHist)
                    .HasColumnName("ADIITE_HIST")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.AdiiteNum)
                    .HasColumnName("ADIITE_NUM")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AdiiteValor)
                    .HasColumnName("ADIITE_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.CattitId).HasColumnName("CATTIT_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.SubcattitId).HasColumnName("SUBCATTIT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAdiantamentosItensCcusto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_ADIANTAMENTOS_ITENS_CCUSTO");

                entity.Property(e => e.AdiId).HasColumnName("ADI_ID");

                entity.Property(e => e.AdiiteId).HasColumnName("ADIITE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.CpccId).HasColumnName("CPCC_ID");

                entity.Property(e => e.CpccPercentual).HasColumnName("CPCC_PERCENTUAL");

                entity.Property(e => e.CpccValor)
                    .HasColumnName("CPCC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAgentesOperadoras>(entity =>
            {
                entity.HasKey(e => e.AgeopeId);

                entity.ToTable("GS_AGENTES_OPERADORAS");

                entity.Property(e => e.AgeopeId)
                    .HasColumnName("AGEOPE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AgepagId).HasColumnName("AGEPAG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OpecadId).HasColumnName("OPECAD_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAgentesPagamento>(entity =>
            {
                entity.HasKey(e => e.AgepagId);

                entity.ToTable("GS_AGENTES_PAGAMENTO");

                entity.Property(e => e.AgepagId)
                    .HasColumnName("AGEPAG_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AgepagDes)
                    .IsRequired()
                    .HasColumnName("AGEPAG_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TaxaAdn).HasColumnName("TAXA_ADN");

                entity.Property(e => e.TaxaCre).HasColumnName("TAXA_CRE");

                entity.Property(e => e.TaxaDeb).HasColumnName("TAXA_DEB");

                entity.Property(e => e.TaxaPercentualIof).HasColumnName("TAXA_PERCENTUAL_IOF");

                entity.Property(e => e.TaxaValorOperacao).HasColumnName("TAXA_VALOR_OPERACAO");
            });

            modelBuilder.Entity<GsAlmoxarifados>(entity =>
            {
                entity.HasKey(e => new { e.AmxId, e.AssId });

                entity.ToTable("GS_ALMOXARIFADOS");

                entity.Property(e => e.AmxId).HasColumnName("AMX_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AmxDes)
                    .HasColumnName("AMX_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AmxPs).HasColumnName("AMX_PS");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAlmoxarifadosHistorico>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_ALMOXARIFADOS_HISTORICO");

                entity.HasIndex(e => e.AmxDestinoId)
                    .HasName("Idx_AMX_DESTINO_ID");

                entity.HasIndex(e => e.AmxtransfDataretorno)
                    .HasName("Idx_AMXTRANSF_DATARETORNO");

                entity.HasIndex(e => e.AmxtransfDatasaida)
                    .HasName("Idx_AMXTRANSF_DATASAIDA");

                entity.HasIndex(e => e.AmxtransfId)
                    .HasName("Idx_AMXTRANSF_ID");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.FunRetornoId)
                    .HasName("Idx_FUN_RETORNO_ID");

                entity.HasIndex(e => e.FunSaidaId)
                    .HasName("Idx_FUN_SAIDA_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.AmxDestinoId).HasColumnName("AMX_DESTINO_ID");

                entity.Property(e => e.AmxtransfDataretorno)
                    .HasColumnName("AMXTRANSF_DATARETORNO")
                    .HasColumnType("datetime");

                entity.Property(e => e.AmxtransfDatasaida)
                    .HasColumnName("AMXTRANSF_DATASAIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.AmxtransfId).HasColumnName("AMXTRANSF_ID");

                entity.Property(e => e.AmxtransfObs)
                    .HasColumnName("AMXTRANSF_OBS")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunRetornoId).HasColumnName("FUN_RETORNO_ID");

                entity.Property(e => e.FunSaidaId).HasColumnName("FUN_SAIDA_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAlmoxarifadosHistoricoSeries>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_ALMOXARIFADOS_HISTORICO_SERIES");

                entity.HasIndex(e => e.AmxtransfId)
                    .HasName("Idx_AMXTRANSF_ID");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.Property(e => e.AmxtransfId).HasColumnName("AMXTRANSF_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.Retornado).HasColumnName("RETORNADO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsArquivosProgramacao>(entity =>
            {
                entity.HasKey(e => e.ArqprogId)
                    .HasName("PK_ARQPROG");

                entity.ToTable("GS_ARQUIVOS_PROGRAMACAO");

                entity.Property(e => e.ArqprogId).HasColumnName("ARQPROG_ID");

                entity.Property(e => e.ArqprogArq)
                    .IsRequired()
                    .HasColumnName("ARQPROG_ARQ")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ArqprogDesc)
                    .IsRequired()
                    .HasColumnName("ARQPROG_DESC")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.GsRagProgramacao)
                    .WithMany(p => p.GsArquivosProgramacao)
                    .HasForeignKey(d => new { d.DesenId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ASS_DESEN");
            });

            modelBuilder.Entity<GsAssistenciaTecnica>(entity =>
            {
                entity.HasKey(e => new { e.AsstecId, e.AssId });

                entity.ToTable("GS_ASSISTENCIA_TECNICA");

                entity.HasIndex(e => e.AsstecDatsol)
                    .HasName("Idx_ASSTEC_DATSOL");

                entity.HasIndex(e => e.AsstecSit)
                    .HasName("Idx_ASSTEC_SIT");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.AsstecId).HasColumnName("ASSTEC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AsstecConclusao)
                    .HasColumnName("ASSTEC_CONCLUSAO")
                    .HasColumnType("text");

                entity.Property(e => e.AsstecDatcon)
                    .HasColumnName("ASSTEC_DATCON")
                    .HasColumnType("datetime");

                entity.Property(e => e.AsstecDatsol)
                    .HasColumnName("ASSTEC_DATSOL")
                    .HasColumnType("datetime");

                entity.Property(e => e.AsstecInfor)
                    .HasColumnName("ASSTEC_INFOR")
                    .HasMaxLength(20)
                    .IsFixedLength();

                entity.Property(e => e.AsstecItens).HasColumnName("ASSTEC_ITENS");

                entity.Property(e => e.AsstecSit).HasColumnName("ASSTEC_SIT");

                entity.Property(e => e.AsstecSolicitacao)
                    .HasColumnName("ASSTEC_SOLICITACAO")
                    .HasColumnType("text");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssistenciaTecnicaItens>(entity =>
            {
                entity.HasKey(e => new { e.AssteciteId, e.AsstecId, e.AssId });

                entity.ToTable("GS_ASSISTENCIA_TECNICA_ITENS");

                entity.HasIndex(e => e.AssteciteSituacao)
                    .HasName("Idx_ASSTECITE_SITUACAO");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.AssteciteId).HasColumnName("ASSTECITE_ID");

                entity.Property(e => e.AsstecId).HasColumnName("ASSTEC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssteciteControle).HasColumnName("ASSTECITE_CONTROLE");

                entity.Property(e => e.AssteciteDatcon)
                    .HasColumnName("ASSTECITE_DATCON")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssteciteInfo)
                    .HasColumnName("ASSTECITE_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.AssteciteObs)
                    .HasColumnName("ASSTECITE_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.AssteciteOperacao).HasColumnName("ASSTECITE_OPERACAO");

                entity.Property(e => e.AssteciteSituacao).HasColumnName("ASSTECITE_SITUACAO");

                entity.Property(e => e.AssteciteValor)
                    .HasColumnName("ASSTECITE_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssistenciaTecnicaLaudo>(entity =>
            {
                entity.HasKey(e => new { e.AssteclauId, e.AssteciteId, e.AssId });

                entity.ToTable("GS_ASSISTENCIA_TECNICA_LAUDO");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.AssteclauId).HasColumnName("ASSTECLAU_ID");

                entity.Property(e => e.AssteciteId).HasColumnName("ASSTECITE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssteclauOcorrencia)
                    .HasColumnName("ASSTECLAU_OCORRENCIA")
                    .HasColumnType("text");

                entity.Property(e => e.AssteclauSituacao).HasColumnName("ASSTECLAU_SITUACAO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsAssociados>(entity =>
            {
                entity.HasKey(e => e.AssId);

                entity.ToTable("GS_ASSOCIADOS");

                entity.HasIndex(e => e.AssBloqueio)
                    .HasName("Idx_ASS_BLOQUEIO");

                entity.HasIndex(e => e.AssLinha)
                    .HasName("Idx_ASS_LINHA");

                entity.HasIndex(e => e.AssNome)
                    .HasName("Idx_ASS_NOME");

                entity.HasIndex(e => e.AssSit)
                    .HasName("Idx_ASS_SIT");

                entity.HasIndex(e => e.AssSublinha)
                    .HasName("Idx_ASS_SUBLINHA");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.Property(e => e.AssId)
                    .HasColumnName("ASS_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssBloqlic).HasColumnName("ASS_BLOQLIC");

                entity.Property(e => e.AssBloqlicnum).HasColumnName("ASS_BLOQLICNUM");

                entity.Property(e => e.AssBloqueio).HasColumnName("ASS_BLOQUEIO");

                entity.Property(e => e.AssCorimpcli).HasColumnName("ASS_CORIMPCLI");

                entity.Property(e => e.AssCttdatlib)
                    .HasColumnName("ASS_CTTDATLIB")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssCttdoc)
                    .HasColumnName("ASS_CTTDOC")
                    .HasColumnType("text");

                entity.Property(e => e.AssCttsit).HasColumnName("ASS_CTTSIT");

                entity.Property(e => e.AssEmail)
                    .HasColumnName("ASS_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssFilial).HasColumnName("ASS_FILIAL");

                entity.Property(e => e.AssFusoHorario).HasColumnName("ASS_FUSO_HORARIO");

                entity.Property(e => e.AssHd).HasColumnName("ASS_HD");

                entity.Property(e => e.AssIniponto)
                    .HasColumnName("ASS_INIPONTO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AssLicenca).HasColumnName("ASS_LICENCA");

                entity.Property(e => e.AssLinha).HasColumnName("ASS_LINHA");

                entity.Property(e => e.AssLogotipo)
                    .HasColumnName("ASS_LOGOTIPO")
                    .HasColumnType("image");

                entity.Property(e => e.AssNome)
                    .HasColumnName("ASS_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssOpcserv).HasColumnName("ASS_OPCSERV");

                entity.Property(e => e.AssPagaHospedagem).HasColumnName("ASS_PAGA_HOSPEDAGEM");

                entity.Property(e => e.AssPagaManutencao).HasColumnName("ASS_PAGA_MANUTENCAO");

                entity.Property(e => e.AssPathLogo)
                    .HasColumnName("ASS_PATH_LOGO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AssPgManutHosped).HasColumnName("ASS_PG_MANUT_HOSPED");

                entity.Property(e => e.AssRamo).HasColumnName("ASS_RAMO");

                entity.Property(e => e.AssServ).HasColumnName("ASS_SERV");

                entity.Property(e => e.AssServDatabase)
                    .HasColumnName("ASS_SERV_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServHostname)
                    .HasColumnName("ASS_SERV_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServPassword)
                    .HasColumnName("ASS_SERV_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServUsername)
                    .HasColumnName("ASS_SERV_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSit).HasColumnName("ASS_SIT");

                entity.Property(e => e.AssSite)
                    .HasColumnName("ASS_SITE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSublinha).HasColumnName("ASS_SUBLINHA");

                entity.Property(e => e.AssTipfor).HasColumnName("ASS_TIPFOR");

                entity.Property(e => e.AssTipo).HasColumnName("ASS_TIPO");

                entity.Property(e => e.AssTipoSeguimento).HasColumnName("ASS_TIPO_SEGUIMENTO");

                entity.Property(e => e.AssVctenvctt)
                    .HasColumnName("ASS_VCTENVCTT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssdcDatabase)
                    .HasColumnName("ASSDC_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcHostname)
                    .HasColumnName("ASSDC_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcPassword)
                    .HasColumnName("ASSDC_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcUsername)
                    .HasColumnName("ASSDC_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssmodCerimonial)
                    .HasColumnName("ASSMOD_CERIMONIAL")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AssmodColetorApp).HasColumnName("ASSMOD_COLETOR_APP");

                entity.Property(e => e.AssmodColetorDados).HasColumnName("ASSMOD_COLETOR_DADOS");

                entity.Property(e => e.AssmodComeletr).HasColumnName("ASSMOD_COMELETR");

                entity.Property(e => e.AssmodEmAprovacao).HasColumnName("ASSMOD_EM_APROVACAO");

                entity.Property(e => e.AssmodFolhapag).HasColumnName("ASSMOD_FOLHAPAG");

                entity.Property(e => e.AssmodHoraextTecnicoEvt)
                    .HasColumnName("ASSMOD_HORAEXT_TECNICO_EVT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AssmodNfe).HasColumnName("ASSMOD_NFE");

                entity.Property(e => e.AssmodNfse).HasColumnName("ASSMOD_NFSE");

                entity.Property(e => e.AssmodPlanoContasAdic).HasColumnName("ASSMOD_PLANO_CONTAS_ADIC");

                entity.Property(e => e.AtgId).HasColumnName("ATG_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.Sispct1).HasColumnName("SISPCT_1");

                entity.Property(e => e.Sispct2).HasColumnName("SISPCT_2");

                entity.Property(e => e.Sispct3).HasColumnName("SISPCT_3");

                entity.Property(e => e.Sispct4).HasColumnName("SISPCT_4");

                entity.Property(e => e.Sispct5).HasColumnName("SISPCT_5");

                entity.Property(e => e.Sispct6).HasColumnName("SISPCT_6");

                entity.Property(e => e.Sispct7)
                    .HasColumnName("SISPCT_7")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TipoServidor)
                    .HasColumnName("TIPO_SERVIDOR")
                    .HasDefaultValueSql("((2))");
            });

            modelBuilder.Entity<GsAssociados2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_ASSOCIADOS2");

                entity.Property(e => e.AssBloqlic).HasColumnName("ASS_BLOQLIC");

                entity.Property(e => e.AssBloqlicnum).HasColumnName("ASS_BLOQLICNUM");

                entity.Property(e => e.AssBloqueio).HasColumnName("ASS_BLOQUEIO");

                entity.Property(e => e.AssCorimpcli).HasColumnName("ASS_CORIMPCLI");

                entity.Property(e => e.AssCttdatlib)
                    .HasColumnName("ASS_CTTDATLIB")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssCttdoc)
                    .HasColumnName("ASS_CTTDOC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssCttsit).HasColumnName("ASS_CTTSIT");

                entity.Property(e => e.AssEmail)
                    .HasColumnName("ASS_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssFilial).HasColumnName("ASS_FILIAL");

                entity.Property(e => e.AssFusoHorario).HasColumnName("ASS_FUSO_HORARIO");

                entity.Property(e => e.AssHd).HasColumnName("ASS_HD");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssIniponto).HasColumnName("ASS_INIPONTO");

                entity.Property(e => e.AssLicenca).HasColumnName("ASS_LICENCA");

                entity.Property(e => e.AssLinha).HasColumnName("ASS_LINHA");

                entity.Property(e => e.AssLogotipo)
                    .HasColumnName("ASS_LOGOTIPO")
                    .HasMaxLength(1);

                entity.Property(e => e.AssNome)
                    .HasColumnName("ASS_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssOpcserv).HasColumnName("ASS_OPCSERV");

                entity.Property(e => e.AssRamo).HasColumnName("ASS_RAMO");

                entity.Property(e => e.AssServ).HasColumnName("ASS_SERV");

                entity.Property(e => e.AssServDatabase)
                    .HasColumnName("ASS_SERV_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServHostname)
                    .HasColumnName("ASS_SERV_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServPassword)
                    .HasColumnName("ASS_SERV_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServUsername)
                    .HasColumnName("ASS_SERV_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSit).HasColumnName("ASS_SIT");

                entity.Property(e => e.AssSite)
                    .HasColumnName("ASS_SITE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSublinha).HasColumnName("ASS_SUBLINHA");

                entity.Property(e => e.AssTipfor).HasColumnName("ASS_TIPFOR");

                entity.Property(e => e.AssTipo).HasColumnName("ASS_TIPO");

                entity.Property(e => e.AssTipoSeguimento).HasColumnName("ASS_TIPO_SEGUIMENTO");

                entity.Property(e => e.AssVctenvctt)
                    .HasColumnName("ASS_VCTENVCTT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssdcDatabase)
                    .HasColumnName("ASSDC_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcHostname)
                    .HasColumnName("ASSDC_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcPassword)
                    .HasColumnName("ASSDC_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcUsername)
                    .HasColumnName("ASSDC_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssmodCerimonial).HasColumnName("ASSMOD_CERIMONIAL");

                entity.Property(e => e.AssmodComeletr).HasColumnName("ASSMOD_COMELETR");

                entity.Property(e => e.AssmodFolhapag).HasColumnName("ASSMOD_FOLHAPAG");

                entity.Property(e => e.AssmodNfe).HasColumnName("ASSMOD_NFE");

                entity.Property(e => e.AssmodNfse).HasColumnName("ASSMOD_NFSE");

                entity.Property(e => e.AtgId).HasColumnName("ATG_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.Sispct1).HasColumnName("SISPCT_1");

                entity.Property(e => e.Sispct2).HasColumnName("SISPCT_2");

                entity.Property(e => e.Sispct3).HasColumnName("SISPCT_3");

                entity.Property(e => e.Sispct4).HasColumnName("SISPCT_4");

                entity.Property(e => e.Sispct5).HasColumnName("SISPCT_5");

                entity.Property(e => e.Sispct6).HasColumnName("SISPCT_6");

                entity.Property(e => e.Sispct7).HasColumnName("SISPCT_7");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TipoServidor).HasColumnName("TIPO_SERVIDOR");
            });

            modelBuilder.Entity<GsAssociadosAreaTeste>(entity =>
            {
                entity.HasKey(e => e.AssattId);

                entity.ToTable("GS_ASSOCIADOS_AREA_TESTE");

                entity.Property(e => e.AssattId)
                    .HasColumnName("ASSATT_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssattDatlim)
                    .HasColumnName("ASSATT_DATLIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssattInfo)
                    .HasColumnName("ASSATT_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.AssattSit).HasColumnName("ASSATT_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosBackup21horas>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_ASSOCIADOS_backup21horas");

                entity.Property(e => e.AssBloqlic).HasColumnName("ASS_BLOQLIC");

                entity.Property(e => e.AssBloqlicnum).HasColumnName("ASS_BLOQLICNUM");

                entity.Property(e => e.AssBloqueio).HasColumnName("ASS_BLOQUEIO");

                entity.Property(e => e.AssCorimpcli).HasColumnName("ASS_CORIMPCLI");

                entity.Property(e => e.AssCttdatlib)
                    .HasColumnName("ASS_CTTDATLIB")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssCttdoc)
                    .HasColumnName("ASS_CTTDOC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssCttsit).HasColumnName("ASS_CTTSIT");

                entity.Property(e => e.AssEmail)
                    .HasColumnName("ASS_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssFilial).HasColumnName("ASS_FILIAL");

                entity.Property(e => e.AssFusoHorario).HasColumnName("ASS_FUSO_HORARIO");

                entity.Property(e => e.AssHd).HasColumnName("ASS_HD");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssIniponto).HasColumnName("ASS_INIPONTO");

                entity.Property(e => e.AssLicenca).HasColumnName("ASS_LICENCA");

                entity.Property(e => e.AssLinha).HasColumnName("ASS_LINHA");

                entity.Property(e => e.AssLogotipo)
                    .HasColumnName("ASS_LOGOTIPO")
                    .HasMaxLength(1);

                entity.Property(e => e.AssNome)
                    .HasColumnName("ASS_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssOpcserv).HasColumnName("ASS_OPCSERV");

                entity.Property(e => e.AssRamo).HasColumnName("ASS_RAMO");

                entity.Property(e => e.AssServ).HasColumnName("ASS_SERV");

                entity.Property(e => e.AssServDatabase)
                    .HasColumnName("ASS_SERV_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServHostname)
                    .HasColumnName("ASS_SERV_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServPassword)
                    .HasColumnName("ASS_SERV_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServUsername)
                    .HasColumnName("ASS_SERV_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSit).HasColumnName("ASS_SIT");

                entity.Property(e => e.AssSite)
                    .HasColumnName("ASS_SITE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSublinha).HasColumnName("ASS_SUBLINHA");

                entity.Property(e => e.AssTipfor).HasColumnName("ASS_TIPFOR");

                entity.Property(e => e.AssTipo).HasColumnName("ASS_TIPO");

                entity.Property(e => e.AssTipoSeguimento).HasColumnName("ASS_TIPO_SEGUIMENTO");

                entity.Property(e => e.AssVctenvctt)
                    .HasColumnName("ASS_VCTENVCTT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssdcDatabase)
                    .HasColumnName("ASSDC_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcHostname)
                    .HasColumnName("ASSDC_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcPassword)
                    .HasColumnName("ASSDC_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcUsername)
                    .HasColumnName("ASSDC_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssmodCerimonial).HasColumnName("ASSMOD_CERIMONIAL");

                entity.Property(e => e.AssmodComeletr).HasColumnName("ASSMOD_COMELETR");

                entity.Property(e => e.AssmodFolhapag).HasColumnName("ASSMOD_FOLHAPAG");

                entity.Property(e => e.AssmodNfe).HasColumnName("ASSMOD_NFE");

                entity.Property(e => e.AssmodNfse).HasColumnName("ASSMOD_NFSE");

                entity.Property(e => e.AtgId).HasColumnName("ATG_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.Sispct1).HasColumnName("SISPCT_1");

                entity.Property(e => e.Sispct2).HasColumnName("SISPCT_2");

                entity.Property(e => e.Sispct3).HasColumnName("SISPCT_3");

                entity.Property(e => e.Sispct4).HasColumnName("SISPCT_4");

                entity.Property(e => e.Sispct5).HasColumnName("SISPCT_5");

                entity.Property(e => e.Sispct6).HasColumnName("SISPCT_6");

                entity.Property(e => e.Sispct7).HasColumnName("SISPCT_7");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TipoServidor).HasColumnName("TIPO_SERVIDOR");
            });

            modelBuilder.Entity<GsAssociadosCodigos>(entity =>
            {
                entity.HasKey(e => new { e.CodMod, e.AssId, e.EmpId })
                    .HasName("PK_GS_ASSOCIADOS_CODIGOS_1");

                entity.ToTable("GS_ASSOCIADOS_CODIGOS");

                entity.Property(e => e.CodMod)
                    .HasColumnName("COD_MOD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.CodVal).HasColumnName("COD_VAL");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosDocumentos>(entity =>
            {
                entity.HasKey(e => new { e.AssdocId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_DOCUMENTOS");

                entity.Property(e => e.AssdocId).HasColumnName("ASSDOC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdocDatalt)
                    .HasColumnName("ASSDOC_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssdocDes)
                    .HasColumnName("ASSDOC_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AssdocGravaitem).HasColumnName("ASSDOC_GRAVAITEM");

                entity.Property(e => e.AssdocInfo)
                    .HasColumnName("ASSDOC_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.AssdocLayout).HasColumnName("ASSDOC_LAYOUT");

                entity.Property(e => e.AssdocOrigem).HasColumnName("ASSDOC_ORIGEM");

                entity.Property(e => e.AssdocTipo).HasColumnName("ASSDOC_TIPO");

                entity.Property(e => e.AssdocVersao).HasColumnName("ASSDOC_VERSAO");

                entity.Property(e => e.Cobrado).HasColumnName("COBRADO");

                entity.Property(e => e.DataPublicacao)
                    .HasColumnName("DATA_PUBLICACAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Orcamento)
                    .HasColumnName("ORCAMENTO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UsuCriacao)
                    .HasColumnName("USU_CRIACAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuPublicado)
                    .HasColumnName("USU_PUBLICADO")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsAssociadosDocumentosLog>(entity =>
            {
                entity.HasKey(e => new { e.AssdoclogId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_DOCUMENTOS_LOG");

                entity.HasIndex(e => e.AssdocId)
                    .HasName("Idx_ASSDOC_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.AssdoclogId).HasColumnName("ASSDOCLOG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdocId).HasColumnName("ASSDOC_ID");

                entity.Property(e => e.AssdoclogTipo).HasColumnName("ASSDOCLOG_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsAssociadosDocumentosOrcamentos>(entity =>
            {
                entity.ToTable("GS_ASSOCIADOS_DOCUMENTOS_ORCAMENTOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdocId).HasColumnName("ASSDOC_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GsAssociadosDocumentosOrcamentos)
                    .HasForeignKey(d => new { d.AssdocId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ASSDOC_ID");
            });

            modelBuilder.Entity<GsAssociadosEmpresas>(entity =>
            {
                entity.HasKey(e => new { e.EmpId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_EMPRESAS");

                entity.HasIndex(e => e.CidId)
                    .HasName("Idx_CID_ID");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.EmpCnpj)
                    .HasColumnName("EMP_CNPJ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EmpContato)
                    .HasColumnName("EMP_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpDdd1)
                    .HasColumnName("EMP_DDD1")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.EmpDdd2)
                    .HasColumnName("EMP_DDD2")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.EmpDoccon)
                    .HasColumnName("EMP_DOCCON")
                    .HasColumnType("text");

                entity.Property(e => e.EmpDocorc)
                    .HasColumnName("EMP_DOCORC")
                    .HasColumnType("text");

                entity.Property(e => e.EmpDuplicata)
                    .HasColumnName("EMP_DUPLICATA")
                    .HasColumnType("text");

                entity.Property(e => e.EmpEmail)
                    .HasColumnName("EMP_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpEndbai)
                    .HasColumnName("EMP_ENDBAI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpEndcep)
                    .HasColumnName("EMP_ENDCEP")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EmpEndcpl)
                    .HasColumnName("EMP_ENDCPL")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EmpEnddes)
                    .HasColumnName("EMP_ENDDES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpEndnum)
                    .HasColumnName("EMP_ENDNUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EmpIe)
                    .HasColumnName("EMP_IE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EmpIm)
                    .HasColumnName("EMP_IM")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EmpImglogo)
                    .HasColumnName("EMP_IMGLOGO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EmpLegavideb)
                    .HasColumnName("EMP_LEGAVIDEB")
                    .HasColumnType("text");

                entity.Property(e => e.EmpLogotipo)
                    .HasColumnName("EMP_LOGOTIPO")
                    .HasColumnType("image");

                entity.Property(e => e.EmpNome)
                    .HasColumnName("EMP_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpNomeFantasia)
                    .HasColumnName("EMP_NOME_FANTASIA")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.EmpNomeResponsavel)
                    .HasColumnName("EMP_NOME_RESPONSAVEL")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.EmpNumavideb).HasColumnName("EMP_NUMAVIDEB");

                entity.Property(e => e.EmpNumcon).HasColumnName("EMP_NUMCON");

                entity.Property(e => e.EmpPadrao).HasColumnName("EMP_PADRAO");

                entity.Property(e => e.EmpPercmensal).HasColumnName("EMP_PERCMENSAL");

                entity.Property(e => e.EmpPercsemanal).HasColumnName("EMP_PERCSEMANAL");

                entity.Property(e => e.EmpPerdespfixa).HasColumnName("EMP_PERDESPFIXA");

                entity.Property(e => e.EmpPerencsalario).HasColumnName("EMP_PERENCSALARIO");

                entity.Property(e => e.EmpPeriss).HasColumnName("EMP_PERISS");

                entity.Property(e => e.EmpPerjuros)
                    .HasColumnName("EMP_PERJUROS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EmpPermulta)
                    .HasColumnName("EMP_PERMULTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EmpRgResponsavel)
                    .HasColumnName("EMP_RG_RESPONSAVEL")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.EmpSit).HasColumnName("EMP_SIT");

                entity.Property(e => e.EmpSite)
                    .HasColumnName("EMP_SITE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpTel1)
                    .HasColumnName("EMP_TEL1")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.EmpTel2)
                    .HasColumnName("EMP_TEL2")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.EmpTel3)
                    .HasColumnName("EMP_TEL3")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EmpTippercorc).HasColumnName("EMP_TIPPERCORC");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");
            });

            modelBuilder.Entity<GsAssociadosEmpresasAtividades>(entity =>
            {
                entity.HasKey(e => new { e.EmpatId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_EMPRESAS_ATIVIDADES");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.NfseatId)
                    .HasName("Idx_NFSEAT_ID");

                entity.Property(e => e.EmpatId).HasColumnName("EMPAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.NfseatId).HasColumnName("NFSEAT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosEmpresasNfe>(entity =>
            {
                entity.HasKey(e => e.EmpnfeId);

                entity.ToTable("GS_ASSOCIADOS_EMPRESAS_NFE");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.Property(e => e.EmpnfeId)
                    .HasColumnName("EMPNFE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EmpnfeAmbiente).HasColumnName("EMPNFE_AMBIENTE");

                entity.Property(e => e.EmpnfeAssuntoEmail)
                    .HasColumnName("EMPNFE_ASSUNTO_EMAIL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfeChave)
                    .HasColumnName("EMPNFE_CHAVE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfeEmailSsl).HasColumnName("EMPNFE_EMAIL_SSL");

                entity.Property(e => e.EmpnfeFormatoImpressao).HasColumnName("EMPNFE_FORMATO_IMPRESSAO");

                entity.Property(e => e.EmpnfeIeSt)
                    .HasColumnName("EMPNFE_IE_ST")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfeMsgEmail)
                    .HasColumnName("EMPNFE_MSG_EMAIL")
                    .HasColumnType("text");

                entity.Property(e => e.EmpnfePassSmtp)
                    .HasColumnName("EMPNFE_PASS_SMTP")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfePortSmtp).HasColumnName("EMPNFE_PORT_SMTP");

                entity.Property(e => e.EmpnfeRegimeTributario).HasColumnName("EMPNFE_REGIME_TRIBUTARIO");

                entity.Property(e => e.EmpnfeSenhac)
                    .HasColumnName("EMPNFE_SENHAC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfeSerie).HasColumnName("EMPNFE_SERIE");

                entity.Property(e => e.EmpnfeServidorSmtp)
                    .HasColumnName("EMPNFE_SERVIDOR_SMTP")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfeTipoEmissao).HasColumnName("EMPNFE_TIPO_EMISSAO");

                entity.Property(e => e.EmpnfeUltimaNfe).HasColumnName("EMPNFE_ULTIMA_NFE");

                entity.Property(e => e.EmpnfeUserSmtp)
                    .HasColumnName("EMPNFE_USER_SMTP")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfeUtilizar)
                    .HasColumnName("EMPNFE_UTILIZAR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosEmpresasNfeContingencia>(entity =>
            {
                entity.HasKey(e => e.EmpnfeconId);

                entity.ToTable("GS_ASSOCIADOS_EMPRESAS_NFE_CONTINGENCIA");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EmpnfeId)
                    .HasName("Idx_EMPNFE_ID");

                entity.Property(e => e.EmpnfeconId)
                    .HasColumnName("EMPNFECON_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpnfeId).HasColumnName("EMPNFE_ID");

                entity.Property(e => e.EmpnfeconJustificativa)
                    .HasColumnName("EMPNFECON_JUSTIFICATIVA")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfeconTipoEmissao).HasColumnName("EMPNFECON_TIPO_EMISSAO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosEmpresasNfse>(entity =>
            {
                entity.HasKey(e => new { e.EmpnfseId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_EMPRESAS_NFSE");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.Property(e => e.EmpnfseId).HasColumnName("EMPNFSE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EmpnfseAliquotaCofins).HasColumnName("EMPNFSE_ALIQUOTA_COFINS");

                entity.Property(e => e.EmpnfseAliquotaCsll).HasColumnName("EMPNFSE_ALIQUOTA_CSLL");

                entity.Property(e => e.EmpnfseAliquotaInss).HasColumnName("EMPNFSE_ALIQUOTA_INSS");

                entity.Property(e => e.EmpnfseAliquotaIr).HasColumnName("EMPNFSE_ALIQUOTA_IR");

                entity.Property(e => e.EmpnfseAliquotaPis).HasColumnName("EMPNFSE_ALIQUOTA_PIS");

                entity.Property(e => e.EmpnfseAmbiente).HasColumnName("EMPNFSE_AMBIENTE");

                entity.Property(e => e.EmpnfseAssinar)
                    .HasColumnName("EMPNFSE_ASSINAR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfseIncentivadorCultural)
                    .HasColumnName("EMPNFSE_INCENTIVADOR_CULTURAL")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.EmpnfseOpSimplesNacional)
                    .HasColumnName("EMPNFSE_OP_SIMPLES_NACIONAL")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.EmpnfseOperacao)
                    .HasColumnName("EMPNFSE_OPERACAO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfsePrefeitura).HasColumnName("EMPNFSE_PREFEITURA");

                entity.Property(e => e.EmpnfseSeriePrestacao).HasColumnName("EMPNFSE_SERIE_PRESTACAO");

                entity.Property(e => e.EmpnfseSerieRps)
                    .HasColumnName("EMPNFSE_SERIE_RPS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfseTiporecolhimento)
                    .HasColumnName("EMPNFSE_TIPORECOLHIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfseTributacao)
                    .HasColumnName("EMPNFSE_TRIBUTACAO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.EmpnfseUltimaRpsEmitida).HasColumnName("EMPNFSE_ULTIMA_RPS_EMITIDA");

                entity.Property(e => e.EmpnfseUtilizar)
                    .HasColumnName("EMPNFSE_UTILIZAR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosEmpresasSetores>(entity =>
            {
                entity.HasKey(e => new { e.AssempsetId, e.AssId, e.EmpId });

                entity.ToTable("GS_ASSOCIADOS_EMPRESAS_SETORES");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.AssempsetEtapa).HasColumnName("ASSEMPSET_ETAPA");

                entity.Property(e => e.AssempsetNome)
                    .HasColumnName("ASSEMPSET_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosFiliais>(entity =>
            {
                entity.HasKey(e => new { e.AssfilId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_FILIAIS");

                entity.HasIndex(e => e.AssMtzid)
                    .HasName("Idx_ASS_MTZID");

                entity.Property(e => e.AssfilId).HasColumnName("ASSFIL_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssMtzid).HasColumnName("ASS_MTZID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosHistorico>(entity =>
            {
                entity.HasKey(e => new { e.AsshistId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_HISTORICO");

                entity.Property(e => e.AsshistId).HasColumnName("ASSHIST_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AsshistData)
                    .HasColumnName("ASSHIST_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.AsshistObs)
                    .HasColumnName("ASSHIST_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.AssociadoId).HasColumnName("ASSOCIADO_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosLicencas>(entity =>
            {
                entity.HasKey(e => e.LicragId);

                entity.ToTable("GS_ASSOCIADOS_LICENCAS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.CttId)
                    .HasName("Idx_CTT_ID");

                entity.HasIndex(e => e.LicragPct1)
                    .HasName("Idx_LICRAG_PCT1");

                entity.HasIndex(e => e.LicragPct2)
                    .HasName("Idx_LICRAG_PCT2");

                entity.HasIndex(e => e.LicragPct3)
                    .HasName("Idx_LICRAG_PCT3");

                entity.HasIndex(e => e.LicragPct4)
                    .HasName("Idx_LICRAG_PCT4");

                entity.HasIndex(e => e.LicragPct5)
                    .HasName("Idx_LICRAG_PCT5");

                entity.HasIndex(e => e.LicragPct6)
                    .HasName("Idx_LICRAG_PCT6");

                entity.HasIndex(e => e.LicragSerie)
                    .HasName("Idx_LICRAG_SERIE");

                entity.HasIndex(e => e.LicragSit)
                    .HasName("Idx_LICRAG_SIT");

                entity.HasIndex(e => e.LicragTipo)
                    .HasName("Idx_LICRAG_TIPO");

                entity.Property(e => e.LicragId)
                    .HasColumnName("LICRAG_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CttId).HasColumnName("CTT_ID");

                entity.Property(e => e.LicragBloq).HasColumnName("LICRAG_BLOQ");

                entity.Property(e => e.LicragCpu)
                    .HasColumnName("LICRAG_CPU")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragDatlib)
                    .HasColumnName("LICRAG_DATLIB")
                    .HasColumnType("datetime");

                entity.Property(e => e.LicragDatreg)
                    .HasColumnName("LICRAG_DATREG")
                    .HasColumnType("datetime");

                entity.Property(e => e.LicragDatultace)
                    .HasColumnName("LICRAG_DATULTACE")
                    .HasColumnType("datetime");

                entity.Property(e => e.LicragHd)
                    .HasColumnName("LICRAG_HD")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.LicragHdCpuId)
                    .HasColumnName("LICRAG_HD_CPU_ID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragHpguid)
                    .HasColumnName("LICRAG_HPGUID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragInfo)
                    .HasColumnName("LICRAG_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.LicragIp)
                    .HasColumnName("LICRAG_IP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragLoc).HasColumnName("LICRAG_LOC");

                entity.Property(e => e.LicragMacadress)
                    .HasColumnName("LICRAG_MACADRESS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LicragMaq)
                    .HasColumnName("LICRAG_MAQ")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragMaster).HasColumnName("LICRAG_MASTER");

                entity.Property(e => e.LicragMst).HasColumnName("LICRAG_MST");

                entity.Property(e => e.LicragNewlic).HasColumnName("LICRAG_NEWLIC");

                entity.Property(e => e.LicragNumace).HasColumnName("LICRAG_NUMACE");

                entity.Property(e => e.LicragObservacao)
                    .HasColumnName("LICRAG_OBSERVACAO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.LicragPct1).HasColumnName("LICRAG_PCT1");

                entity.Property(e => e.LicragPct2).HasColumnName("LICRAG_PCT2");

                entity.Property(e => e.LicragPct3).HasColumnName("LICRAG_PCT3");

                entity.Property(e => e.LicragPct4).HasColumnName("LICRAG_PCT4");

                entity.Property(e => e.LicragPct5).HasColumnName("LICRAG_PCT5");

                entity.Property(e => e.LicragPct6).HasColumnName("LICRAG_PCT6");

                entity.Property(e => e.LicragPct7)
                    .HasColumnName("LICRAG_PCT7")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LicragProduto).HasColumnName("LICRAG_PRODUTO");

                entity.Property(e => e.LicragSerie)
                    .HasColumnName("LICRAG_SERIE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragSit).HasColumnName("LICRAG_SIT");

                entity.Property(e => e.LicragSo)
                    .HasColumnName("LICRAG_SO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragSoid)
                    .HasColumnName("LICRAG_SOID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragTipo).HasColumnName("LICRAG_TIPO");

                entity.Property(e => e.LicragUltversao)
                    .HasColumnName("LICRAG_ULTVERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicragVersao)
                    .HasColumnName("LICRAG_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Spid).HasColumnName("SPID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosNfse>(entity =>
            {
                entity.HasKey(e => new { e.AssnfseId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_NFSE");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.Property(e => e.AssnfseId).HasColumnName("ASSNFSE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssnfsePrefeitura).HasColumnName("ASSNFSE_PREFEITURA");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosOld>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_ASSOCIADOS_OLD");

                entity.Property(e => e.AssBloqlic).HasColumnName("ASS_BLOQLIC");

                entity.Property(e => e.AssBloqlicnum).HasColumnName("ASS_BLOQLICNUM");

                entity.Property(e => e.AssBloqueio).HasColumnName("ASS_BLOQUEIO");

                entity.Property(e => e.AssCorimpcli).HasColumnName("ASS_CORIMPCLI");

                entity.Property(e => e.AssCttdatlib)
                    .HasColumnName("ASS_CTTDATLIB")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssCttdoc)
                    .HasColumnName("ASS_CTTDOC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssCttsit).HasColumnName("ASS_CTTSIT");

                entity.Property(e => e.AssEmail)
                    .HasColumnName("ASS_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssFilial).HasColumnName("ASS_FILIAL");

                entity.Property(e => e.AssFusoHorario).HasColumnName("ASS_FUSO_HORARIO");

                entity.Property(e => e.AssHd).HasColumnName("ASS_HD");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssIniponto).HasColumnName("ASS_INIPONTO");

                entity.Property(e => e.AssLicenca).HasColumnName("ASS_LICENCA");

                entity.Property(e => e.AssLinha).HasColumnName("ASS_LINHA");

                entity.Property(e => e.AssLogotipo)
                    .HasColumnName("ASS_LOGOTIPO")
                    .HasMaxLength(1);

                entity.Property(e => e.AssNome)
                    .HasColumnName("ASS_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssOpcserv).HasColumnName("ASS_OPCSERV");

                entity.Property(e => e.AssRamo).HasColumnName("ASS_RAMO");

                entity.Property(e => e.AssServ).HasColumnName("ASS_SERV");

                entity.Property(e => e.AssServDatabase)
                    .HasColumnName("ASS_SERV_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServHostname)
                    .HasColumnName("ASS_SERV_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServPassword)
                    .HasColumnName("ASS_SERV_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServUsername)
                    .HasColumnName("ASS_SERV_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSit).HasColumnName("ASS_SIT");

                entity.Property(e => e.AssSite)
                    .HasColumnName("ASS_SITE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSublinha).HasColumnName("ASS_SUBLINHA");

                entity.Property(e => e.AssTipfor).HasColumnName("ASS_TIPFOR");

                entity.Property(e => e.AssTipo).HasColumnName("ASS_TIPO");

                entity.Property(e => e.AssTipoSeguimento).HasColumnName("ASS_TIPO_SEGUIMENTO");

                entity.Property(e => e.AssVctenvctt)
                    .HasColumnName("ASS_VCTENVCTT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssdcDatabase)
                    .HasColumnName("ASSDC_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcHostname)
                    .HasColumnName("ASSDC_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcPassword)
                    .HasColumnName("ASSDC_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcUsername)
                    .HasColumnName("ASSDC_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssmodCerimonial).HasColumnName("ASSMOD_CERIMONIAL");

                entity.Property(e => e.AssmodComeletr).HasColumnName("ASSMOD_COMELETR");

                entity.Property(e => e.AssmodFolhapag).HasColumnName("ASSMOD_FOLHAPAG");

                entity.Property(e => e.AssmodNfe).HasColumnName("ASSMOD_NFE");

                entity.Property(e => e.AssmodNfse).HasColumnName("ASSMOD_NFSE");

                entity.Property(e => e.AtgId).HasColumnName("ATG_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.Sispct1).HasColumnName("SISPCT_1");

                entity.Property(e => e.Sispct2).HasColumnName("SISPCT_2");

                entity.Property(e => e.Sispct3).HasColumnName("SISPCT_3");

                entity.Property(e => e.Sispct4).HasColumnName("SISPCT_4");

                entity.Property(e => e.Sispct5).HasColumnName("SISPCT_5");

                entity.Property(e => e.Sispct6).HasColumnName("SISPCT_6");

                entity.Property(e => e.Sispct7).HasColumnName("SISPCT_7");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TipoServidor).HasColumnName("TIPO_SERVIDOR");
            });

            modelBuilder.Entity<GsAssociadosOriginal>(entity =>
            {
                entity.HasKey(e => e.AssId)
                    .HasName("PK_GS_ASSOCIADOS1");

                entity.ToTable("GS_ASSOCIADOS_ORIGINAL");

                entity.HasIndex(e => e.AssBloqueio)
                    .HasName("Idx_ASS_BLOQUEIO");

                entity.HasIndex(e => e.AssLinha)
                    .HasName("Idx_ASS_LINHA");

                entity.HasIndex(e => e.AssNome)
                    .HasName("Idx_ASS_NOME");

                entity.HasIndex(e => e.AssSit)
                    .HasName("Idx_ASS_SIT");

                entity.HasIndex(e => e.AssSublinha)
                    .HasName("Idx_ASS_SUBLINHA");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.Property(e => e.AssId)
                    .HasColumnName("ASS_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssBloqlic).HasColumnName("ASS_BLOQLIC");

                entity.Property(e => e.AssBloqlicnum).HasColumnName("ASS_BLOQLICNUM");

                entity.Property(e => e.AssBloqueio).HasColumnName("ASS_BLOQUEIO");

                entity.Property(e => e.AssCorimpcli).HasColumnName("ASS_CORIMPCLI");

                entity.Property(e => e.AssCttdatlib)
                    .HasColumnName("ASS_CTTDATLIB")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssCttdoc)
                    .HasColumnName("ASS_CTTDOC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssCttsit).HasColumnName("ASS_CTTSIT");

                entity.Property(e => e.AssEmail)
                    .HasColumnName("ASS_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssFilial).HasColumnName("ASS_FILIAL");

                entity.Property(e => e.AssFusoHorario).HasColumnName("ASS_FUSO_HORARIO");

                entity.Property(e => e.AssHd).HasColumnName("ASS_HD");

                entity.Property(e => e.AssIniponto).HasColumnName("ASS_INIPONTO");

                entity.Property(e => e.AssLicenca).HasColumnName("ASS_LICENCA");

                entity.Property(e => e.AssLinha).HasColumnName("ASS_LINHA");

                entity.Property(e => e.AssLogotipo)
                    .HasColumnName("ASS_LOGOTIPO")
                    .HasMaxLength(1);

                entity.Property(e => e.AssNome)
                    .HasColumnName("ASS_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssOpcserv).HasColumnName("ASS_OPCSERV");

                entity.Property(e => e.AssRamo).HasColumnName("ASS_RAMO");

                entity.Property(e => e.AssServ).HasColumnName("ASS_SERV");

                entity.Property(e => e.AssServDatabase)
                    .HasColumnName("ASS_SERV_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServHostname)
                    .HasColumnName("ASS_SERV_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServPassword)
                    .HasColumnName("ASS_SERV_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssServUsername)
                    .HasColumnName("ASS_SERV_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSit).HasColumnName("ASS_SIT");

                entity.Property(e => e.AssSite)
                    .HasColumnName("ASS_SITE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssSublinha).HasColumnName("ASS_SUBLINHA");

                entity.Property(e => e.AssTipfor).HasColumnName("ASS_TIPFOR");

                entity.Property(e => e.AssTipo).HasColumnName("ASS_TIPO");

                entity.Property(e => e.AssTipoSeguimento).HasColumnName("ASS_TIPO_SEGUIMENTO");

                entity.Property(e => e.AssVctenvctt)
                    .HasColumnName("ASS_VCTENVCTT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssdcDatabase)
                    .HasColumnName("ASSDC_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcHostname)
                    .HasColumnName("ASSDC_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcPassword)
                    .HasColumnName("ASSDC_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssdcUsername)
                    .HasColumnName("ASSDC_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssmodCerimonial).HasColumnName("ASSMOD_CERIMONIAL");

                entity.Property(e => e.AssmodComeletr).HasColumnName("ASSMOD_COMELETR");

                entity.Property(e => e.AssmodFolhapag).HasColumnName("ASSMOD_FOLHAPAG");

                entity.Property(e => e.AssmodNfe).HasColumnName("ASSMOD_NFE");

                entity.Property(e => e.AssmodNfse).HasColumnName("ASSMOD_NFSE");

                entity.Property(e => e.AtgId).HasColumnName("ATG_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.Sispct1).HasColumnName("SISPCT_1");

                entity.Property(e => e.Sispct2).HasColumnName("SISPCT_2");

                entity.Property(e => e.Sispct3).HasColumnName("SISPCT_3");

                entity.Property(e => e.Sispct4).HasColumnName("SISPCT_4");

                entity.Property(e => e.Sispct5).HasColumnName("SISPCT_5");

                entity.Property(e => e.Sispct6).HasColumnName("SISPCT_6");

                entity.Property(e => e.Sispct7).HasColumnName("SISPCT_7");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TipoServidor).HasColumnName("TIPO_SERVIDOR");
            });

            modelBuilder.Entity<GsAssociadosParametros>(entity =>
            {
                entity.HasKey(e => new { e.AssparId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_PARAMETROS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.AssparName)
                    .HasName("Idx_ASSPAR_NAME");

                entity.Property(e => e.AssparId).HasColumnName("ASSPAR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssparName)
                    .HasColumnName("ASSPAR_NAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssparValue)
                    .HasColumnName("ASSPAR_VALUE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DatAtual)
                    .HasColumnName("DAT_ATUAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseAtual).HasColumnName("USE_ATUAL");
            });

            modelBuilder.Entity<GsAssociadosParametrosTxt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_ASSOCIADOS_PARAMETROS_TXT");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.AssdoctxtId)
                    .HasName("Idx_ASSDOCTXT_ID");

                entity.HasIndex(e => e.AssdoctxtMod)
                    .HasName("Idx_ASSDOCTXT_MOD");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdoctxtId).HasColumnName("ASSDOCTXT_ID");

                entity.Property(e => e.AssdoctxtInfo)
                    .HasColumnName("ASSDOCTXT_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.AssdoctxtMod)
                    .HasColumnName("ASSDOCTXT_MOD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAssociadosPrivilegios>(entity =>
            {
                entity.HasKey(e => new { e.AssprvId, e.AssId });

                entity.ToTable("GS_ASSOCIADOS_PRIVILEGIOS");

                entity.Property(e => e.AssprvId).HasColumnName("ASSPRV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssprvDes)
                    .HasColumnName("ASSPRV_DES")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.AssprvGrp).HasColumnName("ASSPRV_GRP");

                entity.Property(e => e.AssprvIte).HasColumnName("ASSPRV_ITE");

                entity.Property(e => e.AssprvMod)
                    .HasColumnName("ASSPRV_MOD")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.AssprvSit).HasColumnName("ASSPRV_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAtendimentos>(entity =>
            {
                entity.HasKey(e => new { e.AteId, e.AssId });

                entity.ToTable("GS_ATENDIMENTOS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.NirelId)
                    .HasName("Idx_NIREL_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.UserId)
                    .HasName("Idx_USER_ID");

                entity.Property(e => e.AteId).HasColumnName("ATE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssempsetId1).HasColumnName("ASSEMPSET_ID1");

                entity.Property(e => e.AssempsetId2).HasColumnName("ASSEMPSET_ID2");

                entity.Property(e => e.AteAss)
                    .HasColumnName("ATE_ASS")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AteCcAssempsetId).HasColumnName("ATE_CC_ASSEMPSET_ID");

                entity.Property(e => e.AteContato)
                    .HasColumnName("ATE_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AteDataini)
                    .HasColumnName("ATE_DATAINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.AteDatater)
                    .HasColumnName("ATE_DATATER")
                    .HasColumnType("datetime");

                entity.Property(e => e.AteDdd)
                    .HasColumnName("ATE_DDD")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AteEmail)
                    .HasColumnName("ATE_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AteHoraini).HasColumnName("ATE_HORAINI");

                entity.Property(e => e.AteHorater).HasColumnName("ATE_HORATER");

                entity.Property(e => e.AteInfo)
                    .HasColumnName("ATE_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.AteInfoint)
                    .HasColumnName("ATE_INFOINT")
                    .HasColumnType("text");

                entity.Property(e => e.AteNovadat)
                    .HasColumnName("ATE_NOVADAT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AteNovahor).HasColumnName("ATE_NOVAHOR");

                entity.Property(e => e.AteNovoate).HasColumnName("ATE_NOVOATE");

                entity.Property(e => e.AteObs)
                    .HasColumnName("ATE_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.AteOrigem).HasColumnName("ATE_ORIGEM");

                entity.Property(e => e.AteRotulo).HasColumnName("ATE_ROTULO");

                entity.Property(e => e.AteSetorate).HasColumnName("ATE_SETORATE");

                entity.Property(e => e.AteSit).HasColumnName("ATE_SIT");

                entity.Property(e => e.AteTel)
                    .HasColumnName("ATE_TEL")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AteTipoate).HasColumnName("ATE_TIPOATE");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CliforconId).HasColumnName("CLIFORCON_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.NirelId).HasColumnName("NIREL_ID");

                entity.Property(e => e.OcoateId).HasColumnName("OCOATE_ID");

                entity.Property(e => e.OcoateTipo).HasColumnName("OCOATE_TIPO");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsAtendimentosAudio>(entity =>
            {
                entity.HasKey(e => new { e.AteaudioId, e.AssId });

                entity.ToTable("GS_ATENDIMENTOS_AUDIO");

                entity.Property(e => e.AteaudioId)
                    .HasColumnName("ATEAUDIO_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Arquivo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AteId).HasColumnName("ATE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAtendimentosInformacoes>(entity =>
            {
                entity.HasKey(e => new { e.AteinfId, e.AssId })
                    .HasName("PK_GS_ATENDIMENTO_INFORMACOES");

                entity.ToTable("GS_ATENDIMENTOS_INFORMACOES");

                entity.HasIndex(e => e.AteId)
                    .HasName("Idx_ATE_ID");

                entity.Property(e => e.AteinfId).HasColumnName("ATEINF_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AteId).HasColumnName("ATE_ID");

                entity.Property(e => e.AteinfInf).HasColumnName("ATEINF_INF");

                entity.Property(e => e.AteinfInfdesc)
                    .HasColumnName("ATEINF_INFDESC")
                    .HasColumnType("text");

                entity.Property(e => e.AteinfRec).HasColumnName("ATEINF_REC");

                entity.Property(e => e.AteinfRecdesc)
                    .HasColumnName("ATEINF_RECDESC")
                    .HasColumnType("text");

                entity.Property(e => e.AteinfSol).HasColumnName("ATEINF_SOL");

                entity.Property(e => e.AteinfSoldesc)
                    .HasColumnName("ATEINF_SOLDESC")
                    .HasColumnType("text");

                entity.Property(e => e.RagfaqId).HasColumnName("RAGFAQ_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsAtualizacaoSistema>(entity =>
            {
                entity.HasKey(e => e.AtusisId);

                entity.ToTable("GS_ATUALIZACAO_SISTEMA");

                entity.Property(e => e.AtusisId)
                    .HasColumnName("ATUSIS_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AtusisData)
                    .HasColumnName("ATUSIS_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.AtusisInfo)
                    .HasColumnName("ATUSIS_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.AtusisVercod1).HasColumnName("ATUSIS_VERCOD1");

                entity.Property(e => e.AtusisVercod2).HasColumnName("ATUSIS_VERCOD2");

                entity.Property(e => e.AtusisVercod3).HasColumnName("ATUSIS_VERCOD3");

                entity.Property(e => e.AtusisVercod4).HasColumnName("ATUSIS_VERCOD4");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBancos>(entity =>
            {
                entity.HasKey(e => e.BanId)
                    .HasName("PK_BANCOS");

                entity.ToTable("GS_BANCOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.Property(e => e.BanId)
                    .HasColumnName("BAN_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BanCod).HasColumnName("BAN_COD");

                entity.Property(e => e.BanDig).HasColumnName("BAN_DIG");

                entity.Property(e => e.BanLogofile)
                    .HasColumnName("BAN_LOGOFILE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.BanMasage)
                    .HasColumnName("BAN_MASAGE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BanMascon)
                    .HasColumnName("BAN_MASCON")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.BanNom)
                    .HasColumnName("BAN_NOM")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.BanSite)
                    .HasColumnName("BAN_SITE")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBancosClientes>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_BANCOS_CLIENTES");

                entity.Property(e => e.Banco)
                    .HasColumnName("BANCO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<GsBeneficios>(entity =>
            {
                entity.HasKey(e => new { e.BnfId, e.AssId })
                    .HasName("PK_GS_FUNCIONARIOS_BENEFICIOS");

                entity.ToTable("GS_BENEFICIOS");

                entity.Property(e => e.BnfId).HasColumnName("BNF_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BnfDes)
                    .HasColumnName("BNF_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BnfVal)
                    .HasColumnName("BNF_VAL")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBeneficiosFuncionarios>(entity =>
            {
                entity.HasKey(e => new { e.BnffunId, e.AssId, e.BnfId });

                entity.ToTable("GS_BENEFICIOS_FUNCIONARIOS");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.BnffunId).HasColumnName("BNFFUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BnfId).HasColumnName("BNF_ID");

                entity.Property(e => e.BnffunVal)
                    .HasColumnName("BNFFUN_VAL")
                    .HasColumnType("money");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoPagamento>(entity =>
            {
                entity.HasKey(e => new { e.BorpagId, e.AssId });

                entity.ToTable("GS_BORDERO_PAGAMENTO");

                entity.HasIndex(e => e.BorpagDatapr)
                    .HasName("Idx_BORPAG_DATAPR");

                entity.HasIndex(e => e.BorpagDatcan)
                    .HasName("Idx_BORPAG_DATCAN");

                entity.HasIndex(e => e.BorpagNum)
                    .HasName("Idx_BORPAG_NUM");

                entity.HasIndex(e => e.BorpagSit)
                    .HasName("Idx_BORPAG_SIT");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.BorpagId).HasColumnName("BORPAG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorpagDatapr)
                    .HasColumnName("BORPAG_DATAPR")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorpagDatcan)
                    .HasColumnName("BORPAG_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorpagMotcan)
                    .HasColumnName("BORPAG_MOTCAN")
                    .HasColumnType("text");

                entity.Property(e => e.BorpagNum).HasColumnName("BORPAG_NUM");

                entity.Property(e => e.BorpagObs)
                    .HasColumnName("BORPAG_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.BorpagOrdem).HasColumnName("BORPAG_ORDEM");

                entity.Property(e => e.BorpagPagunico).HasColumnName("BORPAG_PAGUNICO");

                entity.Property(e => e.BorpagParnum).HasColumnName("BORPAG_PARNUM");

                entity.Property(e => e.BorpagSit).HasColumnName("BORPAG_SIT");

                entity.Property(e => e.BorpagTit).HasColumnName("BORPAG_TIT");

                entity.Property(e => e.BorpagValpag)
                    .HasColumnName("BORPAG_VALPAG")
                    .HasColumnType("money");

                entity.Property(e => e.BorpagValtit)
                    .HasColumnName("BORPAG_VALTIT")
                    .HasColumnType("money");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysVersaoApr)
                    .HasColumnName("SYS_VERSAO_APR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysVersaoCad)
                    .HasColumnName("SYS_VERSAO_CAD")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysVersaoCan)
                    .HasColumnName("SYS_VERSAO_CAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsBorderoPagamentoCheque>(entity =>
            {
                entity.HasKey(e => e.BorpagchqId);

                entity.ToTable("GS_BORDERO_PAGAMENTO_CHEQUE");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.BanId)
                    .HasName("Idx_BAN_ID");

                entity.HasIndex(e => e.BorpagId)
                    .HasName("Idx_BORPAG_ID");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.Property(e => e.BorpagchqId)
                    .HasColumnName("BORPAGCHQ_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.BorpagId).HasColumnName("BORPAG_ID");

                entity.Property(e => e.BorpagchqAgencia)
                    .HasColumnName("BORPAGCHQ_AGENCIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagchqBompara)
                    .HasColumnName("BORPAGCHQ_BOMPARA")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorpagchqContacorrente)
                    .HasColumnName("BORPAGCHQ_CONTACORRENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagchqCpfcnpj)
                    .HasColumnName("BORPAGCHQ_CPFCNPJ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagchqDatapagamento)
                    .HasColumnName("BORPAGCHQ_DATAPAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorpagchqEmitente)
                    .HasColumnName("BORPAGCHQ_EMITENTE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagchqNumcheque)
                    .HasColumnName("BORPAGCHQ_NUMCHEQUE")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagchqOrigem)
                    .HasColumnName("BORPAGCHQ_ORIGEM")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagchqValor).HasColumnName("BORPAGCHQ_VALOR");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoPagamentoChequeBaixas>(entity =>
            {
                entity.HasKey(e => e.BorpagchqbxId);

                entity.ToTable("GS_BORDERO_PAGAMENTO_CHEQUE_BAIXAS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.BorpagchqId)
                    .HasName("Idx_BORPAGCHQ_ID");

                entity.HasIndex(e => e.CpbId)
                    .HasName("Idx_CPB_ID");

                entity.Property(e => e.BorpagchqbxId)
                    .HasColumnName("BORPAGCHQBX_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorpagchqId).HasColumnName("BORPAGCHQ_ID");

                entity.Property(e => e.CpbId).HasColumnName("CPB_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoPagamentoDetalhes>(entity =>
            {
                entity.HasKey(e => new { e.BorpagdetId, e.AssId });

                entity.ToTable("GS_BORDERO_PAGAMENTO_DETALHES");

                entity.HasIndex(e => e.BorpagId)
                    .HasName("Idx_BORPAG_ID");

                entity.HasIndex(e => e.BorpagtitId)
                    .HasName("Idx_BORPAGTIT_ID");

                entity.Property(e => e.BorpagdetId).HasColumnName("BORPAGDET_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorpagId).HasColumnName("BORPAG_ID");

                entity.Property(e => e.BorpagtitId).HasColumnName("BORPAGTIT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoPagamentoForpg>(entity =>
            {
                entity.HasKey(e => new { e.BorpagfpgId, e.AssId });

                entity.ToTable("GS_BORDERO_PAGAMENTO_FORPG");

                entity.Property(e => e.BorpagfpgId).HasColumnName("BORPAGFPG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorpagId).HasColumnName("BORPAG_ID");

                entity.Property(e => e.BorpagfpgChqnum).HasColumnName("BORPAGFPG_CHQNUM");

                entity.Property(e => e.BorpagfpgConta)
                    .HasColumnName("BORPAGFPG_CONTA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagfpgData)
                    .HasColumnName("BORPAGFPG_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorpagfpgOper).HasColumnName("BORPAGFPG_OPER");

                entity.Property(e => e.BorpagfpgValor)
                    .HasColumnName("BORPAGFPG_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.BorpagtitId).HasColumnName("BORPAGTIT_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.ForpagId).HasColumnName("FORPAG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoPagamentoTitulos>(entity =>
            {
                entity.HasKey(e => new { e.BorpagtitId, e.AssId });

                entity.ToTable("GS_BORDERO_PAGAMENTO_TITULOS");

                entity.HasIndex(e => e.AgrsugpagId)
                    .HasName("Idx_AGRSUGPAG_ID");

                entity.HasIndex(e => e.BanId)
                    .HasName("Idx_BAN_ID");

                entity.HasIndex(e => e.BorpagId)
                    .HasName("Idx_BORPAG_ID");

                entity.HasIndex(e => e.BorpagtitDatpag)
                    .HasName("Idx_BORPAGTIT_DATPAG");

                entity.HasIndex(e => e.CpbId)
                    .HasName("Idx_CPB_ID");

                entity.HasIndex(e => e.CppId)
                    .HasName("Idx_CPP_ID");

                entity.HasIndex(e => e.ForpagId)
                    .HasName("Idx_FORPAG_ID");

                entity.Property(e => e.BorpagtitId).HasColumnName("BORPAGTIT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AgrsugpagId).HasColumnName("AGRSUGPAG_ID");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.BorpagId).HasColumnName("BORPAG_ID");

                entity.Property(e => e.BorpagtitAgencia)
                    .HasColumnName("BORPAGTIT_AGENCIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagtitContacorrente)
                    .HasColumnName("BORPAGTIT_CONTACORRENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagtitCpfcnpj)
                    .HasColumnName("BORPAGTIT_CPFCNPJ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagtitDatchq)
                    .HasColumnName("BORPAGTIT_DATCHQ")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorpagtitDatpag)
                    .HasColumnName("BORPAGTIT_DATPAG")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorpagtitDesconto)
                    .HasColumnName("BORPAGTIT_DESCONTO")
                    .HasColumnType("money");

                entity.Property(e => e.BorpagtitEmitente)
                    .HasColumnName("BORPAGTIT_EMITENTE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagtitInfo)
                    .HasColumnName("BORPAGTIT_INFO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagtitJuros)
                    .HasColumnName("BORPAGTIT_JUROS")
                    .HasColumnType("money");

                entity.Property(e => e.BorpagtitMulta)
                    .HasColumnName("BORPAGTIT_MULTA")
                    .HasColumnType("money");

                entity.Property(e => e.BorpagtitNumchq).HasColumnName("BORPAGTIT_NUMCHQ");

                entity.Property(e => e.BorpagtitObs)
                    .HasColumnName("BORPAGTIT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.BorpagtitOdespesas)
                    .HasColumnName("BORPAGTIT_ODESPESAS")
                    .HasColumnType("money");

                entity.Property(e => e.BorpagtitOpe).HasColumnName("BORPAGTIT_OPE");

                entity.Property(e => e.BorpagtitOrigem)
                    .HasColumnName("BORPAGTIT_ORIGEM")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BorpagtitTotal)
                    .HasColumnName("BORPAGTIT_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.BorpagtitValor)
                    .HasColumnName("BORPAGTIT_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.CpbId).HasColumnName("CPB_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.ForpagId).HasColumnName("FORPAG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoRecebimento>(entity =>
            {
                entity.HasKey(e => new { e.BorrecId, e.AssId });

                entity.ToTable("GS_BORDERO_RECEBIMENTO");

                entity.HasIndex(e => e.BorrecDatapr)
                    .HasName("Idx_BORREC_DATAPR");

                entity.HasIndex(e => e.BorrecDatcan)
                    .HasName("Idx_BORREC_DATCAN");

                entity.HasIndex(e => e.BorrecSit)
                    .HasName("Idx_BORREC_SIT");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.BorrecId).HasColumnName("BORREC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorrecDatapr)
                    .HasColumnName("BORREC_DATAPR")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorrecDatcan)
                    .HasColumnName("BORREC_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorrecMotcan)
                    .HasColumnName("BORREC_MOTCAN")
                    .HasColumnType("text");

                entity.Property(e => e.BorrecNum).HasColumnName("BORREC_NUM");

                entity.Property(e => e.BorrecObs)
                    .HasColumnName("BORREC_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.BorrecOrdem).HasColumnName("BORREC_ORDEM");

                entity.Property(e => e.BorrecPagunico).HasColumnName("BORREC_PAGUNICO");

                entity.Property(e => e.BorrecParnum).HasColumnName("BORREC_PARNUM");

                entity.Property(e => e.BorrecSit).HasColumnName("BORREC_SIT");

                entity.Property(e => e.BorrecTit).HasColumnName("BORREC_TIT");

                entity.Property(e => e.BorrecValrec)
                    .HasColumnName("BORREC_VALREC")
                    .HasColumnType("money");

                entity.Property(e => e.BorrecValtit)
                    .HasColumnName("BORREC_VALTIT")
                    .HasColumnType("money");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysVersaoApr)
                    .HasColumnName("SYS_VERSAO_APR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysVersaoCad)
                    .HasColumnName("SYS_VERSAO_CAD")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysVersaoCan)
                    .HasColumnName("SYS_VERSAO_CAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsBorderoRecebimentoCheque>(entity =>
            {
                entity.HasKey(e => e.BorrecchqId);

                entity.ToTable("GS_BORDERO_RECEBIMENTO_CHEQUE");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.BanId)
                    .HasName("Idx_BAN_ID");

                entity.HasIndex(e => e.BorrecId)
                    .HasName("Idx_BORREC_ID");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.Property(e => e.BorrecchqId)
                    .HasColumnName("BORRECCHQ_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.BorrecId).HasColumnName("BORREC_ID");

                entity.Property(e => e.BorrecchqAgencia)
                    .HasColumnName("BORRECCHQ_AGENCIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BorrecchqBompara)
                    .HasColumnName("BORRECCHQ_BOMPARA")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorrecchqContacorrente)
                    .HasColumnName("BORRECCHQ_CONTACORRENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorrecchqCpfcnpj)
                    .HasColumnName("BORRECCHQ_CPFCNPJ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorrecchqDatapagamento)
                    .HasColumnName("BORRECCHQ_DATAPAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorrecchqEmitente)
                    .HasColumnName("BORRECCHQ_EMITENTE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.BorrecchqNumcheque)
                    .HasColumnName("BORRECCHQ_NUMCHEQUE")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.BorrecchqOrigem)
                    .HasColumnName("BORRECCHQ_ORIGEM")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BorrecchqValor).HasColumnName("BORRECCHQ_VALOR");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoRecebimentoChequeBaixas>(entity =>
            {
                entity.HasKey(e => e.BorrecchqbxId);

                entity.ToTable("GS_BORDERO_RECEBIMENTO_CHEQUE_BAIXAS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.BorrecchqId)
                    .HasName("Idx_BORRECCHQ_ID");

                entity.HasIndex(e => e.CrbId)
                    .HasName("Idx_CRB_ID");

                entity.Property(e => e.BorrecchqbxId)
                    .HasColumnName("BORRECCHQBX_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorrecchqId).HasColumnName("BORRECCHQ_ID");

                entity.Property(e => e.Borrecrateio).HasColumnName("BORRECRATEIO");

                entity.Property(e => e.CrbId).HasColumnName("CRB_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoRecebimentoDetalhes>(entity =>
            {
                entity.HasKey(e => new { e.BorrecdetId, e.AssId });

                entity.ToTable("GS_BORDERO_RECEBIMENTO_DETALHES");

                entity.HasIndex(e => e.BorrecId)
                    .HasName("Idx_BORREC_ID");

                entity.HasIndex(e => e.BorrectitId)
                    .HasName("Idx_BORRECTIT_ID");

                entity.Property(e => e.BorrecdetId).HasColumnName("BORRECDET_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorrecId).HasColumnName("BORREC_ID");

                entity.Property(e => e.BorrectitId).HasColumnName("BORRECTIT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsBorderoRecebimentoTitulos>(entity =>
            {
                entity.HasKey(e => new { e.BorrectitId, e.AssId });

                entity.ToTable("GS_BORDERO_RECEBIMENTO_TITULOS");

                entity.HasIndex(e => e.AgrsugrecId)
                    .HasName("Idx_AGRSUGREC_ID");

                entity.HasIndex(e => e.BorrecId)
                    .HasName("Idx_BORREC_ID");

                entity.HasIndex(e => e.BorrectitDatrec)
                    .HasName("Idx_BORRECTIT_DATREC");

                entity.HasIndex(e => e.CrpId)
                    .HasName("Idx_CRP_ID");

                entity.Property(e => e.BorrectitId).HasColumnName("BORRECTIT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AgrsugrecId).HasColumnName("AGRSUGREC_ID");

                entity.Property(e => e.BorrecId).HasColumnName("BORREC_ID");

                entity.Property(e => e.BorrectitAgechq)
                    .HasColumnName("BORRECTIT_AGECHQ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorrectitBanidchq).HasColumnName("BORRECTIT_BANIDCHQ");

                entity.Property(e => e.BorrectitConchq)
                    .HasColumnName("BORRECTIT_CONCHQ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorrectitDatchq)
                    .HasColumnName("BORRECTIT_DATCHQ")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorrectitDatrec)
                    .HasColumnName("BORRECTIT_DATREC")
                    .HasColumnType("datetime");

                entity.Property(e => e.BorrectitDesconto)
                    .HasColumnName("BORRECTIT_DESCONTO")
                    .HasColumnType("money");

                entity.Property(e => e.BorrectitInfo)
                    .HasColumnName("BORRECTIT_INFO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.BorrectitJuros)
                    .HasColumnName("BORRECTIT_JUROS")
                    .HasColumnType("money");

                entity.Property(e => e.BorrectitMulta)
                    .HasColumnName("BORRECTIT_MULTA")
                    .HasColumnType("money");

                entity.Property(e => e.BorrectitNumchq)
                    .HasColumnName("BORRECTIT_NUMCHQ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BorrectitObs)
                    .HasColumnName("BORRECTIT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.BorrectitOdespesas)
                    .HasColumnName("BORRECTIT_ODESPESAS")
                    .HasColumnType("money");

                entity.Property(e => e.BorrectitOpe).HasColumnName("BORRECTIT_OPE");

                entity.Property(e => e.BorrectitTotal)
                    .HasColumnName("BORRECTIT_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.BorrectitValor)
                    .HasColumnName("BORRECTIT_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.CrbId).HasColumnName("CRB_ID");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.ForpagId).HasColumnName("FORPAG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCadContasBancarias>(entity =>
            {
                entity.HasKey(e => new { e.CadconbanId, e.AssId });

                entity.ToTable("GS_CAD_CONTAS_BANCARIAS");

                entity.HasIndex(e => e.BanId)
                    .HasName("Idx_BAN_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.Property(e => e.CadconbanId).HasColumnName("CADCONBAN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.CadconbanAbertura)
                    .HasColumnName("CADCONBAN_ABERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CadconbanAge)
                    .HasColumnName("CADCONBAN_AGE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CadconbanConta)
                    .HasColumnName("CADCONBAN_CONTA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CadconbanCpf)
                    .HasColumnName("CADCONBAN_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CadconbanFone)
                    .HasColumnName("CADCONBAN_FONE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CadconbanGerente)
                    .HasColumnName("CADCONBAN_GERENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CadconbanNome)
                    .HasColumnName("CADCONBAN_NOME")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.CadconbanNomeage)
                    .HasColumnName("CADCONBAN_NOMEAGE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CadconbanParentesco)
                    .HasColumnName("CADCONBAN_PARENTESCO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.CadconbanTerc).HasColumnName("CADCONBAN_TERC");

                entity.Property(e => e.CadconbanTipo).HasColumnName("CADCONBAN_TIPO");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.ConPadrao).HasColumnName("CON_PADRAO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCancelamentosPedidosCompras>(entity =>
            {
                entity.ToTable("GS_CANCELAMENTOS_PEDIDOS_COMPRAS");

                entity.HasIndex(e => new { e.AssId, e.PccanId, e.PedcompId })
                    .HasName("IX_CANCELAMENTOS_PEDIDOS_COMPRAS")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PccanId).HasColumnName("PCCAN_ID");

                entity.Property(e => e.PedcompId).HasColumnName("PEDCOMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GsCancelamentosPedidosCompras)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CANPEDCOMP_ASS_ID");

                entity.HasOne(d => d.Pccan)
                    .WithMany(p => p.GsCancelamentosPedidosCompras)
                    .HasForeignKey(d => d.PccanId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CANPEDCOMP_PCCAN_ID");
            });

            modelBuilder.Entity<GsCargosFuncionarios>(entity =>
            {
                entity.HasKey(e => new { e.CarfunId, e.AssId });

                entity.ToTable("GS_CARGOS_FUNCIONARIOS");

                entity.Property(e => e.CarfunId).HasColumnName("CARFUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CarfunDes)
                    .HasColumnName("CARFUN_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CarfunHor1).HasColumnName("CARFUN_HOR1");

                entity.Property(e => e.CarfunHor2).HasColumnName("CARFUN_HOR2");

                entity.Property(e => e.CarfunHor3).HasColumnName("CARFUN_HOR3");

                entity.Property(e => e.CarfunHor4).HasColumnName("CARFUN_HOR4");

                entity.Property(e => e.CarfunHor5).HasColumnName("CARFUN_HOR5");

                entity.Property(e => e.CarfunHor6).HasColumnName("CARFUN_HOR6");

                entity.Property(e => e.CarfunPonto).HasColumnName("CARFUN_PONTO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCargosNiveis>(entity =>
            {
                entity.HasKey(e => new { e.CargnivId, e.AssId })
                    .HasName("PK_GS_GARGOS_NIVEIS");

                entity.ToTable("GS_CARGOS_NIVEIS");

                entity.Property(e => e.CargnivId).HasColumnName("CARGNIV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CarfunId).HasColumnName("CARFUN_ID");

                entity.Property(e => e.CargnivCotmin)
                    .HasColumnName("CARGNIV_COTMIN")
                    .HasColumnType("money");

                entity.Property(e => e.CargnivDes)
                    .HasColumnName("CARGNIV_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CargnivHorasTrab).HasColumnName("CARGNIV_HORAS_TRAB");

                entity.Property(e => e.CargnivPercom).HasColumnName("CARGNIV_PERCOM");

                entity.Property(e => e.CargnivPontoobj)
                    .HasColumnName("CARGNIV_PONTOOBJ")
                    .HasColumnType("money");

                entity.Property(e => e.CargnivSalbase)
                    .HasColumnName("CARGNIV_SALBASE")
                    .HasColumnType("money");

                entity.Property(e => e.CargnivTipsal).HasColumnName("CARGNIV_TIPSAL");

                entity.Property(e => e.CargnivValdir)
                    .HasColumnName("CARGNIV_VALDIR")
                    .HasColumnType("money");

                entity.Property(e => e.CargnivValevt)
                    .HasColumnName("CARGNIV_VALEVT")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCartaoPontoApontamento>(entity =>
            {
                entity.HasKey(e => new { e.CarponId, e.AssId });

                entity.ToTable("GS_CARTAO_PONTO_APONTAMENTO");

                entity.HasIndex(e => e.CarponData)
                    .HasName("Idx_CARPON_DATA");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.CarponId).HasColumnName("CARPON_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CarponDat1)
                    .HasColumnName("CARPON_DAT1")
                    .HasColumnType("datetime");

                entity.Property(e => e.CarponDat2)
                    .HasColumnName("CARPON_DAT2")
                    .HasColumnType("datetime");

                entity.Property(e => e.CarponDat3)
                    .HasColumnName("CARPON_DAT3")
                    .HasColumnType("datetime");

                entity.Property(e => e.CarponDat4)
                    .HasColumnName("CARPON_DAT4")
                    .HasColumnType("datetime");

                entity.Property(e => e.CarponDat5)
                    .HasColumnName("CARPON_DAT5")
                    .HasColumnType("datetime");

                entity.Property(e => e.CarponDat6)
                    .HasColumnName("CARPON_DAT6")
                    .HasColumnType("datetime");

                entity.Property(e => e.CarponData)
                    .HasColumnName("CARPON_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CarponHor1).HasColumnName("CARPON_HOR1");

                entity.Property(e => e.CarponHor2).HasColumnName("CARPON_HOR2");

                entity.Property(e => e.CarponHor3).HasColumnName("CARPON_HOR3");

                entity.Property(e => e.CarponHor4).HasColumnName("CARPON_HOR4");

                entity.Property(e => e.CarponHor5).HasColumnName("CARPON_HOR5");

                entity.Property(e => e.CarponHor6).HasColumnName("CARPON_HOR6");

                entity.Property(e => e.CarponMaqHor1)
                    .HasColumnName("CARPON_MAQ_HOR1")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CarponMaqHor2)
                    .HasColumnName("CARPON_MAQ_HOR2")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CarponMaqHor3)
                    .HasColumnName("CARPON_MAQ_HOR3")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CarponMaqHor4)
                    .HasColumnName("CARPON_MAQ_HOR4")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CarponMaqHor5)
                    .HasColumnName("CARPON_MAQ_HOR5")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CarponMaqHor6)
                    .HasColumnName("CARPON_MAQ_HOR6")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CarponObs)
                    .HasColumnName("CARPON_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CarponOpe).HasColumnName("CARPON_OPE");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCategoriaTitulos>(entity =>
            {
                entity.HasKey(e => new { e.CattitId, e.AssId });

                entity.ToTable("GS_CATEGORIA_TITULOS");

                entity.Property(e => e.CattitId).HasColumnName("CATTIT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CattitDes)
                    .HasColumnName("CATTIT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CattitSit).HasColumnName("CATTIT_SIT");

                entity.Property(e => e.CattitTipo).HasColumnName("CATTIT_TIPO");

                entity.Property(e => e.CattitVizualorc).HasColumnName("CATTIT_VIZUALORC");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCentroCusto>(entity =>
            {
                entity.HasKey(e => new { e.CencusgrpId, e.AssId })
                    .HasName("PK_GS_CENTRO_CUSTO_GRUPOS");

                entity.ToTable("GS_CENTRO_CUSTO");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpDes)
                    .HasColumnName("CENCUSGRP_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCerimonial>(entity =>
            {
                entity.HasKey(e => e.CerId)
                    .HasName("PK__GS_CERIM__8158F4CB0900FCDA");

                entity.ToTable("GS_CERIMONIAL");

                entity.Property(e => e.CerId).HasColumnName("CER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CerIdata)
                    .HasColumnName("CER_IDATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CerIgr).HasColumnName("CER_IGR");

                entity.Property(e => e.CerIhora).HasColumnName("CER_IHORA");

                entity.Property(e => e.CerNva)
                    .HasColumnName("CER_NVA")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.CerNvo)
                    .HasColumnName("CER_NVO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.CerObs)
                    .HasColumnName("CER_OBS")
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CerObsRec)
                    .HasColumnName("CER_OBS_REC")
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CerRdata)
                    .HasColumnName("CER_RDATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CerRec).HasColumnName("CER_REC");

                entity.Property(e => e.CerRhora).HasColumnName("CER_RHORA");

                entity.Property(e => e.CerSit).HasColumnName("CER_SIT");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCerimonialItens>(entity =>
            {
                entity.HasKey(e => e.CeiId)
                    .HasName("PK__GS_CERIM__A41C4C3905306BF6");

                entity.ToTable("GS_CERIMONIAL_ITENS");

                entity.Property(e => e.CeiId).HasColumnName("CEI_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CeiDes)
                    .HasColumnName("CEI_DES")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CeiTip).HasColumnName("CEI_TIP");

                entity.Property(e => e.CerId).HasColumnName("CER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCfop>(entity =>
            {
                entity.HasKey(e => new { e.CfopId, e.AssId })
                    .HasName("PK_GS_CFOP_1");

                entity.ToTable("GS_CFOP");

                entity.Property(e => e.CfopId).HasColumnName("CFOP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Cfcod).HasColumnName("CFCOD");

                entity.Property(e => e.Cfnome)
                    .HasColumnName("CFNOME")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.Cfnota)
                    .HasColumnName("CFNOTA")
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CfopSys).HasColumnName("CFOP_SYS");

                entity.Property(e => e.GeraEstoque).HasColumnName("GERA_ESTOQUE");

                entity.Property(e => e.GeraFinanceiro).HasColumnName("GERA_FINANCEIRO");

                entity.Property(e => e.MarcaDefault).HasColumnName("MARCA_DEFAULT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsChamadoTecnico>(entity =>
            {
                entity.HasKey(e => new { e.ChatecId, e.AssId });

                entity.ToTable("GS_CHAMADO_TECNICO");

                entity.HasIndex(e => e.ChatecVisitadata)
                    .HasName("Idx_CHATEC_VISITADATA");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.OcoateId)
                    .HasName("Idx_OCOATE_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.ChatecId).HasColumnName("CHATEC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ChatecAssunto)
                    .HasColumnName("CHATEC_ASSUNTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChatecContato)
                    .HasColumnName("CHATEC_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChatecDdd)
                    .HasColumnName("CHATEC_DDD")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ChatecEmail)
                    .HasColumnName("CHATEC_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ChatecInformacoes)
                    .HasColumnName("CHATEC_INFORMACOES")
                    .HasColumnType("text");

                entity.Property(e => e.ChatecNum).HasColumnName("CHATEC_NUM");

                entity.Property(e => e.ChatecObservacoes)
                    .HasColumnName("CHATEC_OBSERVACOES")
                    .HasColumnType("text");

                entity.Property(e => e.ChatecRelatorio)
                    .HasColumnName("CHATEC_RELATORIO")
                    .HasColumnType("text");

                entity.Property(e => e.ChatecSit).HasColumnName("CHATEC_SIT");

                entity.Property(e => e.ChatecTel)
                    .HasColumnName("CHATEC_TEL")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ChatecVisitadata)
                    .HasColumnName("CHATEC_VISITADATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ChatecVisitahora).HasColumnName("CHATEC_VISITAHORA");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.OcoateId).HasColumnName("OCOATE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsChamadoTecnicoEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.ChateceqtId, e.AssId });

                entity.ToTable("GS_CHAMADO_TECNICO_EQUIPAMENTOS");

                entity.HasIndex(e => e.ChatecId)
                    .HasName("Idx_CHATEC_ID");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.Property(e => e.ChateceqtId).HasColumnName("CHATECEQT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ChatecId).HasColumnName("CHATEC_ID");

                entity.Property(e => e.ChateceqtTroca).HasColumnName("CHATECEQT_TROCA");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsChamadoTecnicoMateriais>(entity =>
            {
                entity.HasKey(e => new { e.ChatecmatId, e.AssId });

                entity.ToTable("GS_CHAMADO_TECNICO_MATERIAIS");

                entity.HasIndex(e => e.ChatecId)
                    .HasName("Idx_CHATEC_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.Property(e => e.ChatecmatId).HasColumnName("CHATECMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ChatecId).HasColumnName("CHATEC_ID");

                entity.Property(e => e.ChatecmatQtderetorno).HasColumnName("CHATECMAT_QTDERETORNO");

                entity.Property(e => e.ChatecmatQtdesaida).HasColumnName("CHATECMAT_QTDESAIDA");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsChamadoTecnicoSeries>(entity =>
            {
                entity.HasKey(e => new { e.ChatecserId, e.AssId });

                entity.ToTable("GS_CHAMADO_TECNICO_SERIES");

                entity.HasIndex(e => e.ChatecId)
                    .HasName("Idx_CHATEC_ID");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.Property(e => e.ChatecserId).HasColumnName("CHATECSER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ChatecId).HasColumnName("CHATEC_ID");

                entity.Property(e => e.ChatecserTroca).HasColumnName("CHATECSER_TROCA");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsClassificacaoTitulos>(entity =>
            {
                entity.HasKey(e => new { e.ClatitId, e.AssId });

                entity.ToTable("GS_CLASSIFICACAO_TITULOS");

                entity.Property(e => e.ClatitId).HasColumnName("CLATIT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ClatitDes)
                    .HasColumnName("CLATIT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsClientesFornecedores>(entity =>
            {
                entity.HasKey(e => new { e.CliforId, e.AssId });

                entity.ToTable("GS_CLIENTES_FORNECEDORES");

                entity.HasIndex(e => e.CliforCpfcnpj)
                    .HasName("Idx_CLIFOR_CPFCNPJ");

                entity.HasIndex(e => e.CliforNome)
                    .HasName("Idx_CLIFOR_NOME");

                entity.HasIndex(e => e.ClifororiId)
                    .HasName("Idx_CLIFORORI_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.GrpcliId)
                    .HasName("Idx_GRPCLI_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforAss)
                    .HasColumnName("CLIFOR_ASS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CliforCodtra).HasColumnName("CLIFOR_CODTRA");

                entity.Property(e => e.CliforContato)
                    .HasColumnName("CLIFOR_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforContribuinteIcms).HasColumnName("CLIFOR_CONTRIBUINTE_ICMS");

                entity.Property(e => e.CliforCpfcnpj)
                    .HasColumnName("CLIFOR_CPFCNPJ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CliforDataContrato)
                    .HasColumnName("CLIFOR_DATA_CONTRATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.CliforDatnas)
                    .HasColumnName("CLIFOR_DATNAS")
                    .HasColumnType("datetime");

                entity.Property(e => e.CliforDdd1)
                    .HasColumnName("CLIFOR_DDD1")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforDdd2)
                    .HasColumnName("CLIFOR_DDD2")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforEmail)
                    .HasColumnName("CLIFOR_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforEmailnfe)
                    .HasColumnName("CLIFOR_EMAILNFE")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.CliforEndcobtip).HasColumnName("CLIFOR_ENDCOBTIP");

                entity.Property(e => e.CliforEndenttip).HasColumnName("CLIFOR_ENDENTTIP");

                entity.Property(e => e.CliforEstciv).HasColumnName("CLIFOR_ESTCIV");

                entity.Property(e => e.CliforExtrangeiro).HasColumnName("CLIFOR_EXTRANGEIRO");

                entity.Property(e => e.CliforFax)
                    .HasColumnName("CLIFOR_FAX")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforFunid).HasColumnName("CLIFOR_FUNID");

                entity.Property(e => e.CliforIccontato)
                    .HasColumnName("CLIFOR_ICCONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforIcemail)
                    .HasColumnName("CLIFOR_ICEMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforIcfone1)
                    .HasColumnName("CLIFOR_ICFONE1")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CliforIcfone2)
                    .HasColumnName("CLIFOR_ICFONE2")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CliforIcsite)
                    .HasColumnName("CLIFOR_ICSITE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforIm)
                    .HasColumnName("CLIFOR_IM")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CliforInfped).HasColumnName("CLIFOR_INFPED");

                entity.Property(e => e.CliforMalacor).HasColumnName("CLIFOR_MALACOR");

                entity.Property(e => e.CliforMalaemail).HasColumnName("CLIFOR_MALAEMAIL");

                entity.Property(e => e.CliforNextel)
                    .HasColumnName("CLIFOR_NEXTEL")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CliforNome)
                    .HasColumnName("CLIFOR_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CliforNomeemp)
                    .HasColumnName("CLIFOR_NOMEEMP")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CliforNumeroContrato)
                    .HasColumnName("CLIFOR_NUMERO_CONTRATO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CliforObs)
                    .HasColumnName("CLIFOR_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CliforProspect).HasColumnName("CLIFOR_PROSPECT");

                entity.Property(e => e.CliforRelfor)
                    .HasColumnName("CLIFOR_RELFOR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CliforRestfin).HasColumnName("CLIFOR_RESTFIN");

                entity.Property(e => e.CliforRgie)
                    .HasColumnName("CLIFOR_RGIE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CliforRs)
                    .HasColumnName("CLIFOR_RS")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CliforSexo).HasColumnName("CLIFOR_SEXO");

                entity.Property(e => e.CliforSit).HasColumnName("CLIFOR_SIT");

                entity.Property(e => e.CliforSite)
                    .HasColumnName("CLIFOR_SITE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforSuframa)
                    .HasColumnName("CLIFOR_SUFRAMA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CliforTel1)
                    .HasColumnName("CLIFOR_TEL1")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforTel2)
                    .HasColumnName("CLIFOR_TEL2")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforTipocad).HasColumnName("CLIFOR_TIPOCAD");

                entity.Property(e => e.CliforTipopes).HasColumnName("CLIFOR_TIPOPES");

                entity.Property(e => e.CliforUltimoate)
                    .HasColumnName("CLIFOR_ULTIMOATE")
                    .HasColumnType("datetime");

                entity.Property(e => e.CliforUltven).HasColumnName("CLIFOR_ULTVEN");

                entity.Property(e => e.CliforcobId).HasColumnName("CLIFORCOB_ID");

                entity.Property(e => e.Cliforend2Id).HasColumnName("CLIFOREND2_ID");

                entity.Property(e => e.Cliforend3Id).HasColumnName("CLIFOREND3_ID");

                entity.Property(e => e.CliforendId).HasColumnName("CLIFOREND_ID");

                entity.Property(e => e.ClifororiId).HasColumnName("CLIFORORI_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.GrpcliId).HasColumnName("GRPCLI_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.LogData)
                    .HasColumnName("LOG_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.LogIpnum)
                    .HasColumnName("LOG_IPNUM")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.LogUsuario)
                    .HasColumnName("LOG_USUARIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RtvId).HasColumnName("RTV_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.VenId).HasColumnName("VEN_ID");
            });

            modelBuilder.Entity<GsClientesFornecedoresContatos>(entity =>
            {
                entity.HasKey(e => new { e.CliforconId, e.AssId, e.CliforId });

                entity.ToTable("GS_CLIENTES_FORNECEDORES_CONTATOS");

                entity.Property(e => e.CliforconId).HasColumnName("CLIFORCON_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.AssPagaHospedagem).HasColumnName("ASS_PAGA_HOSPEDAGEM");

                entity.Property(e => e.AssPagaManutencao).HasColumnName("ASS_PAGA_MANUTENCAO");

                entity.Property(e => e.CliforconCpf)
                    .HasColumnName("CLIFORCON_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconDatnasc)
                    .HasColumnName("CLIFORCON_DATNASC")
                    .HasColumnType("datetime");

                entity.Property(e => e.CliforconDdd)
                    .HasColumnName("CLIFORCON_DDD")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforconDdd1)
                    .HasColumnName("CLIFORCON_DDD1")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforconDdd2)
                    .HasColumnName("CLIFORCON_DDD2")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforconEmail)
                    .HasColumnName("CLIFORCON_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconMsn)
                    .HasColumnName("CLIFORCON_MSN")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconNextel)
                    .HasColumnName("CLIFORCON_NEXTEL")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconNome)
                    .HasColumnName("CLIFORCON_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconOperadora)
                    .HasColumnName("CLIFORCON_OPERADORA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconOperadora1)
                    .HasColumnName("CLIFORCON_OPERADORA1")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconOperadora2)
                    .HasColumnName("CLIFORCON_OPERADORA2")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconRg)
                    .HasColumnName("CLIFORCON_RG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconSetor)
                    .HasColumnName("CLIFORCON_SETOR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconSkype)
                    .HasColumnName("CLIFORCON_SKYPE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconTel)
                    .HasColumnName("CLIFORCON_TEL")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconTel1)
                    .HasColumnName("CLIFORCON_TEL1")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconTel2)
                    .HasColumnName("CLIFORCON_TEL2")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforconTipo).HasColumnName("CLIFORCON_TIPO");

                entity.Property(e => e.CliforconTipo1).HasColumnName("CLIFORCON_TIPO1");

                entity.Property(e => e.CliforconTipo2).HasColumnName("CLIFORCON_TIPO2");

                entity.Property(e => e.CliforconUsuario).HasColumnName("CLIFORCON_USUARIO");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsClientesFornecedoresEndereco>(entity =>
            {
                entity.HasKey(e => new { e.CliforendId, e.AssId, e.CliforId })
                    .HasName("PK_GS_CLIENTES_FORNECEDORES_ENDERECO_1");

                entity.ToTable("GS_CLIENTES_FORNECEDORES_ENDERECO");

                entity.HasIndex(e => e.CidId)
                    .HasName("Idx_CID_ID");

                entity.Property(e => e.CliforendId).HasColumnName("CLIFOREND_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.ClieforendEmail)
                    .HasColumnName("CLIEFOREND_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendBai)
                    .HasColumnName("CLIFOREND_BAI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendCep)
                    .HasColumnName("CLIFOREND_CEP")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CliforendCpl)
                    .HasColumnName("CLIFOREND_CPL")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendDes)
                    .HasColumnName("CLIFOREND_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendEmail)
                    .HasColumnName("CLIFOREND_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendNum)
                    .HasColumnName("CLIFOREND_NUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendTipo).HasColumnName("CLIFOREND_TIPO");

                entity.Property(e => e.CliforendTipobak).HasColumnName("CLIFOREND_TIPOBAK");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsClientesFornecedoresEndereco2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_CLIENTES_FORNECEDORES_ENDERECO2");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.ClieforendEmail)
                    .HasColumnName("CLIEFOREND_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CliforendBai)
                    .HasColumnName("CLIFOREND_BAI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendCep)
                    .HasColumnName("CLIFOREND_CEP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendCpl)
                    .HasColumnName("CLIFOREND_CPL")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendDes)
                    .HasColumnName("CLIFOREND_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendEmail)
                    .HasColumnName("CLIFOREND_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendId).HasColumnName("CLIFOREND_ID");

                entity.Property(e => e.CliforendNum)
                    .HasColumnName("CLIFOREND_NUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CliforendTipo).HasColumnName("CLIFOREND_TIPO");

                entity.Property(e => e.CliforendTipobak).HasColumnName("CLIFOREND_TIPOBAK");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsClientesFornecedoresGrupos>(entity =>
            {
                entity.HasKey(e => new { e.GrpcliforId, e.AssId });

                entity.ToTable("GS_CLIENTES_FORNECEDORES_GRUPOS");

                entity.Property(e => e.GrpcliforId).HasColumnName("GRPCLIFOR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.GrpcliforDes)
                    .HasColumnName("GRPCLIFOR_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GrpcliforTipo).HasColumnName("GRPCLIFOR_TIPO");

                entity.Property(e => e.GrpcliforTipoidx).HasColumnName("GRPCLIFOR_TIPOIDX");

                entity.Property(e => e.GrpcliforValidx).HasColumnName("GRPCLIFOR_VALIDX");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsClientesFornecedoresObs>(entity =>
            {
                entity.HasKey(e => new { e.CliforobsId, e.AssId });

                entity.ToTable("GS_CLIENTES_FORNECEDORES_OBS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.Property(e => e.CliforobsId).HasColumnName("CLIFOROBS_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CliforobsData)
                    .HasColumnName("CLIFOROBS_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CliforobsObs)
                    .HasColumnName("CLIFOROBS_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsClientesFornecedoresOrigem>(entity =>
            {
                entity.HasKey(e => new { e.ClifororiId, e.AssId });

                entity.ToTable("GS_CLIENTES_FORNECEDORES_ORIGEM");

                entity.Property(e => e.ClifororiId).HasColumnName("CLIFORORI_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ClifororiDes)
                    .HasColumnName("CLIFORORI_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCodigos>(entity =>
            {
                entity.HasKey(e => e.CodMod);

                entity.ToTable("GS_CODIGOS");

                entity.Property(e => e.CodMod)
                    .HasColumnName("COD_MOD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodVal).HasColumnName("COD_VAL");
            });

            modelBuilder.Entity<GsComissaovendas>(entity =>
            {
                entity.HasKey(e => new { e.ComvenId, e.AssId })
                    .HasName("GS_COMISSAOVENDAS_PK");

                entity.ToTable("GS_COMISSAOVENDAS");

                entity.HasIndex(e => e.ComvenDatafim)
                    .HasName("Idx_COMVEN_DATAFIM");

                entity.HasIndex(e => e.ComvenDataini)
                    .HasName("Idx_COMVEN_DATAINI");

                entity.HasIndex(e => e.ComvenFunid)
                    .HasName("Idx_COMVEN_FUNID");

                entity.HasIndex(e => e.CppId)
                    .HasName("Idx_CPP_ID");

                entity.HasIndex(e => e.CrpId)
                    .HasName("Idx_CRP_ID");

                entity.HasIndex(e => e.CrtId)
                    .HasName("Idx_CRT_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.Property(e => e.ComvenId).HasColumnName("COMVEN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ComvenCal).HasColumnName("COMVEN_CAL");

                entity.Property(e => e.ComvenDatafim)
                    .HasColumnName("COMVEN_DATAFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.ComvenDataini)
                    .HasColumnName("COMVEN_DATAINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ComvenFunid).HasColumnName("COMVEN_FUNID");

                entity.Property(e => e.ComvenParcela).HasColumnName("COMVEN_PARCELA");

                entity.Property(e => e.ComvenPor).HasColumnName("COMVEN_POR");

                entity.Property(e => e.ComvenTipo).HasColumnName("COMVEN_TIPO");

                entity.Property(e => e.ComvenValor).HasColumnName("COMVEN_VALOR");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.CrtId).HasColumnName("CRT_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCompromissosAgendados>(entity =>
            {
                entity.HasKey(e => new { e.CpmageId, e.AssId })
                    .IsClustered(false);

                entity.ToTable("GS_COMPROMISSOS_AGENDADOS");

                entity.HasIndex(e => e.AteId)
                    .HasName("Idx_ATE_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.CpmageData)
                    .HasName("Idx_CPMAGE_DATA");

                entity.HasIndex(e => e.CpmageTipo)
                    .HasName("Idx_CPMAGE_TIPO");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.CpmageId).HasColumnName("CPMAGE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AteId).HasColumnName("ATE_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CpmageAss)
                    .HasColumnName("CPMAGE_ASS")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.CpmageContato)
                    .HasColumnName("CPMAGE_CONTATO")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.CpmageData)
                    .HasColumnName("CPMAGE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CpmageDataprg)
                    .HasColumnName("CPMAGE_DATAPRG")
                    .HasColumnType("datetime");

                entity.Property(e => e.CpmageDdd)
                    .HasColumnName("CPMAGE_DDD")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CpmageDes)
                    .HasColumnName("CPMAGE_DES")
                    .HasColumnType("text");

                entity.Property(e => e.CpmageHora).HasColumnName("CPMAGE_HORA");

                entity.Property(e => e.CpmageRot).HasColumnName("CPMAGE_ROT");

                entity.Property(e => e.CpmageSit).HasColumnName("CPMAGE_SIT");

                entity.Property(e => e.CpmageTel)
                    .HasColumnName("CPMAGE_TEL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CpmageTipo).HasColumnName("CPMAGE_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsCompromissosAgendadosAtendentes>(entity =>
            {
                entity.HasKey(e => e.CpmageateId)
                    .HasName("PK__GS_COMPR__9A0B385A3D7E1B63");

                entity.ToTable("GS_COMPROMISSOS_AGENDADOS_ATENDENTES");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.CpmageId)
                    .HasName("Idx_CPMAGE_ID");

                entity.Property(e => e.CpmageateId)
                    .HasColumnName("CPMAGEATE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AteId).HasColumnName("ATE_ID");

                entity.Property(e => e.CpmageId).HasColumnName("CPMAGE_ID");

                entity.Property(e => e.CpmageateEnviado).HasColumnName("CPMAGEATE_ENVIADO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCondicoesPagto>(entity =>
            {
                entity.HasKey(e => new { e.ConpagId, e.AssId })
                    .HasName("PK_CONDICOES_PAGTO");

                entity.ToTable("GS_CONDICOES_PAGTO");

                entity.Property(e => e.ConpagId).HasColumnName("CONPAG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConpagDes)
                    .IsRequired()
                    .HasColumnName("CONPAG_DES")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ConpagDiavct).HasColumnName("CONPAG_DIAVCT");

                entity.Property(e => e.ConpagNfeconpagTipoId).HasColumnName("CONPAG_NFECONPAG_TIPO_ID");

                entity.Property(e => e.ConpagPar).HasColumnName("CONPAG_PAR");

                entity.Property(e => e.ConpagPerc).HasColumnName("CONPAG_PERC");

                entity.Property(e => e.ConpagRatauto).HasColumnName("CONPAG_RATAUTO");

                entity.Property(e => e.ConpagTip).HasColumnName("CONPAG_TIP");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCondicoesPagtoParcelas>(entity =>
            {
                entity.HasKey(e => new { e.ConpagparId, e.AssId, e.ConpagId });

                entity.ToTable("GS_CONDICOES_PAGTO_PARCELAS");

                entity.Property(e => e.ConpagparId).HasColumnName("CONPAGPAR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConpagId).HasColumnName("CONPAG_ID");

                entity.Property(e => e.ConpagparDia).HasColumnName("CONPAGPAR_DIA");

                entity.Property(e => e.ConpagparJuros).HasColumnName("CONPAGPAR_JUROS");

                entity.Property(e => e.ConpagparPerc).HasColumnName("CONPAGPAR_PERC");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsConfImpressora>(entity =>
            {
                entity.HasKey(e => new { e.ConfimpId, e.AssId })
                    .HasName("PK_GS_CONF_IMPRESSORA_1");

                entity.ToTable("GS_CONF_IMPRESSORA");

                entity.Property(e => e.ConfimpId).HasColumnName("CONFIMP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Etqalt).HasColumnName("ETQALT");

                entity.Property(e => e.Etqaltbar).HasColumnName("ETQALTBAR");

                entity.Property(e => e.Etqaltpatrimonio).HasColumnName("ETQALTPATRIMONIO");

                entity.Property(e => e.Etqespcol).HasColumnName("ETQESPCOL");

                entity.Property(e => e.Etqesplin).HasColumnName("ETQESPLIN");

                entity.Property(e => e.Etqexphorapre).HasColumnName("ETQEXPHORAPRE");

                entity.Property(e => e.Etqexphorbar).HasColumnName("ETQEXPHORBAR");

                entity.Property(e => e.Etqexphorcod).HasColumnName("ETQEXPHORCOD");

                entity.Property(e => e.Etqexphoremp).HasColumnName("ETQEXPHOREMP");

                entity.Property(e => e.Etqexphorpatrimonio).HasColumnName("ETQEXPHORPATRIMONIO");

                entity.Property(e => e.Etqexpvertapre).HasColumnName("ETQEXPVERTAPRE");

                entity.Property(e => e.Etqexpvertbar).HasColumnName("ETQEXPVERTBAR");

                entity.Property(e => e.Etqexpvertcod).HasColumnName("ETQEXPVERTCOD");

                entity.Property(e => e.Etqexpvertemp).HasColumnName("ETQEXPVERTEMP");

                entity.Property(e => e.Etqexpvertpatrimonio).HasColumnName("ETQEXPVERTPATRIMONIO");

                entity.Property(e => e.Etqfontapre).HasColumnName("ETQFONTAPRE");

                entity.Property(e => e.Etqfontcod).HasColumnName("ETQFONTCOD");

                entity.Property(e => e.Etqfontemp).HasColumnName("ETQFONTEMP");

                entity.Property(e => e.Etqfontpatrimonio).HasColumnName("ETQFONTPATRIMONIO");

                entity.Property(e => e.Etqlarg).HasColumnName("ETQLARG");

                entity.Property(e => e.Etqmargesqapre).HasColumnName("ETQMARGESQAPRE");

                entity.Property(e => e.Etqmargesqbar).HasColumnName("ETQMARGESQBAR");

                entity.Property(e => e.Etqmargesqcod).HasColumnName("ETQMARGESQCOD");

                entity.Property(e => e.Etqmargesqemp).HasColumnName("ETQMARGESQEMP");

                entity.Property(e => e.Etqmargesqpatrimonio).HasColumnName("ETQMARGESQPATRIMONIO");

                entity.Property(e => e.Etqmargsupapre).HasColumnName("ETQMARGSUPAPRE");

                entity.Property(e => e.Etqmargsupbar).HasColumnName("ETQMARGSUPBAR");

                entity.Property(e => e.Etqmargsupcod).HasColumnName("ETQMARGSUPCOD");

                entity.Property(e => e.Etqmargsupemp).HasColumnName("ETQMARGSUPEMP");

                entity.Property(e => e.Etqmargsuppatrimonio).HasColumnName("ETQMARGSUPPATRIMONIO");

                entity.Property(e => e.Etqmodelo)
                    .HasColumnName("ETQMODELO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Etqnumcol).HasColumnName("ETQNUMCOL");

                entity.Property(e => e.Etqrotacao).HasColumnName("ETQROTACAO");

                entity.Property(e => e.Etqvizapr).HasColumnName("ETQVIZAPR");

                entity.Property(e => e.Etqvizbarra).HasColumnName("ETQVIZBARRA");

                entity.Property(e => e.Etqvizcod).HasColumnName("ETQVIZCOD");

                entity.Property(e => e.Etqvizempresa).HasColumnName("ETQVIZEMPRESA");

                entity.Property(e => e.Etqvizpatrimonio).HasColumnName("ETQVIZPATRIMONIO");

                entity.Property(e => e.Impressora).HasColumnName("IMPRESSORA");

                entity.Property(e => e.Linguagem).HasColumnName("LINGUAGEM");

                entity.Property(e => e.Localimpressora)
                    .HasColumnName("LOCALIMPRESSORA")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasBancarias>(entity =>
            {
                entity.HasKey(e => new { e.ConbanId, e.AssId })
                    .HasName("PK_CONTAS_BANCARIAS");

                entity.ToTable("GS_CONTAS_BANCARIAS");

                entity.HasIndex(e => e.BanId)
                    .HasName("Idx_BAN_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.OpecarId)
                    .HasName("Idx_OPECAR_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.ConbanAge)
                    .HasColumnName("CONBAN_AGE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanCarteiras)
                    .HasColumnName("CONBAN_CARTEIRAS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanCodced)
                    .HasColumnName("CONBAN_CODCED")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanCon)
                    .HasColumnName("CONBAN_CON")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanContrato)
                    .HasColumnName("CONBAN_CONTRATO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanDatabe)
                    .HasColumnName("CONBAN_DATABE")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConbanDes)
                    .HasColumnName("CONBAN_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanDigage)
                    .HasColumnName("CONBAN_DIGAGE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanDigcodced)
                    .HasColumnName("CONBAN_DIGCODCED")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanDigcon)
                    .HasColumnName("CONBAN_DIGCON")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanForarq).HasColumnName("CONBAN_FORARQ");

                entity.Property(e => e.ConbanGernosnum).HasColumnName("CONBAN_GERNOSNUM");

                entity.Property(e => e.ConbanInstcob)
                    .HasColumnName("CONBAN_INSTCOB")
                    .HasColumnType("text");

                entity.Property(e => e.ConbanInstpag)
                    .HasColumnName("CONBAN_INSTPAG")
                    .HasColumnType("text");

                entity.Property(e => e.ConbanLocalpag)
                    .HasColumnName("CONBAN_LOCALPAG")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanNomtit)
                    .HasColumnName("CONBAN_NOMTIT")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanNosnumatu).HasColumnName("CONBAN_NOSNUMATU");

                entity.Property(e => e.ConbanNosnumfim).HasColumnName("CONBAN_NOSNUMFIM");

                entity.Property(e => e.ConbanNosnumini).HasColumnName("CONBAN_NOSNUMINI");

                entity.Property(e => e.ConbanNumcar)
                    .HasColumnName("CONBAN_NUMCAR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanObs)
                    .HasColumnName("CONBAN_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.ConbanPapcob).HasColumnName("CONBAN_PAPCOB");

                entity.Property(e => e.ConbanPatharqrem)
                    .HasColumnName("CONBAN_PATHARQREM")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanPatharqret)
                    .HasColumnName("CONBAN_PATHARQRET")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanRegis).HasColumnName("CONBAN_REGIS");

                entity.Property(e => e.ConbanRemini).HasColumnName("CONBAN_REMINI");

                entity.Property(e => e.ConbanSalatu)
                    .HasColumnName("CONBAN_SALATU")
                    .HasColumnType("money");

                entity.Property(e => e.ConbanSalini)
                    .HasColumnName("CONBAN_SALINI")
                    .HasColumnType("money");

                entity.Property(e => e.ConbanSallim)
                    .HasColumnName("CONBAN_SALLIM")
                    .HasColumnType("money");

                entity.Property(e => e.ConbanSegarqmag).HasColumnName("CONBAN_SEGARQMAG");

                entity.Property(e => e.ConbanSit).HasColumnName("CONBAN_SIT");

                entity.Property(e => e.ConbanTipbol).HasColumnName("CONBAN_TIPBOL");

                entity.Property(e => e.ConbanTipcon).HasColumnName("CONBAN_TIPCON");

                entity.Property(e => e.ConbanTippes).HasColumnName("CONBAN_TIPPES");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.Id26)
                    .HasColumnName("ID26")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OpecarId).HasColumnName("OPECAR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TarifaAdm).HasColumnName("TARIFA_ADM");

                entity.Property(e => e.TarifaIof).HasColumnName("TARIFA_IOF");

                entity.Property(e => e.TaxaAdn).HasColumnName("TAXA_ADN");

                entity.Property(e => e.UltTarifaAdm).HasColumnName("ULT_TARIFA_ADM");

                entity.Property(e => e.UltTarifaIof).HasColumnName("ULT_TARIFA_IOF");

                entity.Property(e => e.UltTaxaAdn).HasColumnName("ULT_TAXA_ADN");
            });

            modelBuilder.Entity<GsContasBancariasCheque>(entity =>
            {
                entity.HasKey(e => new { e.ConchqId, e.ConbanId, e.AssId })
                    .HasName("PK_GS_CONTA_BANCARIA_CHEQUE");

                entity.ToTable("GS_CONTAS_BANCARIAS_CHEQUE");

                entity.Property(e => e.ConchqId).HasColumnName("CONCHQ_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConchqData)
                    .HasColumnName("CONCHQ_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConchqNumfim).HasColumnName("CONCHQ_NUMFIM");

                entity.Property(e => e.ConchqNumini).HasColumnName("CONCHQ_NUMINI");

                entity.Property(e => e.ConchqResp)
                    .HasColumnName("CONCHQ_RESP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasPagarBaixas>(entity =>
            {
                entity.HasKey(e => new { e.CpbId, e.AssId });

                entity.ToTable("GS_CONTAS_PAGAR_BAIXAS");

                entity.HasIndex(e => e.BanId)
                    .HasName("Idx_BAN_ID");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.HasIndex(e => e.CpbDatbaixa)
                    .HasName("Idx_CPB_DATBAIXA");

                entity.HasIndex(e => e.CppId)
                    .HasName("Idx_CPP_ID");

                entity.HasIndex(e => e.CppUsuarioIdAlt)
                    .HasName("Idx_CPP_USUARIO_ID_ALT");

                entity.HasIndex(e => e.OpecadId)
                    .HasName("Idx_OPECAD_ID");

                entity.Property(e => e.CpbId).HasColumnName("CPB_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AgepagId).HasColumnName("AGEPAG_ID");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.BorpagId).HasColumnName("BORPAG_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.CpbAgeban)
                    .HasColumnName("CPB_AGEBAN")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CpbCartnum)
                    .HasColumnName("CPB_CARTNUM")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpbChqNmTerceiro)
                    .HasColumnName("CPB_CHQ_NM_TERCEIRO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CpbChqOpcProprioTerceiro)
                    .HasColumnName("CPB_CHQ_OPC_PROPRIO_TERCEIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CpbChqOpcUniVarios)
                    .HasColumnName("CPB_CHQ_OPC_UNI_VARIOS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CpbChqban)
                    .HasColumnName("CPB_CHQBAN")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CpbChqdatpag)
                    .HasColumnName("CPB_CHQDATPAG")
                    .HasColumnType("datetime");

                entity.Property(e => e.CpbConban)
                    .HasColumnName("CPB_CONBAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpbCpfcnpj)
                    .HasColumnName("CPB_CPFCNPJ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CpbDatbaixa)
                    .HasColumnName("CPB_DATBAIXA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CpbExtorno).HasColumnName("CPB_EXTORNO");

                entity.Property(e => e.CpbObs)
                    .HasColumnName("CPB_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CpbSit).HasColumnName("CPB_SIT");

                entity.Property(e => e.CpbTipmovban).HasColumnName("CPB_TIPMOVBAN");

                entity.Property(e => e.CpbValbaixa).HasColumnName("CPB_VALBAIXA");

                entity.Property(e => e.CpbValdes).HasColumnName("CPB_VALDES");

                entity.Property(e => e.CpbValjur).HasColumnName("CPB_VALJUR");

                entity.Property(e => e.CpbValmul).HasColumnName("CPB_VALMUL");

                entity.Property(e => e.CpbValoutdes).HasColumnName("CPB_VALOUTDES");

                entity.Property(e => e.CpbValpag).HasColumnName("CPB_VALPAG");

                entity.Property(e => e.CppDataAlt)
                    .HasColumnName("CPP_DATA_ALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatvct)
                    .HasColumnName("CPP_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.CppUsuarioIdAlt).HasColumnName("CPP_USUARIO_ID_ALT");

                entity.Property(e => e.CppValpagar).HasColumnName("CPP_VALPAGAR");

                entity.Property(e => e.ForpagId).HasColumnName("FORPAG_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.OpcCalcTaxa)
                    .HasColumnName("OPC_CALC_TAXA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OpcCreDeb)
                    .HasColumnName("OPC_CRE_DEB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OpecadId).HasColumnName("OPECAD_ID");

                entity.Property(e => e.QtdParcCre).HasColumnName("QTD_PARC_CRE");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasPagarCcusto>(entity =>
            {
                entity.HasKey(e => new { e.CpccId, e.AssId });

                entity.ToTable("GS_CONTAS_PAGAR_CCUSTO");

                entity.HasIndex(e => e.CencusgrpId)
                    .HasName("Idx_CENCUSGRP_ID");

                entity.HasIndex(e => e.CppId)
                    .HasName("Idx_CPP_ID");

                entity.Property(e => e.CpccId).HasColumnName("CPCC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AdiiteId).HasColumnName("ADIITE_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.CpccPercentual).HasColumnName("CPCC_PERCENTUAL");

                entity.Property(e => e.CpccValor)
                    .HasColumnName("CPCC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasPagarParcela>(entity =>
            {
                entity.HasKey(e => new { e.CppId, e.AssId });

                entity.ToTable("GS_CONTAS_PAGAR_PARCELA");

                entity.HasIndex(e => e.ClatitId)
                    .HasName("Idx_CLATIT_ID");

                entity.HasIndex(e => e.CppDatemi)
                    .HasName("Idx_CPP_DATEMI");

                entity.HasIndex(e => e.CppDatvct)
                    .HasName("Idx_CPP_DATVCT");

                entity.HasIndex(e => e.CppPrevpag)
                    .HasName("Idx_CPP_PREVPAG");

                entity.HasIndex(e => e.CppSit)
                    .HasName("Idx_CPP_SIT");

                entity.HasIndex(e => e.CptId)
                    .HasName("Idx_CPT_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AdiiteId).HasColumnName("ADIITE_ID");

                entity.Property(e => e.AdiorcId).HasColumnName("ADIORC_ID");

                entity.Property(e => e.ClatitId).HasColumnName("CLATIT_ID");

                entity.Property(e => e.ConbanId)
                    .HasColumnName("CONBAN_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CppAnot)
                    .HasColumnName("CPP_ANOT")
                    .HasColumnType("text");

                entity.Property(e => e.CppDatcan)
                    .HasColumnName("CPP_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatemi)
                    .HasColumnName("CPP_DATEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatpag)
                    .HasColumnName("CPP_DATPAG")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatprebak)
                    .HasColumnName("CPP_DATPREBAK")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatvct)
                    .HasColumnName("CPP_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatvctbak)
                    .HasColumnName("CPP_DATVCTBAK")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppEmissaocheque).HasColumnName("CPP_EMISSAOCHEQUE");

                entity.Property(e => e.CppFolhalanId)
                    .HasColumnName("CPP_FOLHALAN_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CppForpag).HasColumnName("CPP_FORPAG");

                entity.Property(e => e.CppNum).HasColumnName("CPP_NUM");

                entity.Property(e => e.CppNumnot).HasColumnName("CPP_NUMNOT");

                entity.Property(e => e.CppObs)
                    .HasColumnName("CPP_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CppPrevdatpago)
                    .HasColumnName("CPP_PREVDATPAGO")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppPrevforpagid).HasColumnName("CPP_PREVFORPAGID");

                entity.Property(e => e.CppPrevpag).HasColumnName("CPP_PREVPAG");

                entity.Property(e => e.CppSit).HasColumnName("CPP_SIT");

                entity.Property(e => e.CppSitold).HasColumnName("CPP_SITOLD");

                entity.Property(e => e.CppValdesc).HasColumnName("CPP_VALDESC");

                entity.Property(e => e.CppValjur).HasColumnName("CPP_VALJUR");

                entity.Property(e => e.CppValmulta).HasColumnName("CPP_VALMULTA");

                entity.Property(e => e.CppValout).HasColumnName("CPP_VALOUT");

                entity.Property(e => e.CppValpagar).HasColumnName("CPP_VALPAGAR");

                entity.Property(e => e.CppValpago).HasColumnName("CPP_VALPAGO");

                entity.Property(e => e.CppValpar).HasColumnName("CPP_VALPAR");

                entity.Property(e => e.CptId).HasColumnName("CPT_ID");

                entity.Property(e => e.CrpFaseNeg)
                    .HasColumnName("CRP_FASE_NEG")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.OrcbvId).HasColumnName("ORCBV_ID");

                entity.Property(e => e.OrcdespId).HasColumnName("ORCDESP_ID");

                entity.Property(e => e.OrceqtterId).HasColumnName("ORCEQTTER_ID");

                entity.Property(e => e.OrcservId).HasColumnName("ORCSERV_ID");

                entity.Property(e => e.OrctecId).HasColumnName("ORCTEC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasPagarParcelasBak>(entity =>
            {
                entity.HasKey(e => new { e.CppId, e.AssId })
                    .HasName("PK_GS_CONTAS_PAGAR_PARCELAS");

                entity.ToTable("GS_CONTAS_PAGAR_PARCELAS_bak");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CppAnot)
                    .HasColumnName("CPP_ANOT")
                    .HasColumnType("text");

                entity.Property(e => e.CppDatcan)
                    .HasColumnName("CPP_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatemi)
                    .HasColumnName("CPP_DATEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatpag)
                    .HasColumnName("CPP_DATPAG")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppDatvct)
                    .HasColumnName("CPP_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppForpag).HasColumnName("CPP_FORPAG");

                entity.Property(e => e.CppNum).HasColumnName("CPP_NUM");

                entity.Property(e => e.CppObs)
                    .HasColumnName("CPP_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CppPrevdatpago)
                    .HasColumnName("CPP_PREVDATPAGO")
                    .HasColumnType("datetime");

                entity.Property(e => e.CppPrevforpagid).HasColumnName("CPP_PREVFORPAGID");

                entity.Property(e => e.CppPrevpag).HasColumnName("CPP_PREVPAG");

                entity.Property(e => e.CppSit).HasColumnName("CPP_SIT");

                entity.Property(e => e.CppSitold).HasColumnName("CPP_SITOLD");

                entity.Property(e => e.CppValdesc).HasColumnName("CPP_VALDESC");

                entity.Property(e => e.CppValjur).HasColumnName("CPP_VALJUR");

                entity.Property(e => e.CppValmulta).HasColumnName("CPP_VALMULTA");

                entity.Property(e => e.CppValout).HasColumnName("CPP_VALOUT");

                entity.Property(e => e.CppValpagar).HasColumnName("CPP_VALPAGAR");

                entity.Property(e => e.CppValpago).HasColumnName("CPP_VALPAGO");

                entity.Property(e => e.CppValpar).HasColumnName("CPP_VALPAR");

                entity.Property(e => e.CptId).HasColumnName("CPT_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasPagarTitulos>(entity =>
            {
                entity.HasKey(e => new { e.CptId, e.AssId });

                entity.ToTable("GS_CONTAS_PAGAR_TITULOS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.CptDatquit)
                    .HasName("Idx_CPT_DATQUIT");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.GrptitId)
                    .HasName("Idx_GRPTIT_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.PlnctsctsId)
                    .HasName("Idx_PLNCTSCTS_ID");

                entity.HasIndex(e => e.PlnctsgrpId)
                    .HasName("Idx_PLNCTSGRP_ID");

                entity.HasIndex(e => e.PlnctssubctsId)
                    .HasName("Idx_PLNCTSSUBCTS_ID");

                entity.HasIndex(e => e.PlnctssubgrpId)
                    .HasName("Idx_PLNCTSSUBGRP_ID");

                entity.HasIndex(e => e.SubgrpId)
                    .HasName("Idx_SUBGRP_ID");

                entity.Property(e => e.CptId).HasColumnName("CPT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CptCor).HasColumnName("CPT_COR");

                entity.Property(e => e.CptDatquit)
                    .HasColumnName("CPT_DATQUIT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CptDatvenc)
                    .HasColumnName("CPT_DATVENC")
                    .HasColumnType("datetime");

                entity.Property(e => e.CptDes)
                    .HasColumnName("CPT_DES")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.CptDesc).HasColumnName("CPT_DESC");

                entity.Property(e => e.CptJur).HasColumnName("CPT_JUR");

                entity.Property(e => e.CptMulta).HasColumnName("CPT_MULTA");

                entity.Property(e => e.CptNumdoc)
                    .HasColumnName("CPT_NUMDOC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CptNumpar).HasColumnName("CPT_NUMPAR");

                entity.Property(e => e.CptObs)
                    .HasColumnName("CPT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CptOrigem).HasColumnName("CPT_ORIGEM");

                entity.Property(e => e.CptOutval).HasColumnName("CPT_OUTVAL");

                entity.Property(e => e.CptSit).HasColumnName("CPT_SIT");

                entity.Property(e => e.CptTipo).HasColumnName("CPT_TIPO");

                entity.Property(e => e.CptValpagar).HasColumnName("CPT_VALPAGAR");

                entity.Property(e => e.CptValpago).HasColumnName("CPT_VALPAGO");

                entity.Property(e => e.CptValtot).HasColumnName("CPT_VALTOT");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.GrptitId).HasColumnName("GRPTIT_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SubgrpId).HasColumnName("SUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasReceberBaixas>(entity =>
            {
                entity.HasKey(e => new { e.CrbId, e.AssId });

                entity.ToTable("GS_CONTAS_RECEBER_BAIXAS");

                entity.HasIndex(e => e.BanId)
                    .HasName("Idx_BAN_ID");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.HasIndex(e => e.CrbDatbaixa)
                    .HasName("Idx_CRB_DATBAIXA");

                entity.HasIndex(e => e.CrpId)
                    .HasName("Idx_CRP_ID");

                entity.HasIndex(e => e.CrpUsuarioIdAlt)
                    .HasName("Idx_CRP_USUARIO_ID_ALT");

                entity.Property(e => e.CrbId).HasColumnName("CRB_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AgepagId).HasColumnName("AGEPAG_ID");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.BorrecId).HasColumnName("BORREC_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.CppUsuarioIdAlt).HasColumnName("CPP_USUARIO_ID_ALT");

                entity.Property(e => e.CrbAgeban)
                    .HasColumnName("CRB_AGEBAN")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CrbCartnum)
                    .HasColumnName("CRB_CARTNUM")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CrbChqNmTerceiro)
                    .HasColumnName("CRB_CHQ_NM_TERCEIRO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CrbChqOpcProprioTerceiro)
                    .HasColumnName("CRB_CHQ_OPC_PROPRIO_TERCEIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CrbChqOpcUniVarios)
                    .HasColumnName("CRB_CHQ_OPC_UNI_VARIOS")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CrbChqban)
                    .HasColumnName("CRB_CHQBAN")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CrbChqdatpag)
                    .HasColumnName("CRB_CHQDATPAG")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrbConban)
                    .HasColumnName("CRB_CONBAN")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CrbCpfcnpj)
                    .HasColumnName("CRB_CPFCNPJ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CrbDatbaixa)
                    .HasColumnName("CRB_DATBAIXA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrbDuplicataCod).HasColumnName("CRB_DUPLICATA_COD");

                entity.Property(e => e.CrbDuplicataDatEmissao)
                    .HasColumnName("CRB_DUPLICATA_DAT_EMISSAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrbDuplicataDatVencimento)
                    .HasColumnName("CRB_DUPLICATA_DAT_VENCIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrbDuplicataSacado)
                    .HasColumnName("CRB_DUPLICATA_SACADO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.CrbDuplicataSeq).HasColumnName("CRB_DUPLICATA_SEQ");

                entity.Property(e => e.CrbEstorno).HasColumnName("CRB_ESTORNO");

                entity.Property(e => e.CrbObs)
                    .HasColumnName("CRB_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CrbSit).HasColumnName("CRB_SIT");

                entity.Property(e => e.CrbTipmovban).HasColumnName("CRB_TIPMOVBAN");

                entity.Property(e => e.CrbValbaixa).HasColumnName("CRB_VALBAIXA");

                entity.Property(e => e.CrbValdes).HasColumnName("CRB_VALDES");

                entity.Property(e => e.CrbValjur).HasColumnName("CRB_VALJUR");

                entity.Property(e => e.CrbValmul).HasColumnName("CRB_VALMUL");

                entity.Property(e => e.CrbValoutdes).HasColumnName("CRB_VALOUTDES");

                entity.Property(e => e.CrbValpag).HasColumnName("CRB_VALPAG");

                entity.Property(e => e.CrpDataAlt)
                    .HasColumnName("CRP_DATA_ALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDatvct)
                    .HasColumnName("CRP_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.CrpUsuarioIdAlt).HasColumnName("CRP_USUARIO_ID_ALT");

                entity.Property(e => e.CrpValpagar).HasColumnName("CRP_VALPAGAR");

                entity.Property(e => e.ForpagId).HasColumnName("FORPAG_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.OpcCalcTaxa)
                    .HasColumnName("OPC_CALC_TAXA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OpcCreDeb)
                    .HasColumnName("OPC_CRE_DEB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.OpecadId).HasColumnName("OPECAD_ID");

                entity.Property(e => e.QtdParcCre).HasColumnName("QTD_PARC_CRE");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasReceberBaixasCheques>(entity =>
            {
                entity.ToTable("GS_CONTAS_RECEBER_BAIXAS_CHEQUES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BancoId).HasColumnName("BANCO_ID");

                entity.Property(e => e.ContaBancariaId).HasColumnName("CONTA_BANCARIA_ID");

                entity.Property(e => e.ContaReceberBaixaId).HasColumnName("CONTA_RECEBER_BAIXA_ID");

                entity.Property(e => e.CrbcAgenciaBancaria)
                    .HasColumnName("CRBC_AGENCIA_BANCARIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CrbcContaBancaria)
                    .HasColumnName("CRBC_CONTA_BANCARIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CrbcDatcheque)
                    .HasColumnName("CRBC_DATCHEQUE")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrbcDatpagto)
                    .HasColumnName("CRBC_DATPAGTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrbcRateio).HasColumnName("CRBC_RATEIO");

                entity.Property(e => e.CrbcValcheque).HasColumnName("CRBC_VALCHEQUE");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GsContasReceberBaixasCheques)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONTAS_RECEBER_BAIXAS_CHEQUES_ASS_ID");

                entity.HasOne(d => d.Banco)
                    .WithMany(p => p.GsContasReceberBaixasCheques)
                    .HasForeignKey(d => d.BancoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONTAS_RECEBER_BAIXAS_CHEQUES_BANCO_ID");

                entity.HasOne(d => d.GsContasBancarias)
                    .WithMany(p => p.GsContasReceberBaixasCheques)
                    .HasForeignKey(d => new { d.ContaBancariaId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONTAS_RECEBER_BAIXAS_CHEQUES_CONTA_BANCARIA_ID");

                entity.HasOne(d => d.GsContasReceberBaixas)
                    .WithMany(p => p.GsContasReceberBaixasCheques)
                    .HasForeignKey(d => new { d.ContaReceberBaixaId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CONTAS_RECEBER_BAIXAS_CHEQUES_CONTA_RECEBER_BAIXA_ID");
            });

            modelBuilder.Entity<GsContasReceberCcusto>(entity =>
            {
                entity.HasKey(e => new { e.CrccId, e.AssId });

                entity.ToTable("GS_CONTAS_RECEBER_CCUSTO");

                entity.HasIndex(e => e.CencusgrpId)
                    .HasName("Idx_CENCUSGRP_ID");

                entity.HasIndex(e => e.CrpId)
                    .HasName("Idx_CRP_ID");

                entity.Property(e => e.CrccId).HasColumnName("CRCC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.CrccPercentual).HasColumnName("CRCC_PERCENTUAL");

                entity.Property(e => e.CrccValor)
                    .HasColumnName("CRCC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasReceberCobban>(entity =>
            {
                entity.HasKey(e => new { e.CobbanId, e.AssId })
                    .HasName("PK_GS_CONTAS_RECEBER_COBRANCA");

                entity.ToTable("GS_CONTAS_RECEBER_COBBAN");

                entity.HasIndex(e => e.CrpId)
                    .HasName("Idx_CRP_ID");

                entity.Property(e => e.CobbanId).HasColumnName("COBBAN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CobbanCart)
                    .HasColumnName("COBBAN_CART")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CobbanInst).HasColumnName("COBBAN_INST");

                entity.Property(e => e.CobbanSit).HasColumnName("COBBAN_SIT");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasReceberParcelas>(entity =>
            {
                entity.HasKey(e => new { e.CrpId, e.AssId });

                entity.ToTable("GS_CONTAS_RECEBER_PARCELAS");

                entity.HasIndex(e => e.ClatitId)
                    .HasName("Idx_CLATIT_ID");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.HasIndex(e => e.CrpDatemi)
                    .HasName("Idx_CRP_DATEMI");

                entity.HasIndex(e => e.CrpDatvct)
                    .HasName("Idx_CRP_DATVCT");

                entity.HasIndex(e => e.CrpNumduplicata)
                    .HasName("Idx_CRP_NUMDUPLICATA");

                entity.HasIndex(e => e.CrpNumnot)
                    .HasName("Idx_CRP_NUMNOT");

                entity.HasIndex(e => e.CrpPrevdatpago)
                    .HasName("Idx_CRP_PREVDATPAGO");

                entity.HasIndex(e => e.CrpSit)
                    .HasName("Idx_CRP_SIT");

                entity.HasIndex(e => e.CrpSitrem)
                    .HasName("Idx_CRP_SITREM");

                entity.HasIndex(e => e.CrtId)
                    .HasName("Idx_CRT_ID");

                entity.HasIndex(e => e.OrcparId)
                    .HasName("Idx_ORCPAR_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ClatitId).HasColumnName("CLATIT_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.CrpAnot)
                    .HasColumnName("CRP_ANOT")
                    .HasColumnType("text");

                entity.Property(e => e.CrpCarteira)
                    .HasColumnName("CRP_CARTEIRA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CrpDataNotafiscal)
                    .HasColumnName("CRP_DATA_NOTAFISCAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDatcan)
                    .HasColumnName("CRP_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDatduplicata)
                    .HasColumnName("CRP_DATDUPLICATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDatemi)
                    .HasColumnName("CRP_DATEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDatlim)
                    .HasColumnName("CRP_DATLIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDatpag)
                    .HasColumnName("CRP_DATPAG")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDatrem)
                    .HasColumnName("CRP_DATREM")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDatvct)
                    .HasColumnName("CRP_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpDupl01)
                    .HasColumnName("CRP_DUPL01")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CrpDupl02)
                    .HasColumnName("CRP_DUPL02")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CrpDupl03)
                    .HasColumnName("CRP_DUPL03")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CrpEsp).HasColumnName("CRP_ESP");

                entity.Property(e => e.CrpFaseNeg).HasColumnName("CRP_FASE_NEG");

                entity.Property(e => e.CrpForpag).HasColumnName("CRP_FORPAG");

                entity.Property(e => e.CrpIdgrupo).HasColumnName("CRP_IDGRUPO");

                entity.Property(e => e.CrpInstpag)
                    .HasColumnName("CRP_INSTPAG")
                    .HasColumnType("text");

                entity.Property(e => e.CrpNossonum)
                    .HasColumnName("CRP_NOSSONUM")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CrpNum).HasColumnName("CRP_NUM");

                entity.Property(e => e.CrpNumavideb).HasColumnName("CRP_NUMAVIDEB");

                entity.Property(e => e.CrpNumduplicata).HasColumnName("CRP_NUMDUPLICATA");

                entity.Property(e => e.CrpNumnot).HasColumnName("CRP_NUMNOT");

                entity.Property(e => e.CrpNumrem).HasColumnName("CRP_NUMREM");

                entity.Property(e => e.CrpObs)
                    .HasColumnName("CRP_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CrpObsavideb)
                    .HasColumnName("CRP_OBSAVIDEB")
                    .HasColumnType("text");

                entity.Property(e => e.CrpPrevdatpago)
                    .HasColumnName("CRP_PREVDATPAGO")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpPrevforpagid).HasColumnName("CRP_PREVFORPAGID");

                entity.Property(e => e.CrpPrevpag).HasColumnName("CRP_PREVPAG");

                entity.Property(e => e.CrpPrintbo).HasColumnName("CRP_PRINTBO");

                entity.Property(e => e.CrpRecebercheque).HasColumnName("CRP_RECEBERCHEQUE");

                entity.Property(e => e.CrpSit).HasColumnName("CRP_SIT");

                entity.Property(e => e.CrpSitrem).HasColumnName("CRP_SITREM");

                entity.Property(e => e.CrpUsuarioIdAlt)
                    .HasColumnName("CRP_USUARIO_ID_ALT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CrpValdes).HasColumnName("CRP_VALDES");

                entity.Property(e => e.CrpValjur).HasColumnName("CRP_VALJUR");

                entity.Property(e => e.CrpValmul).HasColumnName("CRP_VALMUL");

                entity.Property(e => e.CrpValoutdes).HasColumnName("CRP_VALOUTDES");

                entity.Property(e => e.CrpValpagar).HasColumnName("CRP_VALPAGAR");

                entity.Property(e => e.CrpValpago).HasColumnName("CRP_VALPAGO");

                entity.Property(e => e.CrpValpar).HasColumnName("CRP_VALPAR");

                entity.Property(e => e.CrtId).HasColumnName("CRT_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.OrcparId).HasColumnName("ORCPAR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContasReceberTitulos>(entity =>
            {
                entity.HasKey(e => new { e.CrtId, e.AssId });

                entity.ToTable("GS_CONTAS_RECEBER_TITULOS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.CrtDatquit)
                    .HasName("Idx_CRT_DATQUIT");

                entity.HasIndex(e => e.CrtNumdoc)
                    .HasName("Idx_CRT_NUMDOC");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.GrptitId)
                    .HasName("Idx_GRPTIT_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.PlnctsctsId)
                    .HasName("Idx_PLNCTSCTS_ID");

                entity.HasIndex(e => e.PlnctsgrpId)
                    .HasName("Idx_PLNCTSGRP_ID");

                entity.HasIndex(e => e.PlnctssubctsId)
                    .HasName("Idx_PLNCTSSUBCTS_ID");

                entity.HasIndex(e => e.PlnctssubgrpId)
                    .HasName("Idx_PLNCTSSUBGRP_ID");

                entity.HasIndex(e => e.SubgrpId)
                    .HasName("Idx_SUBGRP_ID");

                entity.Property(e => e.CrtId).HasColumnName("CRT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CrtDatquit)
                    .HasColumnName("CRT_DATQUIT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrtDes)
                    .HasColumnName("CRT_DES")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.CrtNumdoc)
                    .HasColumnName("CRT_NUMDOC")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CrtNumpar).HasColumnName("CRT_NUMPAR");

                entity.Property(e => e.CrtObs)
                    .HasColumnName("CRT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.CrtSit).HasColumnName("CRT_SIT");

                entity.Property(e => e.CrtTipdoc).HasColumnName("CRT_TIPDOC");

                entity.Property(e => e.CrtTipo).HasColumnName("CRT_TIPO");

                entity.Property(e => e.CrtValdes).HasColumnName("CRT_VALDES");

                entity.Property(e => e.CrtValjur).HasColumnName("CRT_VALJUR");

                entity.Property(e => e.CrtValmul).HasColumnName("CRT_VALMUL");

                entity.Property(e => e.CrtValpagar).HasColumnName("CRT_VALPAGAR");

                entity.Property(e => e.CrtValpago).HasColumnName("CRT_VALPAGO");

                entity.Property(e => e.CrtValtot).HasColumnName("CRT_VALTOT");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.GrptitId).HasColumnName("GRPTIT_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.PedvenId).HasColumnName("PEDVEN_ID");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SubgrpId).HasColumnName("SUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContratos>(entity =>
            {
                entity.HasKey(e => new { e.CttId, e.AssId });

                entity.ToTable("GS_CONTRATOS");

                entity.HasIndex(e => e.CttDatcan)
                    .HasName("Idx_CTT_DATCAN");

                entity.HasIndex(e => e.CttDatemi)
                    .HasName("Idx_CTT_DATEMI");

                entity.HasIndex(e => e.CttNum)
                    .HasName("Idx_CTT_NUM");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.Property(e => e.CttId).HasColumnName("CTT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdocId).HasColumnName("ASSDOC_ID");

                entity.Property(e => e.AssdocLayout).HasColumnName("ASSDOC_LAYOUT");

                entity.Property(e => e.CttDatcan)
                    .HasColumnName("CTT_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.CttDatemi)
                    .HasColumnName("CTT_DATEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.CttDoc)
                    .HasColumnName("CTT_DOC")
                    .HasColumnType("text");

                entity.Property(e => e.CttDoctest1)
                    .HasColumnName("CTT_DOCTEST1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CttDoctest2)
                    .HasColumnName("CTT_DOCTEST2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CttMontest2)
                    .HasColumnName("CTT_MONTEST2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CttMotcan)
                    .HasColumnName("CTT_MOTCAN")
                    .HasColumnType("text");

                entity.Property(e => e.CttNomtest1)
                    .HasColumnName("CTT_NOMTEST1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CttNum).HasColumnName("CTT_NUM");

                entity.Property(e => e.CttSit).HasColumnName("CTT_SIT");

                entity.Property(e => e.CttValor)
                    .HasColumnName("CTT_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContratosEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.CtteptId, e.CttId, e.AssId });

                entity.ToTable("GS_CONTRATOS_EQUIPAMENTOS");

                entity.Property(e => e.CtteptId).HasColumnName("CTTEPT_ID");

                entity.Property(e => e.CttId).HasColumnName("CTT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CtteptQtd).HasColumnName("CTTEPT_QTD");

                entity.Property(e => e.CtteptValtot)
                    .HasColumnName("CTTEPT_VALTOT")
                    .HasColumnType("money");

                entity.Property(e => e.CtteptValunt)
                    .HasColumnName("CTTEPT_VALUNT")
                    .HasColumnType("money");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContratosRag>(entity =>
            {
                entity.HasKey(e => new { e.CttId, e.AssId });

                entity.ToTable("GS_CONTRATOS_RAG");

                entity.HasIndex(e => e.CttNum)
                    .HasName("Idx_CTT_NUM");

                entity.HasIndex(e => e.TabnfeId)
                    .HasName("Idx_TABNFE_ID");

                entity.Property(e => e.CttId).HasColumnName("CTT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CttDataprv)
                    .HasColumnName("CTT_DATAPRV")
                    .HasColumnType("datetime");

                entity.Property(e => e.CttDiavct).HasColumnName("CTT_DIAVCT");

                entity.Property(e => e.CttIndiceReajuste)
                    .HasColumnName("CTT_INDICE_REAJUSTE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CttMesReajuste)
                    .HasColumnName("CTT_MES_REAJUSTE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CttNfeDataultAlt)
                    .HasColumnName("CTT_NFE_DATAULT_ALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CttNfeReajusteExtra)
                    .HasColumnName("CTT_NFE_REAJUSTE_EXTRA")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CttNfeReajusteMensal)
                    .HasColumnName("CTT_NFE_REAJUSTE_MENSAL")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CttNfseDataultAlt)
                    .HasColumnName("CTT_NFSE_DATAULT_ALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CttNfseReajusteMensal).HasColumnName("CTT_NFSE_REAJUSTE_MENSAL");

                entity.Property(e => e.CttNum).HasColumnName("CTT_NUM");

                entity.Property(e => e.CttNumlic).HasColumnName("CTT_NUMLIC");

                entity.Property(e => e.CttNumlicapp).HasColumnName("CTT_NUMLICAPP");

                entity.Property(e => e.CttSit).HasColumnName("CTT_SIT");

                entity.Property(e => e.CttTipo).HasColumnName("CTT_TIPO");

                entity.Property(e => e.CttValdatacenter)
                    .HasColumnName("CTT_VALDATACENTER")
                    .HasColumnType("money");

                entity.Property(e => e.CttValmens)
                    .HasColumnName("CTT_VALMENS")
                    .HasColumnType("money");

                entity.Property(e => e.CttVisitasContratadas)
                    .HasColumnName("CTT_VISITAS_CONTRATADAS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DataContrato)
                    .HasColumnName("DATA_CONTRATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EspacoContratado).HasColumnName("ESPACO_CONTRATADO");

                entity.Property(e => e.EspacoDescontado).HasColumnName("ESPACO_DESCONTADO");

                entity.Property(e => e.EspacoLogDescontado).HasColumnName("ESPACO_LOG_DESCONTADO");

                entity.Property(e => e.RagorcId).HasColumnName("RAGORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabnfeId).HasColumnName("TABNFE_ID");
            });

            modelBuilder.Entity<GsContratosRagTipoVisitas>(entity =>
            {
                entity.HasKey(e => e.CtttvId)
                    .HasName("PK__GS_CONTR__6AA3B4150371755F");

                entity.ToTable("GS_CONTRATOS_RAG_TIPO_VISITAS");

                entity.Property(e => e.CtttvId).HasColumnName("CTTTV_ID");

                entity.Property(e => e.CtttvDescr)
                    .IsRequired()
                    .HasColumnName("CTTTV_DESCR")
                    .HasMaxLength(60);

                entity.Property(e => e.CtttvTipoId).HasColumnName("CTTTV_TIPO_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsContratosRagVisitas>(entity =>
            {
                entity.HasKey(e => e.CttvId)
                    .HasName("PK__GS_CONTR__13887A0D7CC477D0");

                entity.ToTable("GS_CONTRATOS_RAG_VISITAS");

                entity.Property(e => e.CttvId).HasColumnName("CTTV_ID");

                entity.Property(e => e.CttvAssId).HasColumnName("CTTV_ASS_ID");

                entity.Property(e => e.CttvConsultorId).HasColumnName("CTTV_CONSULTOR_ID");

                entity.Property(e => e.CttvCttId).HasColumnName("CTTV_CTT_ID");

                entity.Property(e => e.CttvDataVisita)
                    .HasColumnName("CTTV_DATA_VISITA")
                    .HasColumnType("date");

                entity.Property(e => e.CttvHoraFim).HasColumnName("CTTV_HORA_FIM");

                entity.Property(e => e.CttvHoraIni).HasColumnName("CTTV_HORA_INI");

                entity.Property(e => e.CttvLoginUsuarioNome)
                    .HasColumnName("CTTV_LOGIN_USUARIO_NOME")
                    .HasMaxLength(100);

                entity.Property(e => e.CttvTipoVisita).HasColumnName("CTTV_TIPO_VISITA");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.Cttv)
                    .WithMany(p => p.GsContratosRagVisitas)
                    .HasForeignKey(d => new { d.CttvCttId, d.CttvAssId })
                    .HasConstraintName("FK_CTT_ID");
            });

            modelBuilder.Entity<GsControleCheque>(entity =>
            {
                entity.HasKey(e => new { e.ConchqId, e.AssId });

                entity.ToTable("GS_CONTROLE_CHEQUE");

                entity.Property(e => e.ConchqId).HasColumnName("CONCHQ_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.ConchqConbandat)
                    .HasColumnName("CONCHQ_CONBANDAT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConchqConbansit).HasColumnName("CONCHQ_CONBANSIT");

                entity.Property(e => e.ConchqDataemi)
                    .HasColumnName("CONCHQ_DATAEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConchqDatcomp)
                    .HasColumnName("CONCHQ_DATCOMP")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConchqDatpag)
                    .HasColumnName("CONCHQ_DATPAG")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConchqHist)
                    .HasColumnName("CONCHQ_HIST")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ConchqInfo)
                    .HasColumnName("CONCHQ_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.ConchqNum).HasColumnName("CONCHQ_NUM");

                entity.Property(e => e.ConchqSit).HasColumnName("CONCHQ_SIT");

                entity.Property(e => e.ConchqValor).HasColumnName("CONCHQ_VALOR");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsControleContratos>(entity =>
            {
                entity.HasKey(e => new { e.GerconId, e.AssId });

                entity.ToTable("GS_CONTROLE_CONTRATOS");

                entity.HasIndex(e => e.AssdocId)
                    .HasName("Idx_ASSDOC_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.GetconDatemi)
                    .HasName("Idx_GETCON_DATEMI");

                entity.HasIndex(e => e.GetconDatvct)
                    .HasName("Idx_GETCON_DATVCT");

                entity.HasIndex(e => e.GetconNum)
                    .HasName("Idx_GETCON_NUM");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.GerconId).HasColumnName("GERCON_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdocId).HasColumnName("ASSDOC_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.GetconCtl).HasColumnName("GETCON_CTL");

                entity.Property(e => e.GetconDatalt)
                    .HasColumnName("GETCON_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.GetconDataprov)
                    .HasColumnName("GETCON_DATAPROV")
                    .HasColumnType("datetime");

                entity.Property(e => e.GetconDatemi)
                    .HasColumnName("GETCON_DATEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.GetconDatvct)
                    .HasColumnName("GETCON_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.GetconDes)
                    .HasColumnName("GETCON_DES")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.GetconDoctestemunha1)
                    .HasColumnName("GETCON_DOCTESTEMUNHA1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GetconDoctestemunha2)
                    .HasColumnName("GETCON_DOCTESTEMUNHA2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GetconDoctestemunha3)
                    .HasColumnName("GETCON_DOCTESTEMUNHA3")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GetconDoctestemunha4)
                    .HasColumnName("GETCON_DOCTESTEMUNHA4")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.GetconFile)
                    .HasColumnName("GETCON_FILE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GetconFiletype).HasColumnName("GETCON_FILETYPE");

                entity.Property(e => e.GetconNum).HasColumnName("GETCON_NUM");

                entity.Property(e => e.GetconObs)
                    .HasColumnName("GETCON_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.GetconSit).HasColumnName("GETCON_SIT");

                entity.Property(e => e.GetconTestemunha1)
                    .HasColumnName("GETCON_TESTEMUNHA1")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.GetconTestemunha2)
                    .HasColumnName("GETCON_TESTEMUNHA2")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.GetconTestemunha3)
                    .HasColumnName("GETCON_TESTEMUNHA3")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.GetconTestemunha4)
                    .HasColumnName("GETCON_TESTEMUNHA4")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.GetconType).HasColumnName("GETCON_TYPE");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsControleDocumentos>(entity =>
            {
                entity.HasKey(e => new { e.CtldocId, e.AssId });

                entity.ToTable("GS_CONTROLE_DOCUMENTOS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.CtldocData)
                    .HasName("Idx_CTLDOC_DATA");

                entity.HasIndex(e => e.CtldocNum)
                    .HasName("Idx_CTLDOC_NUM");

                entity.HasIndex(e => e.CtldocTipo)
                    .HasName("Idx_CTLDOC_TIPO");

                entity.Property(e => e.CtldocId).HasColumnName("CTLDOC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdocId).HasColumnName("ASSDOC_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CtldocAsp)
                    .HasColumnName("CTLDOC_ASP")
                    .HasColumnType("text");

                entity.Property(e => e.CtldocCtl).HasColumnName("CTLDOC_CTL");

                entity.Property(e => e.CtldocDatFin)
                    .HasColumnName("CTLDOC_DAT_FIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.CtldocDatIni)
                    .HasColumnName("CTLDOC_DAT_INI")
                    .HasColumnType("datetime");

                entity.Property(e => e.CtldocData)
                    .HasColumnName("CTLDOC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CtldocDatalt)
                    .HasColumnName("CTLDOC_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.CtldocDatapr)
                    .HasColumnName("CTLDOC_DATAPR")
                    .HasColumnType("datetime");

                entity.Property(e => e.CtldocDes)
                    .HasColumnName("CTLDOC_DES")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocEmail)
                    .HasColumnName("CTLDOC_EMAIL")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocHtml)
                    .HasColumnName("CTLDOC_HTML")
                    .HasColumnType("text");

                entity.Property(e => e.CtldocNum).HasColumnName("CTLDOC_NUM");

                entity.Property(e => e.CtldocRespCpf)
                    .HasColumnName("CTLDOC_RESP_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocRespNome)
                    .HasColumnName("CTLDOC_RESP_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocRespRg)
                    .HasColumnName("CTLDOC_RESP_RG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocSit).HasColumnName("CTLDOC_SIT");

                entity.Property(e => e.CtldocTest1Cpf)
                    .HasColumnName("CTLDOC_TEST1_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest1Nome)
                    .HasColumnName("CTLDOC_TEST1_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest1Rg)
                    .HasColumnName("CTLDOC_TEST1_RG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest2Cpf)
                    .HasColumnName("CTLDOC_TEST2_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest2Nome)
                    .HasColumnName("CTLDOC_TEST2_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest2Rg)
                    .HasColumnName("CTLDOC_TEST2_RG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest3Cpf)
                    .HasColumnName("CTLDOC_TEST3_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest3Nome)
                    .HasColumnName("CTLDOC_TEST3_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest3Rg)
                    .HasColumnName("CTLDOC_TEST3_RG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest4Cpf)
                    .HasColumnName("CTLDOC_TEST4_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest4Nome)
                    .HasColumnName("CTLDOC_TEST4_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTest4Rg)
                    .HasColumnName("CTLDOC_TEST4_RG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CtldocTipo).HasColumnName("CTLDOC_TIPO");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsControleTalaoCheques>(entity =>
            {
                entity.HasKey(e => new { e.ContalchqId, e.AssId });

                entity.ToTable("GS_CONTROLE_TALAO_CHEQUES");

                entity.Property(e => e.ContalchqId).HasColumnName("CONTALCHQ_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.ContalchqData)
                    .HasColumnName("CONTALCHQ_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ContalchqNumfim).HasColumnName("CONTALCHQ_NUMFIM");

                entity.Property(e => e.ContalchqNumini).HasColumnName("CONTALCHQ_NUMINI");

                entity.Property(e => e.ContalchqSit).HasColumnName("CONTALCHQ_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsControleVersao>(entity =>
            {
                entity.HasKey(e => new { e.ConverId, e.AssId });

                entity.ToTable("GS_CONTROLE_VERSAO");

                entity.HasIndex(e => e.ConverData)
                    .HasName("Idx_CONVER_DATA");

                entity.HasIndex(e => e.ConverMod)
                    .HasName("Idx_CONVER_MOD");

                entity.HasIndex(e => e.ConverPrioridade)
                    .HasName("Idx_CONVER_PRIORIDADE");

                entity.HasIndex(e => e.ConverVersao)
                    .HasName("Idx_CONVER_VERSAO");

                entity.HasIndex(e => e.PrgId)
                    .HasName("Idx_PRG_ID");

                entity.Property(e => e.ConverId).HasColumnName("CONVER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConverData)
                    .HasColumnName("CONVER_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatfim)
                    .HasColumnName("CONVER_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatini)
                    .HasColumnName("CONVER_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverGravasolicitacao).HasColumnName("CONVER_GRAVASOLICITACAO");

                entity.Property(e => e.ConverHorfim).HasColumnName("CONVER_HORFIM");

                entity.Property(e => e.ConverHorini).HasColumnName("CONVER_HORINI");

                entity.Property(e => e.ConverInfo)
                    .HasColumnName("CONVER_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.ConverMod).HasColumnName("CONVER_MOD");

                entity.Property(e => e.ConverPercqbr).HasColumnName("CONVER_PERCQBR");

                entity.Property(e => e.ConverPrioridade).HasColumnName("CONVER_PRIORIDADE");

                entity.Property(e => e.ConverTitulo)
                    .HasColumnName("CONVER_TITULO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVerpub)
                    .HasColumnName("CONVER_VERPUB")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersao)
                    .HasColumnName("CONVER_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersit).HasColumnName("CONVER_VERSIT");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsControleVersaoGiGeral>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_CONTROLE_VERSAO_GI_GERAL");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConverData)
                    .HasColumnName("CONVER_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatfim)
                    .HasColumnName("CONVER_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatini)
                    .HasColumnName("CONVER_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverGravasolicitacao).HasColumnName("CONVER_GRAVASOLICITACAO");

                entity.Property(e => e.ConverHorfim).HasColumnName("CONVER_HORFIM");

                entity.Property(e => e.ConverHorini).HasColumnName("CONVER_HORINI");

                entity.Property(e => e.ConverId)
                    .HasColumnName("CONVER_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ConverInfo)
                    .HasColumnName("CONVER_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.ConverMod).HasColumnName("CONVER_MOD");

                entity.Property(e => e.ConverPercqbr).HasColumnName("CONVER_PERCQBR");

                entity.Property(e => e.ConverPrioridade).HasColumnName("CONVER_PRIORIDADE");

                entity.Property(e => e.ConverTitulo)
                    .HasColumnName("CONVER_TITULO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVerpub)
                    .HasColumnName("CONVER_VERPUB")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersao)
                    .HasColumnName("CONVER_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersit).HasColumnName("CONVER_VERSIT");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsControleVersaoGiRefratario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_CONTROLE_VERSAO_GI_REFRATARIO");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConverData)
                    .HasColumnName("CONVER_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatfim)
                    .HasColumnName("CONVER_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverDatini)
                    .HasColumnName("CONVER_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ConverGravasolicitacao).HasColumnName("CONVER_GRAVASOLICITACAO");

                entity.Property(e => e.ConverHorfim).HasColumnName("CONVER_HORFIM");

                entity.Property(e => e.ConverHorini).HasColumnName("CONVER_HORINI");

                entity.Property(e => e.ConverId).HasColumnName("CONVER_ID");

                entity.Property(e => e.ConverInfo)
                    .HasColumnName("CONVER_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.ConverMod).HasColumnName("CONVER_MOD");

                entity.Property(e => e.ConverPercqbr).HasColumnName("CONVER_PERCQBR");

                entity.Property(e => e.ConverPrioridade).HasColumnName("CONVER_PRIORIDADE");

                entity.Property(e => e.ConverTitulo)
                    .HasColumnName("CONVER_TITULO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVerpub)
                    .HasColumnName("CONVER_VERPUB")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersao)
                    .HasColumnName("CONVER_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverVersit).HasColumnName("CONVER_VERSIT");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsControleVersaoPublicacao>(entity =>
            {
                entity.HasKey(e => new { e.ConverpubId, e.AssId });

                entity.ToTable("GS_CONTROLE_VERSAO_PUBLICACAO");

                entity.Property(e => e.ConverpubId).HasColumnName("CONVERPUB_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConverpubFile)
                    .HasColumnName("CONVERPUB_FILE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConverpubSize).HasColumnName("CONVERPUB_SIZE");

                entity.Property(e => e.ConverpubVersao)
                    .HasColumnName("CONVERPUB_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCotasvendas>(entity =>
            {
                entity.HasKey(e => new { e.CotvenId, e.AssId })
                    .HasName("PK_GS_RAG_COTAS");

                entity.ToTable("GS_COTASVENDAS");

                entity.HasIndex(e => e.CotvenDatafim)
                    .HasName("Idx_COTVEN_DATAFIM");

                entity.HasIndex(e => e.CotvenDataini)
                    .HasName("Idx_COTVEN_DATAINI");

                entity.HasIndex(e => e.CotvenNivel)
                    .HasName("Idx_COTVEN_NIVEL");

                entity.HasIndex(e => e.CotvenTipoorc)
                    .HasName("Idx_COTVEN_TIPOORC");

                entity.Property(e => e.CotvenId).HasColumnName("COTVEN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CotvenAtivo).HasColumnName("COTVEN_ATIVO");

                entity.Property(e => e.CotvenDatafim)
                    .HasColumnName("COTVEN_DATAFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.CotvenDataini)
                    .HasColumnName("COTVEN_DATAINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.CotvenDes)
                    .HasColumnName("COTVEN_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CotvenEquipe).HasColumnName("COTVEN_EQUIPE");

                entity.Property(e => e.CotvenMeta).HasColumnName("COTVEN_META");

                entity.Property(e => e.CotvenNivel).HasColumnName("COTVEN_NIVEL");

                entity.Property(e => e.CotvenPercmet).HasColumnName("COTVEN_PERCMET");

                entity.Property(e => e.CotvenTipoorc).HasColumnName("COTVEN_TIPOORC");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsCotasvendasFuncionarios>(entity =>
            {
                entity.HasKey(e => new { e.CotvenfunId, e.AssId, e.CotvenId });

                entity.ToTable("GS_COTASVENDAS_FUNCIONARIOS");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.CotvenfunId).HasColumnName("COTVENFUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CotvenId).HasColumnName("COTVEN_ID");

                entity.Property(e => e.CotvenfunMeta).HasColumnName("COTVENFUN_META");

                entity.Property(e => e.CotvenfunPercmet).HasColumnName("COTVENFUN_PERCMET");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsDatacenterHistorico>(entity =>
            {
                entity.HasKey(e => new { e.CttNum, e.DataMedicao });

                entity.ToTable("GS_DATACENTER_HISTORICO");

                entity.Property(e => e.CttNum).HasColumnName("CTT_NUM");

                entity.Property(e => e.DataMedicao)
                    .HasColumnName("DATA_MEDICAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DataRegistro)
                    .HasColumnName("DATA_REGISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EspacoUsado).HasColumnName("ESPACO_USADO");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabhospId).HasColumnName("TABHOSP_ID");

                entity.Property(e => e.ValorDatacenter)
                    .HasColumnName("VALOR_DATACENTER")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsDatacenterHistoricoReajuste>(entity =>
            {
                entity.ToTable("GS_DATACENTER_HISTORICO_REAJUSTE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AnoReajuste).HasColumnName("ANO_REAJUSTE");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Checkado).HasColumnName("CHECKADO");

                entity.Property(e => e.ContaId).HasColumnName("CONTA_ID");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.CttNum).HasColumnName("CTT_NUM");

                entity.Property(e => e.DataContribuicao)
                    .HasColumnName("DATA_CONTRIBUICAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataMedicao)
                    .HasColumnName("DATA_MEDICAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataReajuste)
                    .HasColumnName("DATA_REAJUSTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EspacoContratado).HasColumnName("ESPACO_CONTRATADO");

                entity.Property(e => e.EspacoTabela).HasColumnName("ESPACO_TABELA");

                entity.Property(e => e.GeradoFinanceiro).HasColumnName("GERADO_FINANCEIRO");

                entity.Property(e => e.GrupoId).HasColumnName("GRUPO_ID");

                entity.Property(e => e.Indice).HasColumnName("INDICE");

                entity.Property(e => e.MesReajuste)
                    .HasColumnName("MES_REAJUSTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NumMes).HasColumnName("NUM_MES");

                entity.Property(e => e.Obs)
                    .HasColumnName("OBS")
                    .HasColumnType("text");

                entity.Property(e => e.Reajuste)
                    .HasColumnName("REAJUSTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Referencia)
                    .HasColumnName("REFERENCIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SubcontaId).HasColumnName("SUBCONTA_ID");

                entity.Property(e => e.SubgrupoId).HasColumnName("SUBGRUPO_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.TabhospId).HasColumnName("TABHOSP_ID");

                entity.Property(e => e.TotalDados).HasColumnName("TOTAL_DADOS");

                entity.Property(e => e.TotalFtp).HasColumnName("TOTAL_FTP");

                entity.Property(e => e.TotalLog).HasColumnName("TOTAL_LOG");

                entity.Property(e => e.TotalMedicao).HasColumnName("TOTAL_MEDICAO");

                entity.Property(e => e.Valor)
                    .HasColumnName("VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.ValorDatacenter)
                    .HasColumnName("VALOR_DATACENTER")
                    .HasColumnType("money");

                entity.Property(e => e.ValorDesconto)
                    .HasColumnName("VALOR_DESCONTO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorLiberado)
                    .HasColumnName("VALOR_LIBERADO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorManutencao)
                    .HasColumnName("VALOR_MANUTENCAO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorTabela)
                    .HasColumnName("VALOR_TABELA")
                    .HasColumnType("money");

                entity.Property(e => e.ValorTotal)
                    .HasColumnName("VALOR_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.Valorliberado1)
                    .HasColumnName("VALORLIBERADO")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsDistribuidores>(entity =>
            {
                entity.HasKey(e => new { e.DisId, e.AssId });

                entity.ToTable("GS_DISTRIBUIDORES");

                entity.Property(e => e.DisId).HasColumnName("DIS_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DisNome)
                    .HasColumnName("DIS_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.EtqId, e.AssId })
                    .HasName("PK_GS_EQUIPAMENTOS_1");

                entity.ToTable("GS_EQUIPAMENTOS");

                entity.HasIndex(e => e.FabeqtId)
                    .HasName("Idx_FABEQT_ID");

                entity.HasIndex(e => e.FameqtId)
                    .HasName("Idx_FAMEQT_ID");

                entity.HasIndex(e => e.GrpeqtId)
                    .HasName("Idx_GRPEQT_ID");

                entity.HasIndex(e => e.TabncmId)
                    .HasName("Idx_TABNCM_ID");

                entity.HasIndex(e => e.UnidId)
                    .HasName("Idx_UNID_ID");

                entity.Property(e => e.EtqId).HasColumnName("ETQ_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.EtqB2b).HasColumnName("ETQ_B2B");

                entity.Property(e => e.EtqCodbar)
                    .HasColumnName("ETQ_CODBAR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EtqDes)
                    .HasColumnName("ETQ_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EtqDestec)
                    .HasColumnName("ETQ_DESTEC")
                    .HasColumnType("text");

                entity.Property(e => e.EtqImagem)
                    .HasColumnName("ETQ_IMAGEM")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EtqIvt).HasColumnName("ETQ_IVT");

                entity.Property(e => e.EtqKit).HasColumnName("ETQ_KIT");

                entity.Property(e => e.EtqKitfixo).HasColumnName("ETQ_KITFIXO");

                entity.Property(e => e.EtqModelo)
                    .HasColumnName("ETQ_MODELO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EtqPercanual).HasColumnName("ETQ_PERCANUAL");

                entity.Property(e => e.EtqPercmensal).HasColumnName("ETQ_PERCMENSAL");

                entity.Property(e => e.EtqPercsemanal).HasColumnName("ETQ_PERCSEMANAL");

                entity.Property(e => e.EtqPeso).HasColumnName("ETQ_PESO");

                entity.Property(e => e.EtqPotencia).HasColumnName("ETQ_POTENCIA");

                entity.Property(e => e.EtqPrcminanu)
                    .HasColumnName("ETQ_PRCMINANU")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcminmen)
                    .HasColumnName("ETQ_PRCMINMEN")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcminsem)
                    .HasColumnName("ETQ_PRCMINSEM")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcpadanu)
                    .HasColumnName("ETQ_PRCPADANU")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcpadmen)
                    .HasColumnName("ETQ_PRCPADMEN")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcpadsem)
                    .HasColumnName("ETQ_PRCPADSEM")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcsblanu)
                    .HasColumnName("ETQ_PRCSBLANU")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcsblmen)
                    .HasColumnName("ETQ_PRCSBLMEN")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcsblsem)
                    .HasColumnName("ETQ_PRCSBLSEM")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcvenanu)
                    .HasColumnName("ETQ_PRCVENANU")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcvenmen)
                    .HasColumnName("ETQ_PRCVENMEN")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrcvensem)
                    .HasColumnName("ETQ_PRCVENSEM")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrecomin)
                    .HasColumnName("ETQ_PRECOMIN")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrecopadrao)
                    .HasColumnName("ETQ_PRECOPADRAO")
                    .HasColumnType("money");

                entity.Property(e => e.EtqPrecosubloc)
                    .HasColumnName("ETQ_PRECOSUBLOC")
                    .HasColumnType("money");

                entity.Property(e => e.EtqQtdestatu).HasColumnName("ETQ_QTDESTATU");

                entity.Property(e => e.EtqQtdestdef).HasColumnName("ETQ_QTDESTDEF");

                entity.Property(e => e.EtqQtdestdisp).HasColumnName("ETQ_QTDESTDISP");

                entity.Property(e => e.EtqQtdestger).HasColumnName("ETQ_QTDESTGER");

                entity.Property(e => e.EtqQtdestmin).HasColumnName("ETQ_QTDESTMIN");

                entity.Property(e => e.EtqQtdestprd).HasColumnName("ETQ_QTDESTPRD");

                entity.Property(e => e.EtqQtdestres).HasColumnName("ETQ_QTDESTRES");

                entity.Property(e => e.EtqSit).HasColumnName("ETQ_SIT");

                entity.Property(e => e.EtqTipo).HasColumnName("ETQ_TIPO");

                entity.Property(e => e.FabeqtId).HasColumnName("FABEQT_ID");

                entity.Property(e => e.FameqtId).HasColumnName("FAMEQT_ID");

                entity.Property(e => e.GrpeqtId).HasColumnName("GRPEQT_ID");

                entity.Property(e => e.Idclf).HasColumnName("IDCLF");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabncmId).HasColumnName("TABNCM_ID");

                entity.Property(e => e.UnidId).HasColumnName("UNID_ID");
            });

            modelBuilder.Entity<GsEquipamentosAgenda>(entity =>
            {
                entity.HasKey(e => new { e.EptageId, e.AssId });

                entity.ToTable("GS_EQUIPAMENTOS_AGENDA");

                entity.HasIndex(e => e.EptageDatfim)
                    .HasName("Idx_EPTAGE_DATFIM");

                entity.HasIndex(e => e.EptageDatini)
                    .HasName("Idx_EPTAGE_DATINI");

                entity.HasIndex(e => e.EptaprId)
                    .HasName("Idx_EPTAPR_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.Property(e => e.EptageId).HasColumnName("EPTAGE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EptageDatfim)
                    .HasColumnName("EPTAGE_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.EptageDatini)
                    .HasColumnName("EPTAGE_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.EptageQtd).HasColumnName("EPTAGE_QTD");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosApresentacao>(entity =>
            {
                entity.HasKey(e => new { e.EptaprId, e.AssId })
                    .HasName("PK_GS_EQUIPAMENTOS_APRESENTACAO_1");

                entity.ToTable("GS_EQUIPAMENTOS_APRESENTACAO");

                entity.HasIndex(e => e.ClaeptId)
                    .HasName("Idx_CLAEPT_ID");

                entity.HasIndex(e => e.EptId)
                    .HasName("Idx_EPT_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ClaeptId).HasColumnName("CLAEPT_ID");

                entity.Property(e => e.EptId).HasColumnName("EPT_ID");

                entity.Property(e => e.EptaprCodbar)
                    .HasColumnName("EPTAPR_CODBAR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EptaprComnet).HasColumnName("EPTAPR_COMNET");

                entity.Property(e => e.EptaprCustodia).HasColumnName("EPTAPR_CUSTODIA");

                entity.Property(e => e.EptaprDes)
                    .HasColumnName("EPTAPR_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EptaprDiasmanut).HasColumnName("EPTAPR_DIASMANUT");

                entity.Property(e => e.EptaprEqptterc).HasColumnName("EPTAPR_EQPTTERC");

                entity.Property(e => e.EptaprFabrmarca)
                    .HasColumnName("EPTAPR_FABRMARCA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EptaprIvt).HasColumnName("EPTAPR_IVT");

                entity.Property(e => e.EptaprKit).HasColumnName("EPTAPR_KIT");

                entity.Property(e => e.EptaprKitfixo).HasColumnName("EPTAPR_KITFIXO");

                entity.Property(e => e.EptaprLocar).HasColumnName("EPTAPR_LOCAR");

                entity.Property(e => e.EptaprMarganual).HasColumnName("EPTAPR_MARGANUAL");

                entity.Property(e => e.EptaprMargmens).HasColumnName("EPTAPR_MARGMENS");

                entity.Property(e => e.EptaprMargsem).HasColumnName("EPTAPR_MARGSEM");

                entity.Property(e => e.EptaprPrecocompra)
                    .HasColumnName("EPTAPR_PRECOCOMPRA")
                    .HasColumnType("money");

                entity.Property(e => e.EptaprPrecominimo)
                    .HasColumnName("EPTAPR_PRECOMINIMO")
                    .HasColumnType("money");

                entity.Property(e => e.EptaprPrecopadrao)
                    .HasColumnName("EPTAPR_PRECOPADRAO")
                    .HasColumnType("money");

                entity.Property(e => e.EptaprPrecosubloc)
                    .HasColumnName("EPTAPR_PRECOSUBLOC")
                    .HasColumnType("money");

                entity.Property(e => e.EptaprQtdatu).HasColumnName("EPTAPR_QTDATU");

                entity.Property(e => e.EptaprQtddef).HasColumnName("EPTAPR_QTDDEF");

                entity.Property(e => e.EptaprQtdperda).HasColumnName("EPTAPR_QTDPERDA");

                entity.Property(e => e.EptaprSituacao).HasColumnName("EPTAPR_SITUACAO");

                entity.Property(e => e.Idclf).HasColumnName("IDCLF");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosClassificacao>(entity =>
            {
                entity.HasKey(e => new { e.ClaeptId, e.AssId });

                entity.ToTable("GS_EQUIPAMENTOS_CLASSIFICACAO");

                entity.Property(e => e.ClaeptId).HasColumnName("CLAEPT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ClaeptDes)
                    .HasColumnName("CLAEPT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosFabricantes>(entity =>
            {
                entity.HasKey(e => new { e.FabeqtId, e.AssId });

                entity.ToTable("GS_EQUIPAMENTOS_FABRICANTES");

                entity.Property(e => e.FabeqtId).HasColumnName("FABEQT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FabeqtDes)
                    .HasColumnName("FABEQT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Idclf).HasColumnName("IDCLF");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosFamilias>(entity =>
            {
                entity.HasKey(e => new { e.FameqtId, e.AssId });

                entity.ToTable("GS_EQUIPAMENTOS_FAMILIAS");

                entity.Property(e => e.FameqtId).HasColumnName("FAMEQT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FameqtCod).HasColumnName("FAMEQT_COD");

                entity.Property(e => e.FameqtDes)
                    .HasColumnName("FAMEQT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FameqtSigla)
                    .HasColumnName("FAMEQT_SIGLA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosGrupos>(entity =>
            {
                entity.HasKey(e => new { e.GrpeqtId, e.AssId });

                entity.ToTable("GS_EQUIPAMENTOS_GRUPOS");

                entity.Property(e => e.GrpeqtId).HasColumnName("GRPEQT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.GrpeqtDes)
                    .HasColumnName("GRPEQT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.GrpeqtPeranual).HasColumnName("GRPEQT_PERANUAL");

                entity.Property(e => e.GrpeqtPermensal).HasColumnName("GRPEQT_PERMENSAL");

                entity.Property(e => e.GrpeqtPersemanal).HasColumnName("GRPEQT_PERSEMANAL");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosKitFixo>(entity =>
            {
                entity.HasKey(e => new { e.KitfixoId, e.AssId, e.EqtserId });

                entity.ToTable("GS_EQUIPAMENTOS_KIT_FIXO");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.KitfixoEqtserid)
                    .HasName("Idx_KITFIXO_EQTSERID");

                entity.Property(e => e.KitfixoId).HasColumnName("KITFIXO_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.KitfixoAguardando).HasColumnName("KITFIXO_AGUARDANDO");

                entity.Property(e => e.KitfixoEqtserid).HasColumnName("KITFIXO_EQTSERID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosKitfixoMateriais>(entity =>
            {
                entity.HasKey(e => new { e.KitfixomatId, e.AssId, e.MatId });

                entity.ToTable("GS_EQUIPAMENTOS_KITFIXO_MATERIAIS");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.Property(e => e.KitfixomatId).HasColumnName("KITFIXOMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.KitfixomatQtd).HasColumnName("KITFIXOMAT_QTD");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosKitfixoServicos>(entity =>
            {
                entity.HasKey(e => new { e.KitfixoservId, e.AssId, e.EqtserId });

                entity.ToTable("GS_EQUIPAMENTOS_KITFIXO_SERVICOS");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.ServId)
                    .HasName("Idx_SERV_ID");

                entity.Property(e => e.KitfixoservId).HasColumnName("KITFIXOSERV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.KitfixoservQtd).HasColumnName("KITFIXOSERV_QTD");

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosRecebidosApp>(entity =>
            {
                entity.ToTable("GS_EQUIPAMENTOS_RECEBIDOS_APP");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtrecCodBarras)
                    .HasColumnName("EQTREC_COD_BARRAS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EqtrecSit).HasColumnName("EQTREC_SIT");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosSerie>(entity =>
            {
                entity.HasKey(e => new { e.EqtserId, e.EptaprId, e.AssId })
                    .HasName("PK_GS_EQUIPAMENTOS_SERIES");

                entity.ToTable("GS_EQUIPAMENTOS_SERIE");

                entity.HasIndex(e => e.AmxId)
                    .HasName("Idx_AMX_ID");

                entity.HasIndex(e => e.AmxOrigemId)
                    .HasName("Idx_AMX_ORIGEM_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.FabeqtId)
                    .HasName("Idx_FABEQT_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AmxId).HasColumnName("AMX_ID");

                entity.Property(e => e.AmxOrigemId).HasColumnName("AMX_ORIGEM_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EqtserBaixadata)
                    .HasColumnName("EQTSER_BAIXADATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EqtserBaixaobs)
                    .HasColumnName("EQTSER_BAIXAOBS")
                    .HasColumnType("text");

                entity.Property(e => e.EqtserCabecaKit).HasColumnName("EQTSER_CABECA_KIT");

                entity.Property(e => e.EqtserCodint)
                    .HasColumnName("EQTSER_CODINT")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EqtserCtl).HasColumnName("EQTSER_CTL");

                entity.Property(e => e.EqtserDatcom)
                    .HasColumnName("EQTSER_DATCOM")
                    .HasColumnType("datetime");

                entity.Property(e => e.EqtserDatultloc)
                    .HasColumnName("EQTSER_DATULTLOC")
                    .HasColumnType("datetime");

                entity.Property(e => e.EqtserDepreciacao).HasColumnName("EQTSER_DEPRECIACAO");

                entity.Property(e => e.EqtserDepredia).HasColumnName("EQTSER_DEPREDIA");

                entity.Property(e => e.EqtserDepremes).HasColumnName("EQTSER_DEPREMES");

                entity.Property(e => e.EqtserEqtterc).HasColumnName("EQTSER_EQTTERC");

                entity.Property(e => e.EqtserKitEptaprId).HasColumnName("EQTSER_KIT_EPTAPR_ID");

                entity.Property(e => e.EqtserLoc)
                    .HasColumnName("EQTSER_LOC")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EqtserLogData)
                    .HasColumnName("EQTSER_LOG_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EqtserLogUser)
                    .HasColumnName("EQTSER_LOG_USER")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EqtserModelo)
                    .HasColumnName("EQTSER_MODELO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EqtserNfCompra)
                    .HasColumnName("EQTSER_NF_COMPRA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.EqtserNum)
                    .HasColumnName("EQTSER_NUM")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.EqtserNumpat)
                    .HasColumnName("EQTSER_NUMPAT")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EqtserObs)
                    .HasColumnName("EQTSER_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EqtserSit).HasColumnName("EQTSER_SIT");

                entity.Property(e => e.EqtserUltconf)
                    .HasColumnName("EQTSER_ULTCONF")
                    .HasColumnType("datetime");

                entity.Property(e => e.EqtserUltrevdata)
                    .HasColumnName("EQTSER_ULTREVDATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EqtserValcom)
                    .HasColumnName("EQTSER_VALCOM")
                    .HasColumnType("money");

                entity.Property(e => e.EqtserVdutil).HasColumnName("EQTSER_VDUTIL");

                entity.Property(e => e.EqtserVlresidual).HasColumnName("EQTSER_VLRESIDUAL");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.FabeqtId).HasColumnName("FABEQT_ID");

                entity.Property(e => e.Idclf).HasColumnName("IDCLF");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipamentosTabPreco>(entity =>
            {
                entity.HasKey(e => new { e.EqttabpreId, e.AssId });

                entity.ToTable("GS_EQUIPAMENTOS_TAB_PRECO");

                entity.HasIndex(e => e.EtqId)
                    .HasName("Idx_ETQ_ID");

                entity.HasIndex(e => e.TabprcId)
                    .HasName("Idx_TABPRC_ID");

                entity.Property(e => e.EqttabpreId).HasColumnName("EQTTABPRE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqttabprePercent).HasColumnName("EQTTABPRE_PERCENT");

                entity.Property(e => e.EqttabprePrecominimo)
                    .HasColumnName("EQTTABPRE_PRECOMINIMO")
                    .HasColumnType("money");

                entity.Property(e => e.EqttabprePrecopadrao)
                    .HasColumnName("EQTTABPRE_PRECOPADRAO")
                    .HasColumnType("money");

                entity.Property(e => e.EqttabprePrecosubloc)
                    .HasColumnName("EQTTABPRE_PRECOSUBLOC")
                    .HasColumnType("money");

                entity.Property(e => e.EqttabprePrecovenda)
                    .HasColumnName("EQTTABPRE_PRECOVENDA")
                    .HasColumnType("money");

                entity.Property(e => e.EtqId).HasColumnName("ETQ_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabprcId).HasColumnName("TABPRC_ID");
            });

            modelBuilder.Entity<GsEquipesvendas>(entity =>
            {
                entity.HasKey(e => new { e.EqpId, e.AssId })
                    .HasName("PK_GS_EQUIPES_VENDAS");

                entity.ToTable("GS_EQUIPESVENDAS");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.FunId1)
                    .HasName("Idx_FUN_ID1");

                entity.HasIndex(e => e.FunId2)
                    .HasName("Idx_FUN_ID2");

                entity.Property(e => e.EqpId).HasColumnName("EQP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId)
                    .HasColumnName("EMP_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.EqpApresentaPorc).HasColumnName("EQP_APRESENTA_PORC");

                entity.Property(e => e.EqpCarteiraPorc).HasColumnName("EQP_CARTEIRA_PORC");

                entity.Property(e => e.EqpDes)
                    .HasColumnName("EQP_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EqpFechamentoPorc).HasColumnName("EQP_FECHAMENTO_PORC");

                entity.Property(e => e.EqpIndicacaoPorc).HasColumnName("EQP_INDICACAO_PORC");

                entity.Property(e => e.EqpPorgergeral).HasColumnName("EQP_PORGERGERAL");

                entity.Property(e => e.EqpPorgerregio).HasColumnName("EQP_PORGERREGIO");

                entity.Property(e => e.EqpPorgervenda).HasColumnName("EQP_PORGERVENDA");

                entity.Property(e => e.EqpTipo).HasColumnName("EQP_TIPO");

                entity.Property(e => e.EqpTipoorc).HasColumnName("EQP_TIPOORC");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FunId1).HasColumnName("FUN_ID1");

                entity.Property(e => e.FunId2).HasColumnName("FUN_ID2");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipesvendasComissoes>(entity =>
            {
                entity.HasKey(e => new { e.EqpId, e.AssId, e.FunId })
                    .HasName("PK_GS_EQUIPES_VENDAS_COMISSOES");

                entity.ToTable("GS_EQUIPESVENDAS_COMISSOES");

                entity.Property(e => e.EqpId).HasColumnName("EQP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.EqpApresentaPorc).HasColumnName("EQP_APRESENTA_PORC");

                entity.Property(e => e.EqpCarteiraPorc).HasColumnName("EQP_CARTEIRA_PORC");

                entity.Property(e => e.EqpFechamentoPorc).HasColumnName("EQP_FECHAMENTO_PORC");

                entity.Property(e => e.EqpIndicacaoPorc).HasColumnName("EQP_INDICACAO_PORC");

                entity.Property(e => e.EqpTipoorc).HasColumnName("EQP_TIPOORC");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEquipesvendasFuncionarios>(entity =>
            {
                entity.HasKey(e => new { e.EqpfunId, e.AssId, e.FunId });

                entity.ToTable("GS_EQUIPESVENDAS_FUNCIONARIOS");

                entity.HasIndex(e => e.EqpId)
                    .HasName("Idx_EQP_ID");

                entity.HasIndex(e => e.EqpTipo)
                    .HasName("Idx_EQP_TIPO");

                entity.Property(e => e.EqpfunId).HasColumnName("EQPFUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.EqpId).HasColumnName("EQP_ID");

                entity.Property(e => e.EqpTipo).HasColumnName("EQP_TIPO");

                entity.Property(e => e.EqpfunCarteira).HasColumnName("EQPFUN_CARTEIRA");

                entity.Property(e => e.EqpfunFechamento).HasColumnName("EQPFUN_FECHAMENTO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEstradas>(entity =>
            {
                entity.HasKey(e => new { e.EstId, e.AssId });

                entity.ToTable("GS_ESTRADAS");

                entity.Property(e => e.EstId).HasColumnName("EST_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EstNome)
                    .HasColumnName("EST_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EstTipo).HasColumnName("EST_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventos>(entity =>
            {
                entity.HasKey(e => new { e.EvtId, e.AssId })
                    .IsClustered(false);

                entity.ToTable("GS_EVENTOS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.EvtDataencerrado)
                    .HasName("Idx_EVT_DATAENCERRADO");

                entity.HasIndex(e => e.EvtDatafinalizado)
                    .HasName("Idx_EVT_DATAFINALIZADO");

                entity.HasIndex(e => e.EvtDatfim)
                    .HasName("Idx_EVT_DATFIM");

                entity.HasIndex(e => e.EvtDatini)
                    .HasName("Idx_EVT_DATINI");

                entity.HasIndex(e => e.EvtEventoLocal)
                    .HasName("Idx_EVT_EVENTO_LOCAL");

                entity.HasIndex(e => e.EvtEventoNome)
                    .HasName("Idx_EVT_EVENTO_NOME");

                entity.HasIndex(e => e.EvtNum)
                    .HasName("Idx_EVT_NUM");

                entity.HasIndex(e => e.EvtSit)
                    .HasName("Idx_EVT_SIT");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CliforconId).HasColumnName("CLIFORCON_ID");

                entity.Property(e => e.ConpagId).HasColumnName("CONPAG_ID");

                entity.Property(e => e.CtldocId1).HasColumnName("CTLDOC_ID1");

                entity.Property(e => e.CtldocId2).HasColumnName("CTLDOC_ID2");

                entity.Property(e => e.CtldocId3).HasColumnName("CTLDOC_ID3");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EvtChqclc).HasColumnName("EVT_CHQCLC");

                entity.Property(e => e.EvtChqclcage)
                    .HasColumnName("EVT_CHQCLCAGE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EvtChqclcbanid).HasColumnName("EVT_CHQCLCBANID");

                entity.Property(e => e.EvtChqclccc)
                    .HasColumnName("EVT_CHQCLCCC")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EvtChqclcemi)
                    .HasColumnName("EVT_CHQCLCEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtChqclcval)
                    .HasColumnName("EVT_CHQCLCVAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvtComissaoflag).HasColumnName("EVT_COMISSAOFLAG");

                entity.Property(e => e.EvtComissaofun).HasColumnName("EVT_COMISSAOFUN");

                entity.Property(e => e.EvtContatoDdd)
                    .HasColumnName("EVT_CONTATO_DDD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.EvtContatoFone)
                    .HasColumnName("EVT_CONTATO_FONE")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.EvtCustoadian)
                    .HasColumnName("EVT_CUSTOADIAN")
                    .HasColumnType("money");

                entity.Property(e => e.EvtCustobv)
                    .HasColumnName("EVT_CUSTOBV")
                    .HasColumnType("money");

                entity.Property(e => e.EvtCustodesp)
                    .HasColumnName("EVT_CUSTODESP")
                    .HasColumnType("money");

                entity.Property(e => e.EvtCustoeqt)
                    .HasColumnName("EVT_CUSTOEQT")
                    .HasColumnType("money");

                entity.Property(e => e.EvtCustomat)
                    .HasColumnName("EVT_CUSTOMAT")
                    .HasColumnType("money");

                entity.Property(e => e.EvtCustoserv)
                    .HasColumnName("EVT_CUSTOSERV")
                    .HasColumnType("money");

                entity.Property(e => e.EvtCustotec)
                    .HasColumnName("EVT_CUSTOTEC")
                    .HasColumnType("money");

                entity.Property(e => e.EvtData)
                    .HasColumnName("EVT_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtDataencerrado)
                    .HasColumnName("EVT_DATAENCERRADO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtDatafinalizado)
                    .HasColumnName("EVT_DATAFINALIZADO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtDatapr)
                    .HasColumnName("EVT_DATAPR")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtDatfim)
                    .HasColumnName("EVT_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtDatini)
                    .HasColumnName("EVT_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtDetequip).HasColumnName("EVT_DETEQUIP");

                entity.Property(e => e.EvtDiaevt).HasColumnName("EVT_DIAEVT");

                entity.Property(e => e.EvtDiaevtcob).HasColumnName("EVT_DIAEVTCOB");

                entity.Property(e => e.EvtEmailContato)
                    .HasColumnName("EVT_EMAIL_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEventoLocal)
                    .HasColumnName("EVT_EVENTO_LOCAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEventoNome)
                    .HasColumnName("EVT_EVENTO_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEventoTipo)
                    .HasColumnName("EVT_EVENTO_TIPO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEvtBai)
                    .HasColumnName("EVT_EVT_BAI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEvtCep)
                    .HasColumnName("EVT_EVT_CEP")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EvtEvtCidid).HasColumnName("EVT_EVT_CIDID");

                entity.Property(e => e.EvtEvtContato)
                    .HasColumnName("EVT_EVT_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEvtCpl)
                    .HasColumnName("EVT_EVT_CPL")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEvtDdd)
                    .HasColumnName("EVT_EVT_DDD")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EvtEvtEnd)
                    .HasColumnName("EVT_EVT_END")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEvtNum)
                    .HasColumnName("EVT_EVT_NUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEvtTel)
                    .HasColumnName("EVT_EVT_TEL")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.EvtFixval).HasColumnName("EVT_FIXVAL");

                entity.Property(e => e.EvtInfevt)
                    .HasColumnName("EVT_INFEVT")
                    .HasColumnType("text");

                entity.Property(e => e.EvtIteeqt).HasColumnName("EVT_ITEEQT");

                entity.Property(e => e.EvtItemat).HasColumnName("EVT_ITEMAT");

                entity.Property(e => e.EvtNcobradv).HasColumnName("EVT_NCOBRADV");

                entity.Property(e => e.EvtNum).HasColumnName("EVT_NUM");

                entity.Property(e => e.EvtObsint)
                    .HasColumnName("EVT_OBSINT")
                    .HasColumnType("text");

                entity.Property(e => e.EvtQtdeqt).HasColumnName("EVT_QTDEQT");

                entity.Property(e => e.EvtQtdmat).HasColumnName("EVT_QTDMAT");

                entity.Property(e => e.EvtResumo)
                    .HasColumnName("EVT_RESUMO")
                    .HasColumnType("text");

                entity.Property(e => e.EvtSit).HasColumnName("EVT_SIT");

                entity.Property(e => e.EvtSubtotal)
                    .HasColumnName("EVT_SUBTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvtTabpre).HasColumnName("EVT_TABPRE");

                entity.Property(e => e.EvtTabpreco).HasColumnName("EVT_TABPRECO");

                entity.Property(e => e.EvtTabprecotip).HasColumnName("EVT_TABPRECOTIP");

                entity.Property(e => e.EvtTagagr).HasColumnName("EVT_TAGAGR");

                entity.Property(e => e.EvtTipo)
                    .HasColumnName("EVT_TIPO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EvtUseId).HasColumnName("EVT_USE_ID");

                entity.Property(e => e.EvtValeqt)
                    .HasColumnName("EVT_VALEQT")
                    .HasColumnType("money");

                entity.Property(e => e.EvtValidade)
                    .HasColumnName("EVT_VALIDADE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtValmat)
                    .HasColumnName("EVT_VALMAT")
                    .HasColumnType("money");

                entity.Property(e => e.EvtValordesc)
                    .HasColumnName("EVT_VALORDESC")
                    .HasColumnType("money");

                entity.Property(e => e.EvtValordesp)
                    .HasColumnName("EVT_VALORDESP")
                    .HasColumnType("money");

                entity.Property(e => e.EvtValortotal)
                    .HasColumnName("EVT_VALORTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvtVisita).HasColumnName("EVT_VISITA");

                entity.Property(e => e.EvtVisitaData)
                    .HasColumnName("EVT_VISITA_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtVisitaHora).HasColumnName("EVT_VISITA_HORA");

                entity.Property(e => e.EvtVlcobrado)
                    .HasColumnName("EVT_VLCOBRADO")
                    .HasColumnType("money");

                entity.Property(e => e.EvtVlnaocobrado)
                    .HasColumnName("EVT_VLNAOCOBRADO")
                    .HasColumnType("money");

                entity.Property(e => e.EvtVlrttcomisao)
                    .HasColumnName("EVT_VLRTTCOMISAO")
                    .HasColumnType("money");

                entity.Property(e => e.EvtVlrttdespesa)
                    .HasColumnName("EVT_VLRTTDESPESA")
                    .HasColumnType("money");

                entity.Property(e => e.EvtVlrttdespfixa)
                    .HasColumnName("EVT_VLRTTDESPFIXA")
                    .HasColumnType("money");

                entity.Property(e => e.EvtVlrttdespvar)
                    .HasColumnName("EVT_VLRTTDESPVAR")
                    .HasColumnType("money");

                entity.Property(e => e.EvtVlrttlucrobru)
                    .HasColumnName("EVT_VLRTTLUCROBRU")
                    .HasColumnType("money");

                entity.Property(e => e.EvtVlrttlucroliq)
                    .HasColumnName("EVT_VLRTTLUCROLIQ")
                    .HasColumnType("money");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TiptranspId).HasColumnName("TIPTRANSP_ID");
            });

            modelBuilder.Entity<GsEventosAdiantamentos>(entity =>
            {
                entity.HasKey(e => new { e.AdievtId, e.AssId });

                entity.ToTable("GS_EVENTOS_ADIANTAMENTOS");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.AdievtId).HasColumnName("ADIEVT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AdievtAgr).HasColumnName("ADIEVT_AGR");

                entity.Property(e => e.AdievtData)
                    .HasColumnName("ADIEVT_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.AdievtDes)
                    .HasColumnName("ADIEVT_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AdievtObs)
                    .HasColumnName("ADIEVT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.AdievtValor).HasColumnName("ADIEVT_VALOR");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosAgenda>(entity =>
            {
                entity.HasKey(e => new { e.EvtageId, e.AssId, e.EvtId });

                entity.ToTable("GS_EVENTOS_AGENDA");

                entity.Property(e => e.EvtageId).HasColumnName("EVTAGE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtageCobrar).HasColumnName("EVTAGE_COBRAR");

                entity.Property(e => e.EvtageData)
                    .HasColumnName("EVTAGE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtageHora).HasColumnName("EVTAGE_HORA");

                entity.Property(e => e.EvtageMotivo).HasColumnName("EVTAGE_MOTIVO");

                entity.Property(e => e.EvtageObs)
                    .HasColumnName("EVTAGE_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.OrcageId).HasColumnName("ORCAGE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosAgendaTecnicos>(entity =>
            {
                entity.HasKey(e => new { e.EvtagetecId, e.AssId });

                entity.ToTable("GS_EVENTOS_AGENDA_TECNICOS");

                entity.HasIndex(e => e.CarfunId)
                    .HasName("Idx_CARFUN_ID");

                entity.HasIndex(e => e.CargnivId)
                    .HasName("Idx_CARGNIV_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.Property(e => e.EvtagetecId).HasColumnName("EVTAGETEC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CarfunId).HasColumnName("CARFUN_ID");

                entity.Property(e => e.CargnivId).HasColumnName("CARGNIV_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtagetecAgr).HasColumnName("EVTAGETEC_AGR");

                entity.Property(e => e.EvtagetecData)
                    .HasColumnName("EVTAGETEC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtagetecHoraexcedente).HasColumnName("EVTAGETEC_HORAEXCEDENTE");

                entity.Property(e => e.EvtagetecQtde).HasColumnName("EVTAGETEC_QTDE");

                entity.Property(e => e.EvtagetecTipoDiaria).HasColumnName("EVTAGETEC_TIPO_DIARIA");

                entity.Property(e => e.EvtagetecTotalhoraexcedente).HasColumnName("EVTAGETEC_TOTALHORAEXCEDENTE");

                entity.Property(e => e.EvtagetecVencimento)
                    .HasColumnName("EVTAGETEC_VENCIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtagetecVlrcliente)
                    .HasColumnName("EVTAGETEC_VLRCLIENTE")
                    .HasColumnType("money");

                entity.Property(e => e.EvtagetecVlrdiaria)
                    .HasColumnName("EVTAGETEC_VLRDIARIA")
                    .HasColumnType("money");

                entity.Property(e => e.OrcagetecId).HasColumnName("ORCAGETEC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosAgendaTecnicosLog>(entity =>
            {
                entity.HasKey(e => e.LogId);

                entity.ToTable("GS_EVENTOS_AGENDA_TECNICOS_LOG");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_LOGEVT_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_LOGFUN_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_LOGUSE_ID");

                entity.Property(e => e.LogId)
                    .HasColumnName("LOG_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.LogDathor)
                    .HasColumnName("LOG_DATHOR")
                    .HasColumnType("datetime");

                entity.Property(e => e.LogDes)
                    .HasColumnName("LOG_DES")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.LogTipo).HasColumnName("LOG_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsEventosAndamento>(entity =>
            {
                entity.HasKey(e => e.EvtadtId)
                    .HasName("PK__GS_EVENT__9FF560EF39AD8A7F");

                entity.ToTable("GS_EVENTOS_ANDAMENTO");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.StsevtId)
                    .HasName("Idx_STSEVT_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.EvtadtId)
                    .HasColumnName("EVTADT_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtadtData)
                    .HasColumnName("EVTADT_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtadtObs)
                    .HasColumnName("EVTADT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.StsevtId).HasColumnName("STSEVT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsEventosArquivosLog>(entity =>
            {
                entity.ToTable("GS_EVENTOS_ARQUIVOS_LOG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtNum).HasColumnName("EVT_NUM");

                entity.Property(e => e.EvtarqNome)
                    .HasColumnName("EVTARQ_NOME")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.EvtarqTipo).HasColumnName("EVTARQ_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");
            });

            modelBuilder.Entity<GsEventosBv>(entity =>
            {
                entity.HasKey(e => new { e.EvtbvId, e.EvtId, e.AssId });

                entity.ToTable("GS_EVENTOS_BV");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.OrcbvId)
                    .HasName("Idx_ORCBV_ID");

                entity.Property(e => e.EvtbvId).HasColumnName("EVTBV_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.EvtbvAgr).HasColumnName("EVTBV_AGR");

                entity.Property(e => e.EvtbvData)
                    .HasColumnName("EVTBV_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtbvValor)
                    .HasColumnName("EVTBV_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.OrcbvId).HasColumnName("ORCBV_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosCliente>(entity =>
            {
                entity.HasKey(e => new { e.EvecliId, e.AssId });

                entity.ToTable("GS_EVENTOS_CLIENTE");

                entity.Property(e => e.EvecliId).HasColumnName("EVECLI_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvecliDatafim)
                    .HasColumnName("EVECLI_DATAFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvecliDataini)
                    .HasColumnName("EVECLI_DATAINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvecliHora)
                    .HasColumnName("EVECLI_HORA")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EvecliLocal)
                    .HasColumnName("EVECLI_LOCAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvecliTema)
                    .HasColumnName("EVECLI_TEMA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosConsumo>(entity =>
            {
                entity.HasKey(e => new { e.EvtcsmId, e.AssId });

                entity.ToTable("GS_EVENTOS_CONSUMO");

                entity.Property(e => e.EvtcsmId).HasColumnName("EVTCSM_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EptId).HasColumnName("EPT_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtcsmData)
                    .HasColumnName("EVTCSM_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtcsmObs)
                    .HasColumnName("EVTCSM_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EvtcsmQtd).HasColumnName("EVTCSM_QTD");

                entity.Property(e => e.EvtcsmTotal)
                    .HasColumnName("EVTCSM_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvtcsmValor)
                    .HasColumnName("EVTCSM_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UnidId).HasColumnName("UNID_ID");
            });

            modelBuilder.Entity<GsEventosDespesas>(entity =>
            {
                entity.HasKey(e => new { e.EvtdespId, e.AssId });

                entity.ToTable("GS_EVENTOS_DESPESAS");

                entity.HasIndex(e => e.CattitId)
                    .HasName("Idx_CATTIT_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.GrpdespeveId)
                    .HasName("Idx_GRPDESPEVE_ID");

                entity.HasIndex(e => e.OrcdespId)
                    .HasName("Idx_ORCDESP_ID");

                entity.HasIndex(e => e.SubcattitId)
                    .HasName("Idx_SUBCATTIT_ID");

                entity.HasIndex(e => e.SubgrpdespeveId)
                    .HasName("Idx_SUBGRPDESPEVE_ID");

                entity.Property(e => e.EvtdespId).HasColumnName("EVTDESP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AdievtId).HasColumnName("ADIEVT_ID");

                entity.Property(e => e.CattitId).HasColumnName("CATTIT_ID");

                entity.Property(e => e.ClatitId)
                    .HasColumnName("CLATIT_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.CptId).HasColumnName("CPT_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtdespAgr).HasColumnName("EVTDESP_AGR");

                entity.Property(e => e.EvtdespObs)
                    .HasColumnName("EVTDESP_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EvtdespQtd).HasColumnName("EVTDESP_QTD");

                entity.Property(e => e.EvtdespQtdcobrar).HasColumnName("EVTDESP_QTDCOBRAR");

                entity.Property(e => e.EvtdespTotal)
                    .HasColumnName("EVTDESP_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvtdespTotalcobrar)
                    .HasColumnName("EVTDESP_TOTALCOBRAR")
                    .HasColumnType("money");

                entity.Property(e => e.EvtdespValor)
                    .HasColumnName("EVTDESP_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.EvtdespVenc)
                    .HasColumnName("EVTDESP_VENC")
                    .HasColumnType("datetime");

                entity.Property(e => e.GrpdespeveId).HasColumnName("GRPDESPEVE_ID");

                entity.Property(e => e.OrcdespId).HasColumnName("ORCDESP_ID");

                entity.Property(e => e.SubcattitId).HasColumnName("SUBCATTIT_ID");

                entity.Property(e => e.SubgrpdespeveId).HasColumnName("SUBGRPDESPEVE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosDespesasCcusto>(entity =>
            {
                entity.HasKey(e => new { e.EvtdespccId, e.AssId });

                entity.ToTable("GS_EVENTOS_DESPESAS_CCUSTO");

                entity.HasIndex(e => e.CencusgrpId)
                    .HasName("Idx_CENCUSGRP_ID");

                entity.HasIndex(e => e.EvtdespId)
                    .HasName("Idx_EVTDESP_ID");

                entity.Property(e => e.EvtdespccId).HasColumnName("EVTDESPCC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.EvtdespId).HasColumnName("EVTDESP_ID");

                entity.Property(e => e.EvtdespccPercentual).HasColumnName("EVTDESPCC_PERCENTUAL");

                entity.Property(e => e.EvtdespccValor)
                    .HasColumnName("EVTDESPCC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.EvteqtId, e.EvtId });

                entity.ToTable("GS_EVENTOS_EQUIPAMENTOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.Property(e => e.EvteqtId).HasColumnName("EVTEQT_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtId).HasColumnName("EQT_ID");

                entity.Property(e => e.EvteqtAgr).HasColumnName("EVTEQT_AGR");

                entity.Property(e => e.EvteqtEqtterc).HasColumnName("EVTEQT_EQTTERC");

                entity.Property(e => e.EvteqtLancado).HasColumnName("EVTEQT_LANCADO");

                entity.Property(e => e.EvteqtPreco)
                    .HasColumnName("EVTEQT_PRECO")
                    .HasColumnType("money");

                entity.Property(e => e.EvteqtPrecosubloc)
                    .HasColumnName("EVTEQT_PRECOSUBLOC")
                    .HasColumnType("money");

                entity.Property(e => e.EvteqtQtd).HasColumnName("EVTEQT_QTD");

                entity.Property(e => e.EvteqtQtdLancado).HasColumnName("EVTEQT_QTD_LANCADO");

                entity.Property(e => e.EvteqtQtdcobrar).HasColumnName("EVTEQT_QTDCOBRAR");

                entity.Property(e => e.EvteqtTotal)
                    .HasColumnName("EVTEQT_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvteqtTotalcobrar)
                    .HasColumnName("EVTEQT_TOTALCOBRAR")
                    .HasColumnType("money");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipamentosSeries>(entity =>
            {
                entity.HasKey(e => new { e.EvteptserId, e.AssId, e.EvtId })
                    .HasName("PK_GS_EVENTO_EQUIPAMENTOS_SERIES");

                entity.ToTable("GS_EVENTOS_EQUIPAMENTOS_SERIES");

                entity.HasIndex(e => e.EptaprId)
                    .HasName("Idx_EPTAPR_ID");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.FunId2)
                    .HasName("Idx_FUN_ID2");

                entity.Property(e => e.EvteptserId).HasColumnName("EVTEPTSER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.EvteptserDataretorno)
                    .HasColumnName("EVTEPTSER_DATARETORNO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvteptserDatasaida)
                    .HasColumnName("EVTEPTSER_DATASAIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvteptserDevger).HasColumnName("EVTEPTSER_DEVGER");

                entity.Property(e => e.EvteptserIddestino).HasColumnName("EVTEPTSER_IDDESTINO");

                entity.Property(e => e.EvteptserIdorigem).HasColumnName("EVTEPTSER_IDORIGEM");

                entity.Property(e => e.EvteptserLancado).HasColumnName("EVTEPTSER_LANCADO");

                entity.Property(e => e.EvteptserObs)
                    .HasColumnName("EVTEPTSER_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EvteptserQtdLancado).HasColumnName("EVTEPTSER_QTD_LANCADO");

                entity.Property(e => e.EvteptserSubstremaj).HasColumnName("EVTEPTSER_SUBSTREMAJ");

                entity.Property(e => e.EvteptserSubstretorno).HasColumnName("EVTEPTSER_SUBSTRETORNO");

                entity.Property(e => e.EvteptserSubstsaida).HasColumnName("EVTEPTSER_SUBSTSAIDA");

                entity.Property(e => e.EvteptserSubstserid).HasColumnName("EVTEPTSER_SUBSTSERID");

                entity.Property(e => e.EvteptserTipoentrada).HasColumnName("EVTEPTSER_TIPOENTRADA");

                entity.Property(e => e.EvteptserTiposaida).HasColumnName("EVTEPTSER_TIPOSAIDA");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FunId2).HasColumnName("FUN_ID2");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipamentosSeriesKit>(entity =>
            {
                entity.HasKey(e => new { e.EvteptserkitId, e.AssId })
                    .HasName("PK_GS_EVENTOS_EQUIPAMENTOS_SERIES_KIT_1");

                entity.ToTable("GS_EVENTOS_EQUIPAMENTOS_SERIES_KIT");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.Property(e => e.EvteptserkitId).HasColumnName("EVTEPTSERKIT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipamentosTerceiros>(entity =>
            {
                entity.HasKey(e => new { e.EvteqtterId, e.AssId });

                entity.ToTable("GS_EVENTOS_EQUIPAMENTOS_TERCEIROS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.GrpeqtId)
                    .HasName("Idx_GRPEQT_ID");

                entity.HasIndex(e => e.OrceqtterId)
                    .HasName("Idx_ORCEQTTER_ID");

                entity.Property(e => e.EvteqtterId).HasColumnName("EVTEQTTER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ClatitId).HasColumnName("CLATIT_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.CptId).HasColumnName("CPT_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvteqtterAgr).HasColumnName("EVTEQTTER_AGR");

                entity.Property(e => e.EvteqtterContato)
                    .HasColumnName("EVTEQTTER_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EvteqtterDatvenc)
                    .HasColumnName("EVTEQTTER_DATVENC")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvteqtterDes)
                    .HasColumnName("EVTEQTTER_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvteqtterDevdata)
                    .HasColumnName("EVTEQTTER_DEVDATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvteqtterDevhora).HasColumnName("EVTEQTTER_DEVHORA");

                entity.Property(e => e.EvteqtterDias).HasColumnName("EVTEQTTER_DIAS");

                entity.Property(e => e.EvteqtterLancado).HasColumnName("EVTEQTTER_LANCADO");

                entity.Property(e => e.EvteqtterObs)
                    .HasColumnName("EVTEQTTER_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EvteqtterPrecocompra)
                    .HasColumnName("EVTEQTTER_PRECOCOMPRA")
                    .HasColumnType("money");

                entity.Property(e => e.EvteqtterPrecolocacao)
                    .HasColumnName("EVTEQTTER_PRECOLOCACAO")
                    .HasColumnType("money");

                entity.Property(e => e.EvteqtterPrecorepassado)
                    .HasColumnName("EVTEQTTER_PRECOREPASSADO")
                    .HasColumnType("money");

                entity.Property(e => e.EvteqtterQtd).HasColumnName("EVTEQTTER_QTD");

                entity.Property(e => e.EvteqtterQtdLancado).HasColumnName("EVTEQTTER_QTD_LANCADO");

                entity.Property(e => e.EvteqtterQtdcobrar).HasColumnName("EVTEQTTER_QTDCOBRAR");

                entity.Property(e => e.EvteqtterRetdata)
                    .HasColumnName("EVTEQTTER_RETDATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvteqtterRethora).HasColumnName("EVTEQTTER_RETHORA");

                entity.Property(e => e.EvteqtterTotal)
                    .HasColumnName("EVTEQTTER_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvteqtterTotalcobrar)
                    .HasColumnName("EVTEQTTER_TOTALCOBRAR")
                    .HasColumnType("money");

                entity.Property(e => e.GrpeqtId).HasColumnName("GRPEQT_ID");

                entity.Property(e => e.GrptitId).HasColumnName("GRPTIT_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.OrceqtterId).HasColumnName("ORCEQTTER_ID");

                entity.Property(e => e.SubgrpId).HasColumnName("SUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipamentosTerceirosCcusto>(entity =>
            {
                entity.HasKey(e => new { e.EvteqtterccId, e.AssId });

                entity.ToTable("GS_EVENTOS_EQUIPAMENTOS_TERCEIROS_CCUSTO");

                entity.HasIndex(e => e.CencusgrpId)
                    .HasName("Idx_CENCUSGRP_ID");

                entity.HasIndex(e => e.EvteqtterId)
                    .HasName("Idx_EVTEQTTER_ID");

                entity.Property(e => e.EvteqtterccId).HasColumnName("EVTEQTTERCC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.EvteqtterId).HasColumnName("EVTEQTTER_ID");

                entity.Property(e => e.EvteqtterccPercentual)
                    .HasColumnName("EVTEQTTERCC_PERCENTUAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvteqtterccValor)
                    .HasColumnName("EVTEQTTERCC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipe>(entity =>
            {
                entity.HasKey(e => e.EvteqpId);

                entity.ToTable("GS_EVENTOS_EQUIPE");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.Property(e => e.EvteqpId)
                    .HasColumnName("EVTEQP_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvteqpDescricao)
                    .HasColumnName("EVTEQP_DESCRICAO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipeFuncionarios>(entity =>
            {
                entity.HasKey(e => e.EvteqpfunId);

                entity.ToTable("GS_EVENTOS_EQUIPE_FUNCIONARIOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EvteqpId)
                    .HasName("Idx_EVTEQP_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.EvteqpfunId)
                    .HasColumnName("EVTEQPFUN_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvteqpId).HasColumnName("EVTEQP_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipeLegenda>(entity =>
            {
                entity.HasKey(e => e.EvteqplegId);

                entity.ToTable("GS_EVENTOS_EQUIPE_LEGENDA");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EvteqpfunId)
                    .HasName("Idx_EVTEQPFUN_ID");

                entity.HasIndex(e => e.EvtservId)
                    .HasName("Idx_EVTSERV_ID");

                entity.HasIndex(e => e.LegId)
                    .HasName("Idx_LEG_ID");

                entity.Property(e => e.EvteqplegId)
                    .HasColumnName("EVTEQPLEG_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvteqpfunId).HasColumnName("EVTEQPFUN_ID");

                entity.Property(e => e.EvtservId).HasColumnName("EVTSERV_ID");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipes>(entity =>
            {
                entity.HasKey(e => new { e.EvteqpId, e.AssId });

                entity.ToTable("GS_EVENTOS_EQUIPES");

                entity.Property(e => e.EvteqpId).HasColumnName("EVTEQP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvteqpDes)
                    .HasColumnName("EVTEQP_DES")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosEquipesFuncionarios>(entity =>
            {
                entity.HasKey(e => new { e.EvteqpfunId, e.AssId });

                entity.ToTable("GS_EVENTOS_EQUIPES_FUNCIONARIOS");

                entity.Property(e => e.EvteqpfunId).HasColumnName("EVTEQPFUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvteqpId).HasColumnName("EVTEQP_ID");

                entity.Property(e => e.EvteqpfunPercentual).HasColumnName("EVTEQPFUN_PERCENTUAL");

                entity.Property(e => e.EvteqpfunTotal)
                    .HasColumnName("EVTEQPFUN_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosHoraTecnica>(entity =>
            {
                entity.HasKey(e => new { e.EvthortecId, e.AssId })
                    .HasName("PK_GS_EVENTO_HORA_TECNICA");

                entity.ToTable("GS_EVENTOS_HORA_TECNICA");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.EvthortecData)
                    .HasName("Idx_EVTHORTEC_DATA");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.EvthortecId).HasColumnName("EVTHORTEC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvthortecData)
                    .HasColumnName("EVTHORTEC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvthortecDatter)
                    .HasColumnName("EVTHORTEC_DATTER")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvthortecFlag).HasColumnName("EVTHORTEC_FLAG");

                entity.Property(e => e.EvthortecHorini).HasColumnName("EVTHORTEC_HORINI");

                entity.Property(e => e.EvthortecHorter).HasColumnName("EVTHORTEC_HORTER");

                entity.Property(e => e.EvthortecHortot).HasColumnName("EVTHORTEC_HORTOT");

                entity.Property(e => e.EvthortecManual).HasColumnName("EVTHORTEC_MANUAL");

                entity.Property(e => e.EvthortecValor)
                    .HasColumnName("EVTHORTEC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.EvthortecValortotal)
                    .HasColumnName("EVTHORTEC_VALORTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.LogData)
                    .HasColumnName("LOG_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.LogDatcad)
                    .HasColumnName("LOG_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.LogNumip)
                    .HasColumnName("LOG_NUMIP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LogNumipcad)
                    .HasColumnName("LOG_NUMIPCAD")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LogUser)
                    .HasColumnName("LOG_USER")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LogUsercad)
                    .HasColumnName("LOG_USERCAD")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosHoraTecnicaCcusto>(entity =>
            {
                entity.HasKey(e => new { e.EvthortecccId, e.AssId });

                entity.ToTable("GS_EVENTOS_HORA_TECNICA_CCUSTO");

                entity.HasIndex(e => e.CencusgrpId)
                    .HasName("Idx_CENCUSGRP_ID");

                entity.HasIndex(e => e.EvthortecId)
                    .HasName("Idx_EVTHORTEC_ID");

                entity.Property(e => e.EvthortecccId).HasColumnName("EVTHORTECCC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.EvthortecId).HasColumnName("EVTHORTEC_ID");

                entity.Property(e => e.EvthortecccPercentual)
                    .HasColumnName("EVTHORTECCC_PERCENTUAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvthortecccValor)
                    .HasColumnName("EVTHORTECCC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosLocal>(entity =>
            {
                entity.HasKey(e => new { e.EvtlocId, e.AssId });

                entity.ToTable("GS_EVENTOS_LOCAL");

                entity.HasIndex(e => e.CidId)
                    .HasName("Idx_CID_ID");

                entity.Property(e => e.EvtlocId).HasColumnName("EVTLOC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.EvtlocBai)
                    .HasColumnName("EVTLOC_BAI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EvtlocCep)
                    .HasColumnName("EVTLOC_CEP")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EvtlocCon)
                    .HasColumnName("EVTLOC_CON")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EvtlocCpl)
                    .HasColumnName("EVTLOC_CPL")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.EvtlocDdd1)
                    .HasColumnName("EVTLOC_DDD1")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EvtlocEnd)
                    .HasColumnName("EVTLOC_END")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtlocLocal)
                    .HasColumnName("EVTLOC_LOCAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtlocNum)
                    .HasColumnName("EVTLOC_NUM")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EvtlocObs)
                    .HasColumnName("EVTLOC_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EvtlocTel1)
                    .HasColumnName("EVTLOC_TEL1")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosMateriais>(entity =>
            {
                entity.HasKey(e => new { e.EvtmatId, e.AssId });

                entity.ToTable("GS_EVENTOS_MATERIAIS");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.Property(e => e.EvtmatId).HasColumnName("EVTMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtmatAgr).HasColumnName("EVTMAT_AGR");

                entity.Property(e => e.EvtmatLancado).HasColumnName("EVTMAT_LANCADO");

                entity.Property(e => e.EvtmatPreco)
                    .HasColumnName("EVTMAT_PRECO")
                    .HasColumnType("money");

                entity.Property(e => e.EvtmatQtd).HasColumnName("EVTMAT_QTD");

                entity.Property(e => e.EvtmatQtdLancado).HasColumnName("EVTMAT_QTD_LANCADO");

                entity.Property(e => e.EvtmatQtdcobrar).HasColumnName("EVTMAT_QTDCOBRAR");

                entity.Property(e => e.EvtmatQtdretorno).HasColumnName("EVTMAT_QTDRETORNO");

                entity.Property(e => e.EvtmatTotal)
                    .HasColumnName("EVTMAT_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvtmatTotalcobrar)
                    .HasColumnName("EVTMAT_TOTALCOBRAR")
                    .HasColumnType("money");

                entity.Property(e => e.LogData)
                    .HasColumnName("LOG_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.LogUsuario)
                    .HasColumnName("LOG_USUARIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosMateriaisItens>(entity =>
            {
                entity.HasKey(e => new { e.EvtmatiteId, e.AssId, e.EvtId });

                entity.ToTable("GS_EVENTOS_MATERIAIS_ITENS");

                entity.HasIndex(e => e.EvtmatId)
                    .HasName("Idx_EVTMAT_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.Property(e => e.EvtmatiteId).HasColumnName("EVTMATITE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtmatId).HasColumnName("EVTMAT_ID");

                entity.Property(e => e.EvtmatiteDataretorno)
                    .HasColumnName("EVTMATITE_DATARETORNO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtmatiteDatasaida)
                    .HasColumnName("EVTMATITE_DATASAIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtmatiteIddestino).HasColumnName("EVTMATITE_IDDESTINO");

                entity.Property(e => e.EvtmatiteIdorigem).HasColumnName("EVTMATITE_IDORIGEM");

                entity.Property(e => e.EvtmatiteLancado).HasColumnName("EVTMATITE_LANCADO");

                entity.Property(e => e.EvtmatiteObs)
                    .HasColumnName("EVTMATITE_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EvtmatiteQtdLancado).HasColumnName("EVTMATITE_QTD_LANCADO");

                entity.Property(e => e.EvtmatiteTipoentrada).HasColumnName("EVTMATITE_TIPOENTRADA");

                entity.Property(e => e.EvtmatiteTiposaida).HasColumnName("EVTMATITE_TIPOSAIDA");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosRag>(entity =>
            {
                entity.HasKey(e => new { e.EveragId, e.AssId });

                entity.ToTable("GS_EVENTOS_RAG");

                entity.HasIndex(e => e.EveragDatafim)
                    .HasName("Idx_EVERAG_DATAFIM");

                entity.HasIndex(e => e.EveragDataini)
                    .HasName("Idx_EVERAG_DATAINI");

                entity.HasIndex(e => e.EveragExibfim)
                    .HasName("Idx_EVERAG_EXIBFIM");

                entity.HasIndex(e => e.EveragExibini)
                    .HasName("Idx_EVERAG_EXIBINI");

                entity.HasIndex(e => e.EveragHora)
                    .HasName("Idx_EVERAG_HORA");

                entity.HasIndex(e => e.EveragTipo)
                    .HasName("Idx_EVERAG_TIPO");

                entity.Property(e => e.EveragId).HasColumnName("EVERAG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EveragArea).HasColumnName("EVERAG_AREA");

                entity.Property(e => e.EveragConteudo)
                    .HasColumnName("EVERAG_CONTEUDO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EveragDatafim)
                    .HasColumnName("EVERAG_DATAFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.EveragDataini)
                    .HasColumnName("EVERAG_DATAINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.EveragDconteudo)
                    .HasColumnName("EVERAG_DCONTEUDO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EveragDinscricao)
                    .HasColumnName("EVERAG_DINSCRICAO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EveragExibfim)
                    .HasColumnName("EVERAG_EXIBFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.EveragExibini)
                    .HasColumnName("EVERAG_EXIBINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.EveragGi).HasColumnName("EVERAG_GI");

                entity.Property(e => e.EveragGs).HasColumnName("EVERAG_GS");

                entity.Property(e => e.EveragHora)
                    .HasColumnName("EVERAG_HORA")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EveragHorat)
                    .HasColumnName("EVERAG_HORAT")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EveragInfo)
                    .HasColumnName("EVERAG_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.EveragInscricao)
                    .HasColumnName("EVERAG_INSCRICAO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EveragLocal)
                    .HasColumnName("EVERAG_LOCAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EveragStatus).HasColumnName("EVERAG_STATUS");

                entity.Property(e => e.EveragTema)
                    .HasColumnName("EVERAG_TEMA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EveragTipo).HasColumnName("EVERAG_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosRelacaoEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.EvtreleptId, e.AssId })
                    .HasName("PK_GS_EVENTOS_RELACAO_EQUIPAMENTOS_1");

                entity.ToTable("GS_EVENTOS_RELACAO_EQUIPAMENTOS");

                entity.HasIndex(e => e.EptaprId)
                    .HasName("Idx_EPTAPR_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.Property(e => e.EvtreleptId).HasColumnName("EVTRELEPT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtreleptObs)
                    .HasColumnName("EVTRELEPT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EvtreleptQtd).HasColumnName("EVTRELEPT_QTD");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosRelacaoEquipamentosLab>(entity =>
            {
                entity.HasKey(e => new { e.EvtreleptlabId, e.AssId });

                entity.ToTable("GS_EVENTOS_RELACAO_EQUIPAMENTOS_LAB");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.Property(e => e.EvtreleptlabId).HasColumnName("EVTRELEPTLAB_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosRelacaoEquipamentosLabItens>(entity =>
            {
                entity.HasKey(e => new { e.EvtreleptlabitemId, e.AssId });

                entity.ToTable("GS_EVENTOS_RELACAO_EQUIPAMENTOS_LAB_ITENS");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.EvtreleptlabId)
                    .HasName("Idx_EVTRELEPTLAB_ID");

                entity.Property(e => e.EvtreleptlabitemId).HasColumnName("EVTRELEPTLABITEM_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.EvtreleptlabId).HasColumnName("EVTRELEPTLAB_ID");

                entity.Property(e => e.EvtreleptlabitemFixo).HasColumnName("EVTRELEPTLABITEM_FIXO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosRelacaoMateriais>(entity =>
            {
                entity.HasKey(e => new { e.EvtrelmatId, e.AssId });

                entity.ToTable("GS_EVENTOS_RELACAO_MATERIAIS");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.Property(e => e.EvtrelmatId).HasColumnName("EVTRELMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtrelmatAgr).HasColumnName("EVTRELMAT_AGR");

                entity.Property(e => e.EvtrelmatQtd).HasColumnName("EVTRELMAT_QTD");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosServicos>(entity =>
            {
                entity.HasKey(e => new { e.EvtservId, e.AssId });

                entity.ToTable("GS_EVENTOS_SERVICOS");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.LegId)
                    .HasName("Idx_LEG_ID");

                entity.HasIndex(e => e.OrcservId)
                    .HasName("Idx_ORCSERV_ID");

                entity.HasIndex(e => e.ServId)
                    .HasName("Idx_SERV_ID");

                entity.Property(e => e.EvtservId).HasColumnName("EVTSERV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtservAgr).HasColumnName("EVTSERV_AGR");

                entity.Property(e => e.EvtservData)
                    .HasColumnName("EVTSERV_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtservLancado).HasColumnName("EVTSERV_LANCADO");

                entity.Property(e => e.EvtservObs)
                    .HasColumnName("EVTSERV_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.EvtservPreco)
                    .HasColumnName("EVTSERV_PRECO")
                    .HasColumnType("money");

                entity.Property(e => e.EvtservQtd).HasColumnName("EVTSERV_QTD");

                entity.Property(e => e.EvtservQtdLancado).HasColumnName("EVTSERV_QTD_LANCADO");

                entity.Property(e => e.EvtservQtdcobrar).HasColumnName("EVTSERV_QTDCOBRAR");

                entity.Property(e => e.EvtservTotal)
                    .HasColumnName("EVTSERV_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.EvtservTotalcobrar)
                    .HasColumnName("EVTSERV_TOTALCOBRAR")
                    .HasColumnType("money");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.OrcservId).HasColumnName("ORCSERV_ID");

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosTecnicos>(entity =>
            {
                entity.HasKey(e => new { e.EvttecId, e.EvtId, e.AssId });

                entity.ToTable("GS_EVENTOS_TECNICOS");

                entity.HasIndex(e => e.CarfunId)
                    .HasName("Idx_CARFUN_ID");

                entity.HasIndex(e => e.CargnivId)
                    .HasName("Idx_CARGNIV_ID");

                entity.HasIndex(e => e.EvttecData)
                    .HasName("Idx_EVTTEC_DATA");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.EvttecId).HasColumnName("EVTTEC_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CarfunId).HasColumnName("CARFUN_ID");

                entity.Property(e => e.CargnivId).HasColumnName("CARGNIV_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.EvttecAgr).HasColumnName("EVTTEC_AGR");

                entity.Property(e => e.EvttecData)
                    .HasColumnName("EVTTEC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvttecHoraexcedente).HasColumnName("EVTTEC_HORAEXCEDENTE");

                entity.Property(e => e.EvttecQtde).HasColumnName("EVTTEC_QTDE");

                entity.Property(e => e.EvttecResp).HasColumnName("EVTTEC_RESP");

                entity.Property(e => e.EvttecTipo).HasColumnName("EVTTEC_TIPO");

                entity.Property(e => e.EvttecTotalhoraexcedente).HasColumnName("EVTTEC_TOTALHORAEXCEDENTE");

                entity.Property(e => e.EvttecValdir)
                    .HasColumnName("EVTTEC_VALDIR")
                    .HasColumnType("money");

                entity.Property(e => e.EvttecValneg)
                    .HasColumnName("EVTTEC_VALNEG")
                    .HasColumnType("money");

                entity.Property(e => e.EvttecVencimento)
                    .HasColumnName("EVTTEC_VENCIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.OrctecId).HasColumnName("ORCTEC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosVeiculos>(entity =>
            {
                entity.HasKey(e => e.EvtvclId);

                entity.ToTable("GS_EVENTOS_VEICULOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.VclId)
                    .HasName("Idx_VCL_ID");

                entity.Property(e => e.EvtvclId)
                    .HasColumnName("EVTVCL_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvtvclData)
                    .HasColumnName("EVTVCL_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtvclHora).HasColumnName("EVTVCL_HORA");

                entity.Property(e => e.EvtvclObs)
                    .HasColumnName("EVTVCL_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.VclId).HasColumnName("VCL_ID");
            });

            modelBuilder.Entity<GsEventosVeiculosLegenda>(entity =>
            {
                entity.HasKey(e => e.EvtvcllegId);

                entity.ToTable("GS_EVENTOS_VEICULOS_LEGENDA");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EvtservId)
                    .HasName("Idx_EVTSERV_ID");

                entity.HasIndex(e => e.EvtvclId)
                    .HasName("Idx_EVTVCL_ID");

                entity.HasIndex(e => e.LegId)
                    .HasName("Idx_LEG_ID");

                entity.Property(e => e.EvtvcllegId)
                    .HasColumnName("EVTVCLLEG_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtservId).HasColumnName("EVTSERV_ID");

                entity.Property(e => e.EvtvclId).HasColumnName("EVTVCL_ID");

                entity.Property(e => e.LegId).HasColumnName("LEG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsEventosVeiculosMotoristas>(entity =>
            {
                entity.HasKey(e => e.EvtvclmotId)
                    .HasName("PK__GS_EVENT__C85D8E196E765879");

                entity.ToTable("GS_EVENTOS_VEICULOS_MOTORISTAS");

                entity.Property(e => e.EvtvclmotId)
                    .HasColumnName("EVTVCLMOT_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.EvtvclId).HasColumnName("EVTVCL_ID");

                entity.Property(e => e.EvtvclmotData)
                    .HasColumnName("EVTVCLMOT_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtvclmotHora).HasColumnName("EVTVCLMOT_HORA");

                entity.Property(e => e.EvtvclmotObs)
                    .HasColumnName("EVTVCLMOT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFalhaSeguranca>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_FALHA_SEGURANCA");

                entity.Property(e => e.Descricao)
                    .HasColumnName("descricao")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PId).HasColumnName("P_Id");
            });

            modelBuilder.Entity<GsFamiliaServicos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_FAMILIA_SERVICOS");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FamId).HasColumnName("FAM_ID");

                entity.Property(e => e.FamiliaDes)
                    .HasColumnName("FAMILIA_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFaq>(entity =>
            {
                entity.HasKey(e => new { e.FaqId, e.AssId })
                    .HasName("PK_GS_OPERACAO_SISTEMA");

                entity.ToTable("GS_FAQ");

                entity.Property(e => e.FaqId).HasColumnName("FAQ_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FaqAss)
                    .HasColumnName("FAQ_ASS")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FaqInfo)
                    .HasColumnName("FAQ_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFluxoCaixa>(entity =>
            {
                entity.HasKey(e => new { e.FlxcxaId, e.AssId });

                entity.ToTable("GS_FLUXO_CAIXA");

                entity.Property(e => e.FlxcxaId).HasColumnName("FLXCXA_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FlxcxaAnot)
                    .HasColumnName("FLXCXA_ANOT")
                    .HasColumnType("text");

                entity.Property(e => e.FlxcxaCor)
                    .HasColumnName("FLXCXA_COR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlxcxaData)
                    .HasColumnName("FLXCXA_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFluxoComentarios>(entity =>
            {
                entity.HasKey(e => new { e.FlxcomId, e.AssId });

                entity.ToTable("GS_FLUXO_COMENTARIOS");

                entity.Property(e => e.FlxcomId).HasColumnName("FLXCOM_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Cd).HasColumnName("CD");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.FlxcomData)
                    .HasColumnName("FLXCOM_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlxcomInfo)
                    .HasColumnName("FLXCOM_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFolha>(entity =>
            {
                entity.HasKey(e => new { e.FolhaId, e.AssId })
                    .HasName("PK_GS_FOLHA_PAGAMENTO_1");

                entity.ToTable("GS_FOLHA");

                entity.HasIndex(e => e.CppId)
                    .HasName("Idx_CPP_ID");

                entity.HasIndex(e => e.FolhaTipo)
                    .HasName("Idx_FOLHA_TIPO");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.FolhaId).HasColumnName("FOLHA_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.FolhaComp)
                    .HasColumnName("FOLHA_COMP")
                    .HasColumnType("datetime");

                entity.Property(e => e.FolhaObs)
                    .HasColumnName("FOLHA_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.FolhaPagto)
                    .HasColumnName("FOLHA_PAGTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FolhaTipo).HasColumnName("FOLHA_TIPO");

                entity.Property(e => e.FolhaTotcre).HasColumnName("FOLHA_TOTCRE");

                entity.Property(e => e.FolhaTotdeb).HasColumnName("FOLHA_TOTDEB");

                entity.Property(e => e.FolhaTotger).HasColumnName("FOLHA_TOTGER");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFolhaAux>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_FOLHA_AUX");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.IdFolha).HasColumnName("ID_FOLHA");

                entity.Property(e => e.IdFolhaAux)
                    .HasColumnName("ID_FOLHA_AUX")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysdatCad)
                    .HasColumnName("SYSDAT_CAD")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<GsFolhaLancamentos>(entity =>
            {
                entity.HasKey(e => new { e.FolhalanId, e.FolhaId, e.AssId });

                entity.ToTable("GS_FOLHA_LANCAMENTOS");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.FolhalanData)
                    .HasName("Idx_FOLHALAN_DATA");

                entity.HasIndex(e => e.VerbfolId)
                    .HasName("Idx_VERBFOL_ID");

                entity.Property(e => e.FolhalanId).HasColumnName("FOLHALAN_ID");

                entity.Property(e => e.FolhaId).HasColumnName("FOLHA_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.FolhalanData)
                    .HasColumnName("FOLHALAN_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FolhalanDes)
                    .HasColumnName("FOLHALAN_DES")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.FolhalanValor)
                    .HasColumnName("FOLHALAN_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.VerbfolId).HasColumnName("VERBFOL_ID");
            });

            modelBuilder.Entity<GsFolhaPagamento>(entity =>
            {
                entity.HasKey(e => new { e.FlapagId, e.AssId });

                entity.ToTable("GS_FOLHA_PAGAMENTO");

                entity.Property(e => e.FlapagId).HasColumnName("FLAPAG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FlapagAno).HasColumnName("FLAPAG_ANO");

                entity.Property(e => e.FlapagCpf)
                    .HasColumnName("FLAPAG_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlapagData)
                    .HasColumnName("FLAPAG_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlapagDatavencimento)
                    .HasColumnName("FLAPAG_DATAVENCIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlapagMes).HasColumnName("FLAPAG_MES");

                entity.Property(e => e.FlapagNomebanco).HasColumnName("FLAPAG_NOMEBANCO");

                entity.Property(e => e.FlapagNumeroagencia).HasColumnName("FLAPAG_NUMEROAGENCIA");

                entity.Property(e => e.FlapagNumerocontacorrente).HasColumnName("FLAPAG_NUMEROCONTACORRENTE");

                entity.Property(e => e.FlapagObs)
                    .HasColumnName("FLAPAG_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.FlapagValor)
                    .HasColumnName("FLAPAG_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TablanId).HasColumnName("TABLAN_ID");
            });

            modelBuilder.Entity<GsFolhaVerbas>(entity =>
            {
                entity.HasKey(e => new { e.VerbfolId, e.AssId })
                    .HasName("PK_GS__FOLHA_VERBAS");

                entity.ToTable("GS_FOLHA_VERBAS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.GrptitId)
                    .HasName("Idx_GRPTIT_ID");

                entity.HasIndex(e => e.PlnctsctsId)
                    .HasName("Idx_PLNCTSCTS_ID");

                entity.HasIndex(e => e.PlnctsgrpId)
                    .HasName("Idx_PLNCTSGRP_ID");

                entity.HasIndex(e => e.PlnctssubctsId)
                    .HasName("Idx_PLNCTSSUBCTS_ID");

                entity.HasIndex(e => e.PlnctssubgrpId)
                    .HasName("Idx_PLNCTSSUBGRP_ID");

                entity.HasIndex(e => e.SubgrpId)
                    .HasName("Idx_SUBGRP_ID");

                entity.Property(e => e.VerbfolId).HasColumnName("VERBFOL_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.GrptitId).HasColumnName("GRPTIT_ID");

                entity.Property(e => e.Inss).HasColumnName("INSS");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SubgrpId).HasColumnName("SUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.VerbfolAltdes).HasColumnName("VERBFOL_ALTDES");

                entity.Property(e => e.VerbfolCod).HasColumnName("VERBFOL_COD");

                entity.Property(e => e.VerbfolDes)
                    .HasColumnName("VERBFOL_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VerbfolGerfin).HasColumnName("VERBFOL_GERFIN");

                entity.Property(e => e.VerbfolTipo).HasColumnName("VERBFOL_TIPO");
            });

            modelBuilder.Entity<GsFolhaVerbasDescontos>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_FOLHA_VERBAS_DESCONTOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.VerbfolId)
                    .HasName("Idx_VERBFOL_ID");

                entity.HasIndex(e => e.VerbfoldesId)
                    .HasName("Idx_VERBFOLDES_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.VerbfolId).HasColumnName("VERBFOL_ID");

                entity.Property(e => e.VerbfoldesId).HasColumnName("VERBFOLDES_ID");
            });

            modelBuilder.Entity<GsFornecedoresTipos>(entity =>
            {
                entity.HasKey(e => new { e.TipforId, e.AssId });

                entity.ToTable("GS_FORNECEDORES_TIPOS");

                entity.Property(e => e.TipforId).HasColumnName("TIPFOR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TipforNome)
                    .IsRequired()
                    .HasColumnName("TIPFOR_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsFuncionarios>(entity =>
            {
                entity.HasKey(e => new { e.FunId, e.AssId });

                entity.ToTable("GS_FUNCIONARIOS");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.CarfunId).HasColumnName("CARFUN_ID");

                entity.Property(e => e.CargnivId).HasColumnName("CARGNIV_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.FunApelido)
                    .HasColumnName("FUN_APELIDO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FunApoiotecnico).HasColumnName("FUN_APOIOTECNICO");

                entity.Property(e => e.FunBanage)
                    .HasColumnName("FUN_BANAGE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FunBancont)
                    .HasColumnName("FUN_BANCONT")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FunBancpf)
                    .HasColumnName("FUN_BANCPF")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FunBanid).HasColumnName("FUN_BANID");

                entity.Property(e => e.FunBannomtit)
                    .HasColumnName("FUN_BANNOMTIT")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.FunBanparentesco)
                    .HasColumnName("FUN_BANPARENTESCO")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.FunBanterc).HasColumnName("FUN_BANTERC");

                entity.Property(e => e.FunBantip).HasColumnName("FUN_BANTIP");

                entity.Property(e => e.FunCartmot)
                    .HasColumnName("FUN_CARTMOT")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FunCel)
                    .HasColumnName("FUN_CEL")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FunCoddem).HasColumnName("FUN_CODDEM");

                entity.Property(e => e.FunCodmat).HasColumnName("FUN_CODMAT");

                entity.Property(e => e.FunColor)
                    .HasColumnName("FUN_COLOR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FunColorsec)
                    .HasColumnName("FUN_COLORSEC")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FunContato)
                    .HasColumnName("FUN_CONTATO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FunCpf)
                    .HasColumnName("FUN_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FunCtps)
                    .HasColumnName("FUN_CTPS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FunDatadm)
                    .HasColumnName("FUN_DATADM")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDatdem)
                    .HasColumnName("FUN_DATDEM")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDateadm)
                    .HasColumnName("FUN_DATEADM")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDatedem)
                    .HasColumnName("FUN_DATEDEM")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDateper)
                    .HasColumnName("FUN_DATEPER")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDatetro)
                    .HasColumnName("FUN_DATETRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDatevencimento)
                    .HasColumnName("FUN_DATEVENCIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDatnas)
                    .HasColumnName("FUN_DATNAS")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDatpis)
                    .HasColumnName("FUN_DATPIS")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunDddcel)
                    .HasColumnName("FUN_DDDCEL")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FunDddfone)
                    .HasColumnName("FUN_DDDFONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FunDespd)
                    .HasColumnName("FUN_DESPD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FunDesps)
                    .HasColumnName("FUN_DESPS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FunDesvr)
                    .HasColumnName("FUN_DESVR")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FunDesvt)
                    .HasColumnName("FUN_DESVT")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FunEmail)
                    .HasColumnName("FUN_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FunEndbai)
                    .HasColumnName("FUN_ENDBAI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FunEndcep)
                    .HasColumnName("FUN_ENDCEP")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FunEndcpl)
                    .HasColumnName("FUN_ENDCPL")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FunEnddes)
                    .HasColumnName("FUN_ENDDES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FunEndnum)
                    .HasColumnName("FUN_ENDNUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FunEstciv).HasColumnName("FUN_ESTCIV");

                entity.Property(e => e.FunFolhaAjudacusto)
                    .HasColumnName("FUN_FOLHA_AJUDACUSTO")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaBonus)
                    .HasColumnName("FUN_FOLHA_BONUS")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaDescvaltransp).HasColumnName("FUN_FOLHA_DESCVALTRANSP");

                entity.Property(e => e.FunFolhaInss).HasColumnName("FUN_FOLHA_INSS");

                entity.Property(e => e.FunFolhaIrpf).HasColumnName("FUN_FOLHA_IRPF");

                entity.Property(e => e.FunFolhaPartlucr)
                    .HasColumnName("FUN_FOLHA_PARTLUCR")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaPensao)
                    .HasColumnName("FUN_FOLHA_PENSAO")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaPlamed)
                    .HasColumnName("FUN_FOLHA_PLAMED")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaQuinq)
                    .HasColumnName("FUN_FOLHA_QUINQ")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaRefeicao)
                    .HasColumnName("FUN_FOLHA_REFEICAO")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaSalario)
                    .HasColumnName("FUN_FOLHA_SALARIO")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaSalfam)
                    .HasColumnName("FUN_FOLHA_SALFAM")
                    .HasColumnType("money");

                entity.Property(e => e.FunFolhaVale).HasColumnName("FUN_FOLHA_VALE");

                entity.Property(e => e.FunFolhaValtransp)
                    .HasColumnName("FUN_FOLHA_VALTRANSP")
                    .HasColumnType("money");

                entity.Property(e => e.FunFone)
                    .HasColumnName("FUN_FONE")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.FunForn).HasColumnName("FUN_FORN");

                entity.Property(e => e.FunGratificacao).HasColumnName("FUN_GRATIFICACAO");

                entity.Property(e => e.FunGrauinst)
                    .HasColumnName("FUN_GRAUINST")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FunHoraentrada)
                    .HasColumnName("FUN_HORAENTRADA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunHoraentradaintervalo)
                    .HasColumnName("FUN_HORAENTRADAINTERVALO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunHorasaida)
                    .HasColumnName("FUN_HORASAIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunHorasaidaintervalo)
                    .HasColumnName("FUN_HORASAIDAINTERVALO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunImgdig)
                    .HasColumnName("FUN_IMGDIG")
                    .HasColumnType("image");

                entity.Property(e => e.FunImgfoto)
                    .HasColumnName("FUN_IMGFOTO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.FunLb).HasColumnName("FUN_LB");

                entity.Property(e => e.FunLbinfo).HasColumnName("FUN_LBINFO");

                entity.Property(e => e.FunLocnascid)
                    .HasColumnName("FUN_LOCNASCID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FunLocnasest)
                    .HasColumnName("FUN_LOCNASEST")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FunMotorista)
                    .HasColumnName("FUN_MOTORISTA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FunNextel)
                    .HasColumnName("FUN_NEXTEL")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.FunNome)
                    .HasColumnName("FUN_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FunNomeconjugue)
                    .HasColumnName("FUN_NOMECONJUGUE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FunNomemae)
                    .HasColumnName("FUN_NOMEMAE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FunNomepai)
                    .HasColumnName("FUN_NOMEPAI")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FunObs)
                    .HasColumnName("FUN_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.FunPaghor).HasColumnName("FUN_PAGHOR");

                entity.Property(e => e.FunPagunicodia).HasColumnName("FUN_PAGUNICODIA");

                entity.Property(e => e.FunPagvaldia)
                    .HasColumnName("FUN_PAGVALDIA")
                    .HasColumnType("money");

                entity.Property(e => e.FunPagvalhor)
                    .HasColumnName("FUN_PAGVALHOR")
                    .HasColumnType("money");

                entity.Property(e => e.FunPis)
                    .HasColumnName("FUN_PIS")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.FunRgdoc)
                    .HasColumnName("FUN_RGDOC")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FunRgexp)
                    .HasColumnName("FUN_RGEXP")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunRgorgemi)
                    .HasColumnName("FUN_RGORGEMI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FunRguf).HasColumnName("FUN_RGUF");

                entity.Property(e => e.FunSenhacartao)
                    .HasColumnName("FUN_SENHACARTAO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FunSexo).HasColumnName("FUN_SEXO");

                entity.Property(e => e.FunSit).HasColumnName("FUN_SIT");

                entity.Property(e => e.FunTipo).HasColumnName("FUN_TIPO");

                entity.Property(e => e.FunTitulo)
                    .HasColumnName("FUN_TITULO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FunValpd)
                    .HasColumnName("FUN_VALPD")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FunValps)
                    .HasColumnName("FUN_VALPS")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FunValvr)
                    .HasColumnName("FUN_VALVR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FunValvt)
                    .HasColumnName("FUN_VALVT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.FunVendedor).HasColumnName("FUN_VENDEDOR");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFuncionariosBeneficios>(entity =>
            {
                entity.HasKey(e => new { e.BnffunId, e.AssId, e.FunId, e.BnfId })
                    .HasName("PK_GS_FUNCIONARIOSS_BENEFICIOS");

                entity.ToTable("GS_FUNCIONARIOS_BENEFICIOS");

                entity.Property(e => e.BnffunId).HasColumnName("BNFFUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.BnfId).HasColumnName("BNF_ID");

                entity.Property(e => e.BnffunVal)
                    .HasColumnName("BNFFUN_VAL")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFuncionariosCargosNiveis>(entity =>
            {
                entity.ToTable("GS_FUNCIONARIOS_CARGOS_NIVEIS");

                entity.HasIndex(e => new { e.AssId, e.FunId, e.CarfunId, e.CargnivId })
                    .HasName("IX_GS_FUNCIONARIOS_CARGOS_NIVEIS")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CarfunId).HasColumnName("CARFUN_ID");

                entity.Property(e => e.CargnivId).HasColumnName("CARGNIV_ID");

                entity.Property(e => e.FcnSit).HasColumnName("FCN_SIT");

                entity.Property(e => e.FcnUsuarioAlt).HasColumnName("FCN_USUARIO_ALT");

                entity.Property(e => e.FcnUsuarioCad).HasColumnName("FCN_USUARIO_CAD");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatalt)
                    .HasColumnName("SYS_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDel)
                    .HasColumnName("SYS_DEL")
                    .HasDefaultValueSql("((0))");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GsFuncionariosCargosNiveis)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ASS_ID");

                entity.HasOne(d => d.GsFuncionarios)
                    .WithMany(p => p.GsFuncionariosCargosNiveis)
                    .HasForeignKey(d => new { d.FunId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_FUN_ID");
            });

            modelBuilder.Entity<GsFuncionariosCentroCusto>(entity =>
            {
                entity.HasKey(e => new { e.FunratfinId, e.FunId, e.AssId });

                entity.ToTable("GS_FUNCIONARIOS_CENTRO_CUSTO");

                entity.HasIndex(e => e.CencusgrpId)
                    .HasName("Idx_CENCUSGRP_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.FunratfinId).HasColumnName("FUNRATFIN_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.FunratfinPerc).HasColumnName("FUNRATFIN_PERC");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFuncionariosContabancaria>(entity =>
            {
                entity.HasKey(e => new { e.ConbanfunId, e.AssId });

                entity.ToTable("GS_FUNCIONARIOS_CONTABANCARIA");

                entity.HasIndex(e => e.BanId)
                    .HasName("Idx_BAN_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.ConbanfunId).HasColumnName("CONBANFUN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BanId).HasColumnName("BAN_ID");

                entity.Property(e => e.ConbanfunAge)
                    .HasColumnName("CONBANFUN_AGE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanfunConta)
                    .HasColumnName("CONBANFUN_CONTA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanfunCpf)
                    .HasColumnName("CONBANFUN_CPF")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanfunNome)
                    .HasColumnName("CONBANFUN_NOME")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanfunTerc).HasColumnName("CONBANFUN_TERC");

                entity.Property(e => e.ConbanfunTipo).HasColumnName("CONBANFUN_TIPO");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFuncionariosFerias>(entity =>
            {
                entity.HasKey(e => new { e.FunferId, e.AssId });

                entity.ToTable("GS_FUNCIONARIOS_FERIAS");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.FunferDatainicio)
                    .HasName("Idx_FUNFER_DATAINICIO");

                entity.Property(e => e.FunferId).HasColumnName("FUNFER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FunferDatainicio)
                    .HasColumnName("FUNFER_DATAINICIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunferDatatermino)
                    .HasColumnName("FUNFER_DATATERMINO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunferObs)
                    .HasColumnName("FUNFER_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.FunferPerdaqsDtinicio)
                    .HasColumnName("FUNFER_PERDAQS_DTINICIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunferPerdaqsDttermino)
                    .HasColumnName("FUNFER_PERDAQS_DTTERMINO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFuncionariosFilhos>(entity =>
            {
                entity.HasKey(e => new { e.FunfilId, e.AssId });

                entity.ToTable("GS_FUNCIONARIOS_FILHOS");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.FunfilId).HasColumnName("FUNFIL_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FunfilDatnas)
                    .HasColumnName("FUNFIL_DATNAS")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunfilNome)
                    .HasColumnName("FUNFIL_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFuncionariosFolha>(entity =>
            {
                entity.HasKey(e => new { e.FunfolhaId, e.AssId });

                entity.ToTable("GS_FUNCIONARIOS_FOLHA");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.FunfolhaAno)
                    .HasName("Idx_FUNFOLHA_ANO");

                entity.HasIndex(e => e.FunfolhaMes)
                    .HasName("Idx_FUNFOLHA_MES");

                entity.HasIndex(e => e.VerbfolId)
                    .HasName("Idx_VERBFOL_ID");

                entity.Property(e => e.FunfolhaId).HasColumnName("FUNFOLHA_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FunfolhaAno).HasColumnName("FUNFOLHA_ANO");

                entity.Property(e => e.FunfolhaData)
                    .HasColumnName("FUNFOLHA_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunfolhaMes).HasColumnName("FUNFOLHA_MES");

                entity.Property(e => e.FunfolhaValor)
                    .HasColumnName("FUNFOLHA_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.VerbfolId).HasColumnName("VERBFOL_ID");
            });

            modelBuilder.Entity<GsFuncionariosHistorico>(entity =>
            {
                entity.HasKey(e => new { e.FunhistId, e.AssId });

                entity.ToTable("GS_FUNCIONARIOS_HISTORICO");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.FunhistId).HasColumnName("FUNHIST_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FunhistData)
                    .HasColumnName("FUNHIST_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FunhistObs)
                    .HasColumnName("FUNHIST_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsFuncionariosTelefones>(entity =>
            {
                entity.HasKey(e => new { e.FuntelId, e.AssId });

                entity.ToTable("GS_FUNCIONARIOS_TELEFONES");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.FuntelId).HasColumnName("FUNTEL_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FuntelDdd).HasColumnName("FUNTEL_DDD");

                entity.Property(e => e.FuntelTel).HasColumnName("FUNTEL_TEL");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsGerenciadorArquivos>(entity =>
            {
                entity.HasKey(e => new { e.GerarqId, e.AssId, e.UserId });

                entity.ToTable("GS_GERENCIADOR_ARQUIVOS");

                entity.HasIndex(e => e.GerarqControle)
                    .HasName("Idx_GERARQ_CONTROLE");

                entity.HasIndex(e => e.UserId)
                    .HasName("Idx_USER_ID");

                entity.Property(e => e.GerarqId).HasColumnName("GERARQ_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");

                entity.Property(e => e.GerarqControle).HasColumnName("GERARQ_CONTROLE");

                entity.Property(e => e.GerarqDes)
                    .HasColumnName("GERARQ_DES")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.GerarqFile)
                    .HasColumnName("GERARQ_FILE")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.GerarqPath)
                    .HasColumnName("GERARQ_PATH")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.GerarqTipo).HasColumnName("GERARQ_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsGruposMateriais>(entity =>
            {
                entity.HasKey(e => new { e.GrpmatId, e.AssId });

                entity.ToTable("GS_GRUPOS_MATERIAIS");

                entity.Property(e => e.GrpmatId).HasColumnName("GRPMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.GrpmatDes)
                    .HasColumnName("GRPMAT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsIgrejaRecepcao>(entity =>
            {
                entity.HasKey(e => e.IgrId)
                    .HasName("PK__GS_IGREJ__A15B33844B03CA61");

                entity.ToTable("GS_IGREJA_RECEPCAO");

                entity.Property(e => e.IgrId).HasColumnName("IGR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.IgrBai)
                    .HasColumnName("IGR_BAI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IgrCep)
                    .HasColumnName("IGR_CEP")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.IgrCid).HasColumnName("IGR_CID");

                entity.Property(e => e.IgrComp)
                    .HasColumnName("IGR_COMP")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.IgrDes)
                    .HasColumnName("IGR_DES")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.IgrEnd)
                    .HasColumnName("IGR_END")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IgrNum)
                    .HasColumnName("IGR_NUM")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IgrTip).HasColumnName("IGR_TIP");

                entity.Property(e => e.IgrUfe)
                    .HasColumnName("IGR_UFE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsInventarioMaterial>(entity =>
            {
                entity.HasKey(e => new { e.IvtmatId, e.AssId })
                    .HasName("PK_GS_INVENTARIO_MATERIAIS");

                entity.ToTable("GS_INVENTARIO_MATERIAL");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.IvtmatDatini)
                    .HasName("Idx_IVTMAT_DATINI");

                entity.HasIndex(e => e.IvtmatNum)
                    .HasName("Idx_IVTMAT_NUM");

                entity.Property(e => e.IvtmatId).HasColumnName("IVTMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.IvtmatDatfim)
                    .HasColumnName("IVTMAT_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.IvtmatDatini)
                    .HasColumnName("IVTMAT_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.IvtmatNum).HasColumnName("IVTMAT_NUM");

                entity.Property(e => e.IvtmatSit).HasColumnName("IVTMAT_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsInventarioMaterialItens>(entity =>
            {
                entity.HasKey(e => new { e.IvtmatiteId, e.AssId });

                entity.ToTable("GS_INVENTARIO_MATERIAL_ITENS");

                entity.HasIndex(e => e.IvtmatId)
                    .HasName("Idx_IVTMAT_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.Property(e => e.IvtmatiteId).HasColumnName("IVTMATITE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.IvtmatId).HasColumnName("IVTMAT_ID");

                entity.Property(e => e.IvtmatiteQtdatu).HasColumnName("IVTMATITE_QTDATU");

                entity.Property(e => e.IvtmatiteQtdivt).HasColumnName("IVTMATITE_QTDIVT");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsKitEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.CpskiteqtId, e.AssId })
                    .HasName("PK_GS_COMPOSICAO_EQUIPAMENTOS");

                entity.ToTable("GS_KIT_EQUIPAMENTOS");

                entity.HasIndex(e => e.CpskiteqtEptaprid)
                    .HasName("Idx_CPSKITEQT_EPTAPRID");

                entity.HasIndex(e => e.EptaprId)
                    .HasName("Idx_EPTAPR_ID");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.Property(e => e.CpskiteqtId).HasColumnName("CPSKITEQT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CpskiteqtEptaprid).HasColumnName("CPSKITEQT_EPTAPRID");

                entity.Property(e => e.CpskiteqtQtd).HasColumnName("CPSKITEQT_QTD");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsKitMateriais>(entity =>
            {
                entity.HasKey(e => new { e.CpskitmatId, e.AssId });

                entity.ToTable("GS_KIT_MATERIAIS");

                entity.HasIndex(e => e.EptaprId)
                    .HasName("Idx_EPTAPR_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.Property(e => e.CpskitmatId).HasColumnName("CPSKITMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CpskitmatQtd).HasColumnName("CPSKITMAT_QTD");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsKitServicos>(entity =>
            {
                entity.HasKey(e => new { e.CpskitservId, e.AssId });

                entity.ToTable("GS_KIT_SERVICOS");

                entity.HasIndex(e => e.EptaprId)
                    .HasName("Idx_EPTAPR_ID");

                entity.HasIndex(e => e.ServId)
                    .HasName("Idx_SERV_ID");

                entity.Property(e => e.CpskitservId).HasColumnName("CPSKITSERV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CpskitservQtde).HasColumnName("CPSKITSERV_QTDE");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsLancamentosFolha>(entity =>
            {
                entity.HasKey(e => new { e.TablanId, e.AssId });

                entity.ToTable("GS_LANCAMENTOS_FOLHA");

                entity.Property(e => e.TablanId).HasColumnName("TABLAN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TablanDes)
                    .HasColumnName("TABLAN_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TablanTipo).HasColumnName("TABLAN_TIPO");
            });

            modelBuilder.Entity<GsLegenda>(entity =>
            {
                entity.HasKey(e => e.LegId);

                entity.ToTable("GS_LEGENDA");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.Property(e => e.LegId)
                    .HasColumnName("LEG_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.LegCodigo)
                    .HasColumnName("LEG_CODIGO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.LegCor)
                    .HasColumnName("LEG_COR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LegDescricao)
                    .HasColumnName("LEG_DESCRICAO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LegTipo).HasColumnName("LEG_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsLicencaAcesso>(entity =>
            {
                entity.HasKey(e => e.LicaceId);

                entity.ToTable("GS_LICENCA_ACESSO");

                entity.Property(e => e.LicaceId)
                    .HasColumnName("LICACE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CtrId).HasColumnName("CTR_ID");

                entity.Property(e => e.LicaceCod)
                    .HasColumnName("LICACE_COD")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LicaceComputername)
                    .HasColumnName("LICACE_COMPUTERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicaceCpuname)
                    .HasColumnName("LICACE_CPUNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicaceOs)
                    .HasColumnName("LICACE_OS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicaceOsid)
                    .HasColumnName("LICACE_OSID")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.LicaceSit).HasColumnName("LICACE_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsLog>(entity =>
            {
                entity.HasKey(e => new { e.LogId, e.AssId });

                entity.ToTable("GS_LOG");

                entity.HasIndex(e => e.LogForm)
                    .HasName("Idx_LOG_FORM");

                entity.HasIndex(e => e.LogMsg)
                    .HasName("Idx_LOG_MSG");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.HasIndex(e => e.UserId)
                    .HasName("Idx_USER_ID");

                entity.Property(e => e.LogId).HasColumnName("LOG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.LicregId).HasColumnName("LICREG_ID");

                entity.Property(e => e.LogForm)
                    .HasColumnName("LOG_FORM")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LogMacadress)
                    .HasColumnName("LOG_MACADRESS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LogMsg)
                    .HasColumnName("LOG_MSG")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsLogAcesso>(entity =>
            {
                entity.ToTable("GS_LOG_ACESSO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.LogAtivo).HasColumnName("LOG_ATIVO");

                entity.Property(e => e.LogHost)
                    .HasColumnName("LOG_HOST")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LogIdConexao).HasColumnName("LOG_ID_CONEXAO");

                entity.Property(e => e.LogIp)
                    .HasColumnName("LOG_IP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LogMacadress)
                    .HasColumnName("LOG_MACADRESS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LogVersao)
                    .HasColumnName("LOG_VERSAO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UsuarioId).HasColumnName("USUARIO_ID");
            });

            modelBuilder.Entity<GsLogEmail>(entity =>
            {
                entity.ToTable("GS_LOG_EMAIL");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.LigregId).HasColumnName("LIGREG_ID");

                entity.Property(e => e.LogAssunto)
                    .HasColumnName("LOG_ASSUNTO")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LogCc)
                    .HasColumnName("LOG_CC")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LogCorpo)
                    .HasColumnName("LOG_CORPO")
                    .IsUnicode(false);

                entity.Property(e => e.LogDe)
                    .HasColumnName("LOG_DE")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.LogMacadress)
                    .HasColumnName("LOG_MACADRESS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LogPara)
                    .HasColumnName("LOG_PARA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsLogEmpresa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_LOG_EMPRESA");

                entity.Property(e => e.Acao)
                    .HasColumnName("ACAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Data)
                    .HasColumnName("DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Empresa)
                    .HasColumnName("EMPRESA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsLogPolitica>(entity =>
            {
                entity.ToTable("GS_LOG_POLITICA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Cpu)
                    .HasColumnName("CPU")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Data)
                    .HasColumnName("DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Ip)
                    .HasColumnName("IP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Licenca)
                    .HasColumnName("LICENCA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Mac)
                    .HasColumnName("MAC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsuId).HasColumnName("USU_ID");

                entity.Property(e => e.Usuario)
                    .HasColumnName("USUARIO")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsManutencaoEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.ManequipId, e.EptId, e.AssId });

                entity.ToTable("GS_MANUTENCAO_EQUIPAMENTOS");

                entity.Property(e => e.ManequipId).HasColumnName("MANEQUIP_ID");

                entity.Property(e => e.EptId).HasColumnName("EPT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.ManequipDesdef)
                    .HasColumnName("MANEQUIP_DESDEF")
                    .HasColumnType("text");

                entity.Property(e => e.ManequipPed).HasColumnName("MANEQUIP_PED");

                entity.Property(e => e.ManequipSit).HasColumnName("MANEQUIP_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsManutencaoHistorico>(entity =>
            {
                entity.ToTable("GS_MANUTENCAO_HISTORICO");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnoReajuste).HasColumnName("ANO_REAJUSTE");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CttNum).HasColumnName("CTT_NUM");

                entity.Property(e => e.DataContribuicao)
                    .HasColumnName("DATA_CONTRIBUICAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataReajuste)
                    .HasColumnName("DATA_REAJUSTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EspacoContratado).HasColumnName("ESPACO_CONTRATADO");

                entity.Property(e => e.Indice).HasColumnName("INDICE");

                entity.Property(e => e.MesReajuste)
                    .HasColumnName("MES_REAJUSTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Reajuste)
                    .HasColumnName("REAJUSTE")
                    .HasColumnType("money");

                entity.Property(e => e.Referencia)
                    .HasColumnName("REFERENCIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.Valor)
                    .HasColumnName("VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.ValorDesconto)
                    .HasColumnName("VALOR_DESCONTO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorLiberado1)
                    .HasColumnName("VALOR_LIBERADO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorManutencao)
                    .HasColumnName("VALOR_MANUTENCAO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorTotal)
                    .HasColumnName("VALOR_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.Valorliberado)
                    .HasColumnName("VALORLIBERADO")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsManutencaoHistoricoReajuste>(entity =>
            {
                entity.ToTable("GS_MANUTENCAO_HISTORICO_REAJUSTE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AnoReajuste).HasColumnName("ANO_REAJUSTE");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Checkado).HasColumnName("CHECKADO");

                entity.Property(e => e.ContaId).HasColumnName("CONTA_ID");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.CttNum).HasColumnName("CTT_NUM");

                entity.Property(e => e.DataContribuicao)
                    .HasColumnName("DATA_CONTRIBUICAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataReajuste)
                    .HasColumnName("DATA_REAJUSTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EspacoContratado).HasColumnName("ESPACO_CONTRATADO");

                entity.Property(e => e.GeradoFinanceiro).HasColumnName("GERADO_FINANCEIRO");

                entity.Property(e => e.GrupoId).HasColumnName("GRUPO_ID");

                entity.Property(e => e.Indice).HasColumnName("INDICE");

                entity.Property(e => e.MesReajuste)
                    .HasColumnName("MES_REAJUSTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Obs)
                    .HasColumnName("OBS")
                    .HasColumnType("text");

                entity.Property(e => e.Reajuste)
                    .HasColumnName("REAJUSTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Referencia)
                    .HasColumnName("REFERENCIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SubcontaId).HasColumnName("SUBCONTA_ID");

                entity.Property(e => e.SubgrupoId).HasColumnName("SUBGRUPO_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.Valor)
                    .HasColumnName("VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.ValorDesconto)
                    .HasColumnName("VALOR_DESCONTO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorLiberado)
                    .HasColumnName("VALOR_LIBERADO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorManutencao)
                    .HasColumnName("VALOR_MANUTENCAO")
                    .HasColumnType("money");

                entity.Property(e => e.ValorTotal)
                    .HasColumnName("VALOR_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.Valorliberado1)
                    .HasColumnName("VALORLIBERADO")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsMateriais>(entity =>
            {
                entity.HasKey(e => new { e.MatId, e.AssId });

                entity.ToTable("GS_MATERIAIS");

                entity.HasIndex(e => e.AmxId)
                    .HasName("Idx_AMX_ID");

                entity.HasIndex(e => e.GrpmatId)
                    .HasName("Idx_GRPMAT_ID");

                entity.HasIndex(e => e.MatfabId)
                    .HasName("Idx_MATFAB_ID");

                entity.HasIndex(e => e.TabncmId)
                    .HasName("Idx_TABNCM_ID");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AmxId).HasColumnName("AMX_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.CobraMaterial).HasColumnName("COBRA_MATERIAL");

                entity.Property(e => e.GrpmatId).HasColumnName("GRPMAT_ID");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.MatCod).HasColumnName("MAT_COD");

                entity.Property(e => e.MatCodbar)
                    .HasColumnName("MAT_CODBAR")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MatDensidade).HasColumnName("MAT_DENSIDADE");

                entity.Property(e => e.MatDes)
                    .HasColumnName("MAT_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MatImg)
                    .HasColumnName("MAT_IMG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MatListapreco).HasColumnName("MAT_LISTAPRECO");

                entity.Property(e => e.MatObs)
                    .HasColumnName("MAT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.MatPeso).HasColumnName("MAT_PESO");

                entity.Property(e => e.MatPrazorecebimento).HasColumnName("MAT_PRAZORECEBIMENTO");

                entity.Property(e => e.MatPrecovenda)
                    .HasColumnName("MAT_PRECOVENDA")
                    .HasColumnType("money");

                entity.Property(e => e.MatQtdestatu).HasColumnName("MAT_QTDESTATU");

                entity.Property(e => e.MatQtdestdisp).HasColumnName("MAT_QTDESTDISP");

                entity.Property(e => e.MatQtdestmin).HasColumnName("MAT_QTDESTMIN");

                entity.Property(e => e.MatQtdestres).HasColumnName("MAT_QTDESTRES");

                entity.Property(e => e.MatReferencia)
                    .HasColumnName("MAT_REFERENCIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MatTotalcompra)
                    .HasColumnName("MAT_TOTALCOMPRA")
                    .HasColumnType("money");

                entity.Property(e => e.MatUltdatacompra)
                    .HasColumnName("MAT_ULTDATACOMPRA")
                    .HasColumnType("datetime");

                entity.Property(e => e.MatUltdatavenda)
                    .HasColumnName("MAT_ULTDATAVENDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.MatUltprecocompra)
                    .HasColumnName("MAT_ULTPRECOCOMPRA")
                    .HasColumnType("money");

                entity.Property(e => e.MatVolume).HasColumnName("MAT_VOLUME");

                entity.Property(e => e.MatfabId).HasColumnName("MATFAB_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabncmId).HasColumnName("TABNCM_ID");

                entity.Property(e => e.UnidId).HasColumnName("UNID_ID");
            });

            modelBuilder.Entity<GsMateriaisFabricantes>(entity =>
            {
                entity.HasKey(e => new { e.MatfabId, e.AssId });

                entity.ToTable("GS_MATERIAIS_FABRICANTES");

                entity.Property(e => e.MatfabId).HasColumnName("MATFAB_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.MatfabDes)
                    .HasColumnName("MATFAB_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsMensagem>(entity =>
            {
                entity.HasKey(e => e.MsgId);

                entity.ToTable("GS_MENSAGEM");

                entity.Property(e => e.MsgId)
                    .HasColumnName("MSG_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.MsgData)
                    .HasColumnName("MSG_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.MsgTexto)
                    .HasColumnName("MSG_TEXTO")
                    .HasColumnType("text");
            });

            modelBuilder.Entity<GsMensagensRecado>(entity =>
            {
                entity.HasKey(e => new { e.MsgrecId, e.AssId });

                entity.ToTable("GS_MENSAGENS_RECADO");

                entity.Property(e => e.MsgrecId).HasColumnName("MSGREC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.MsgrecAssidRem).HasColumnName("MSGREC_ASSID_REM");

                entity.Property(e => e.MsgrecAssunto)
                    .HasColumnName("MSGREC_ASSUNTO")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.MsgrecDatlei)
                    .HasColumnName("MSGREC_DATLEI")
                    .HasColumnType("datetime");

                entity.Property(e => e.MsgrecMsg)
                    .HasColumnName("MSGREC_MSG")
                    .HasColumnType("text");

                entity.Property(e => e.MsgrecStatus).HasColumnName("MSGREC_STATUS");

                entity.Property(e => e.MsgrecUseridDes).HasColumnName("MSGREC_USERID_DES");

                entity.Property(e => e.MsgrecUseridRem).HasColumnName("MSGREC_USERID_REM");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsMobiliario>(entity =>
            {
                entity.HasKey(e => new { e.MobId, e.AssId })
                    .HasName("PK_GS_MOBILIZADO");

                entity.ToTable("GS_MOBILIARIO");

                entity.HasIndex(e => e.AssempsetId)
                    .HasName("Idx_ASSEMPSET_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.GrpmobId)
                    .HasName("Idx_GRPMOB_ID");

                entity.HasIndex(e => e.MobDatacompra)
                    .HasName("Idx_MOB_DATACOMPRA");

                entity.HasIndex(e => e.MobDatbaixa)
                    .HasName("Idx_MOB_DATBAIXA");

                entity.HasIndex(e => e.MobDes)
                    .HasName("Idx_MOB_DES");

                entity.HasIndex(e => e.MobPatrimonio)
                    .HasName("Idx_MOB_PATRIMONIO");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.MobId).HasColumnName("MOB_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.GrpmobId).HasColumnName("GRPMOB_ID");

                entity.Property(e => e.MobDatacompra)
                    .HasColumnName("MOB_DATACOMPRA")
                    .HasColumnType("datetime");

                entity.Property(e => e.MobDatbaixa)
                    .HasColumnName("MOB_DATBAIXA")
                    .HasColumnType("datetime");

                entity.Property(e => e.MobDes)
                    .HasColumnName("MOB_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobEsptec)
                    .HasColumnName("MOB_ESPTEC")
                    .HasColumnType("text");

                entity.Property(e => e.MobMesdep).HasColumnName("MOB_MESDEP");

                entity.Property(e => e.MobMotbaixa)
                    .HasColumnName("MOB_MOTBAIXA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MobNome)
                    .HasColumnName("MOB_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MobOpe).HasColumnName("MOB_OPE");

                entity.Property(e => e.MobPatrimonio)
                    .HasColumnName("MOB_PATRIMONIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MobSerie)
                    .HasColumnName("MOB_SERIE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MobSit).HasColumnName("MOB_SIT");

                entity.Property(e => e.MobValorcompra)
                    .HasColumnName("MOB_VALORCOMPRA")
                    .HasColumnType("money");

                entity.Property(e => e.MobsubId).HasColumnName("MOBSUB_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsMobiliarioGrupos>(entity =>
            {
                entity.HasKey(e => new { e.GrpmobId, e.AssId })
                    .HasName("PK_GS_MOBILIZADO_GRUPO");

                entity.ToTable("GS_MOBILIARIO_GRUPOS");

                entity.Property(e => e.GrpmobId).HasColumnName("GRPMOB_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.GrpmobNome)
                    .HasColumnName("GRPMOB_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsMovimentacaoBancaria>(entity =>
            {
                entity.HasKey(e => new { e.MovbanId, e.AssId });

                entity.ToTable("GS_MOVIMENTACAO_BANCARIA");

                entity.HasIndex(e => e.BorpagchqId)
                    .HasName("Idx_BORPAGCHQ_ID");

                entity.HasIndex(e => e.BorrecchqId)
                    .HasName("Idx_BORRECCHQ_ID");

                entity.HasIndex(e => e.CattitId)
                    .HasName("Idx_CATTIT_ID");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.HasIndex(e => e.CppId)
                    .HasName("Idx_CPP_ID");

                entity.HasIndex(e => e.CrpId)
                    .HasName("Idx_CRP_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.MovbanData)
                    .HasName("Idx_MOVBAN_DATA");

                entity.HasIndex(e => e.SubcattitId)
                    .HasName("Idx_SUBCATTIT_ID");

                entity.Property(e => e.MovbanId).HasColumnName("MOVBAN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorpagchqId).HasColumnName("BORPAGCHQ_ID");

                entity.Property(e => e.BorrecchqId).HasColumnName("BORRECCHQ_ID");

                entity.Property(e => e.CattitId).HasColumnName("CATTIT_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.CpbId).HasColumnName("CPB_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.CrbId).HasColumnName("CRB_ID");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.MovbanAdiant).HasColumnName("MOVBAN_ADIANT");

                entity.Property(e => e.MovbanCb).HasColumnName("MOVBAN_CB");

                entity.Property(e => e.MovbanCbdata)
                    .HasColumnName("MOVBAN_CBDATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.MovbanCbdes)
                    .HasColumnName("MOVBAN_CBDES")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.MovbanCbdoc)
                    .HasColumnName("MOVBAN_CBDOC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MovbanData)
                    .HasColumnName("MOVBAN_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.MovbanDes)
                    .HasColumnName("MOVBAN_DES")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MovbanDoc)
                    .HasColumnName("MOVBAN_DOC")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MovbanObs)
                    .HasColumnName("MOVBAN_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.MovbanOpe).HasColumnName("MOVBAN_OPE");

                entity.Property(e => e.MovbanPrestcon).HasColumnName("MOVBAN_PRESTCON");

                entity.Property(e => e.MovbanSaldo)
                    .HasColumnName("MOVBAN_SALDO")
                    .HasColumnType("money");

                entity.Property(e => e.MovbanTipo).HasColumnName("MOVBAN_TIPO");

                entity.Property(e => e.MovbanValor)
                    .HasColumnName("MOVBAN_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SubcattitId).HasColumnName("SUBCATTIT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsMovimentacaoCaixa>(entity =>
            {
                entity.HasKey(e => new { e.MovcaiId, e.AssId });

                entity.ToTable("GS_MOVIMENTACAO_CAIXA");

                entity.Property(e => e.MovcaiId).HasColumnName("MOVCAI_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.MovcaiData)
                    .HasColumnName("MOVCAI_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.MovcaiHist)
                    .HasColumnName("MOVCAI_HIST")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MovcaiSit).HasColumnName("MOVCAI_SIT");

                entity.Property(e => e.MovcaiValor)
                    .HasColumnName("MOVCAI_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsMovimentacaoEstoque>(entity =>
            {
                entity.HasKey(e => new { e.MovestId, e.AssId });

                entity.ToTable("GS_MOVIMENTACAO_ESTOQUE");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.MovestDat)
                    .HasName("Idx_MOVEST_DAT");

                entity.HasIndex(e => e.MovestDatcan)
                    .HasName("Idx_MOVEST_DATCAN");

                entity.HasIndex(e => e.MovestNumped)
                    .HasName("Idx_MOVEST_NUMPED");

                entity.HasIndex(e => e.MovestSit)
                    .HasName("Idx_MOVEST_SIT");

                entity.HasIndex(e => e.MovestUsecan)
                    .HasName("Idx_MOVEST_USECAN");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.MovestId).HasColumnName("MOVEST_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.MovestDat)
                    .HasColumnName("MOVEST_DAT")
                    .HasColumnType("datetime");

                entity.Property(e => e.MovestDatcan)
                    .HasColumnName("MOVEST_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.MovestItens).HasColumnName("MOVEST_ITENS");

                entity.Property(e => e.MovestMot)
                    .HasColumnName("MOVEST_MOT")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.MovestMotcan)
                    .HasColumnName("MOVEST_MOTCAN")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.MovestNumped).HasColumnName("MOVEST_NUMPED");

                entity.Property(e => e.MovestQtd).HasColumnName("MOVEST_QTD");

                entity.Property(e => e.MovestSit).HasColumnName("MOVEST_SIT");

                entity.Property(e => e.MovestTipmov).HasColumnName("MOVEST_TIPMOV");

                entity.Property(e => e.MovestUsecan).HasColumnName("MOVEST_USECAN");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsMovimentacaoEstoqueItens>(entity =>
            {
                entity.HasKey(e => new { e.MovestiteId, e.MovestId });

                entity.ToTable("GS_MOVIMENTACAO_ESTOQUE_ITENS");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.HasIndex(e => e.MovestId)
                    .HasName("Idx_MOVEST_ID");

                entity.HasIndex(e => e.MovestiteMatdestId)
                    .HasName("Idx_MOVESTITE_MATDEST_ID");

                entity.Property(e => e.MovestiteId).HasColumnName("MOVESTITE_ID");

                entity.Property(e => e.MovestId).HasColumnName("MOVEST_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.MovestiteDatdev)
                    .HasColumnName("MOVESTITE_DATDEV")
                    .HasColumnType("datetime");

                entity.Property(e => e.MovestiteDatret)
                    .HasColumnName("MOVESTITE_DATRET")
                    .HasColumnType("datetime");

                entity.Property(e => e.MovestiteInfdev)
                    .HasColumnName("MOVESTITE_INFDEV")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.MovestiteMatdestId).HasColumnName("MOVESTITE_MATDEST_ID");

                entity.Property(e => e.MovestiteQtd).HasColumnName("MOVESTITE_QTD");

                entity.Property(e => e.MovestiteQtddev).HasColumnName("MOVESTITE_QTDDEV");

                entity.Property(e => e.MovestiteQtdret).HasColumnName("MOVESTITE_QTDRET");

                entity.Property(e => e.MovestiteSit).HasColumnName("MOVESTITE_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsMusicas04022016142358>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016142358");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016143046>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016143046");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016143419>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016143419");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016143459>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016143459");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016144018>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016144018");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016144219>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016144219");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016144528>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016144528");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016144610>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016144610");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016144631>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016144631");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016145035>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016145035");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016145107>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016145107");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016145841>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016145841");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016145901>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016145901");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04022016145932>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04022016145932");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04032015162234>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04032015162234");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04082015150159>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04082015150159");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04082015162537>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04082015162537");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04112014145515>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04112014145515");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas04122015165536>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_04122015165536");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05012016115732>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05012016115732");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05012016115735>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05012016115735");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05022015191124>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05022015191124");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05022016125817>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05022016125817");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05022016135318>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05022016135318");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05022016135321>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05022016135321");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05022016152356>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05022016152356");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05022016152616>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05022016152616");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05052015172334>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05052015172334");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05082015162029>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05082015162029");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05082015162034>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05082015162034");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05112014141708>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05112014141708");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05112015102746>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05112015102746");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05112015102756>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05112015102756");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05112015111615>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05112015111615");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas05112015111617>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_05112015111617");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas06012016163147>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_06012016163147");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas06042015152420>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_06042015152420");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas06072015120348>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_06072015120348");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas06102015123035>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_06102015123035");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07082015144612>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07082015144612");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07102015142836>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07102015142836");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07102015144056>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07102015144056");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07102015164452>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07102015164452");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07102015164600>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07102015164600");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07102015164749>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07102015164749");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07102015173015>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07102015173015");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07122015105620>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07122015105620");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas07122015105641>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_07122015105641");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08042015180634>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08042015180634");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08052015152323>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08052015152323");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08052015174521>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08052015174521");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08072015150439>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08072015150439");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015092556>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015092556");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015092640>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015092640");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015092751>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015092751");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015105631>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015105631");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015105841>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015105841");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015111326>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015111326");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015115548>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015115548");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015143745>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015143745");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015143917>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015143917");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas08102015144032>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_08102015144032");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas09022015150414>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_09022015150414");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas09022015164202>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_09022015164202");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas09062015154032>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_09062015154032");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas09112015141051>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_09112015141051");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10062015022130>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10062015022130");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10112015101035>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10112015101035");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10112015125554>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10112015125554");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10122015165456>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10122015165456");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10122015165531>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10122015165531");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10122015165544>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10122015165544");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10142015102047am>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10142015102047AM");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10142015104530am>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10142015104530AM");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10142015110324am>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10142015110324AM");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas10142015123026pm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_10142015123026PM");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas1014201542345pm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_1014201542345PM");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas1015201585749am>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_1015201585749AM");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas1020201541022pm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_1020201541022PM");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016104100>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016104100");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016104150>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016104150");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016104238>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016104238");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016104306>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016104306");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016104603>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016104603");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016105223>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016105223");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016105237>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016105237");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016105255>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016105255");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016105316>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016105316");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11012016105340>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11012016105340");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11022016103003>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11022016103003");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11022016103822>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11022016103822");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11022016103918>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11022016103918");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11022016103959>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11022016103959");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11092015124411>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11092015124411");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11092015124742>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11092015124742");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11112014113754>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11112014113754");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas11122015162600>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_11122015162600");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12012016163046>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12012016163046");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12012016165037>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12012016165037");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12012016165551>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12012016165551");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12022016112200>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12022016112200");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12022016112217>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12022016112217");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12022016114833>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12022016114833");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12022016122438>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12022016122438");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12022016122608>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12022016122608");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12022016122706>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12022016122706");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12022016135002>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12022016135002");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12022016160609>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12022016160609");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015112015>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015112015");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015112118>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015112118");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015135143>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015135143");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015140313>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015140313");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015142634>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015142634");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015144419>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015144419");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015145101>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015145101");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015145145>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015145145");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015145225>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015145225");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015145427>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015145427");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015150237>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015150237");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas12112015151030>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_12112015151030");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012015173913>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012015173913");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016101407>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016101407");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016101717>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016101717");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016101733>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016101733");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016113706>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016113706");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016113821>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016113821");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016114522>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016114522");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016114600>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016114600");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016115459>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016115459");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016115916>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016115916");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016120020>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016120020");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016121954>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016121954");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016124147>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016124147");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016124506>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016124506");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016124803>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016124803");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016124818>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016124818");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016130332>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016130332");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016141451>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016141451");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016141459>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016141459");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016150229>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016150229");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016150518>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016150518");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016150534>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016150534");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016150814>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016150814");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13012016151542>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13012016151542");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13022015105652>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13022015105652");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13022015153343>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13022015153343");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13052015093007>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13052015093007");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015094723>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015094723");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015143929>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015143929");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015144608>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015144608");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015151700>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015151700");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015151941>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015151941");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015152903>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015152903");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015162440>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015162440");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015162833>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015162833");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015162908>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015162908");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015165701>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015165701");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015170127>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015170127");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015171130>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015171130");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas13102015171819>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_13102015171819");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas1312015173910>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_1312015173910");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14012016090742>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14012016090742");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14012016090830>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14012016090830");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14012016110617>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14012016110617");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14012016110718>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14012016110718");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14082015175911>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14082015175911");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14102015100126>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14102015100126");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14122015161014>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14122015161014");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14122015161039>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14122015161039");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas14122015161515>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_14122015161515");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15012015182228>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15012015182228");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15092015164231>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15092015164231");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15092015165121>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15092015165121");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15092015170343>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15092015170343");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15102015125727>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15102015125727");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15122015111552>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15122015111552");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15122015111558>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15122015111558");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15122015142239>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15122015142239");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas15122015204122>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_15122015204122");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016094719>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016094719");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016094855>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016094855");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016094949>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016094949");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016095032>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016095032");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016095105>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016095105");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016095129>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016095129");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016095246>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016095246");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016095401>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016095401");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16022016163721>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16022016163721");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16042015172943>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16042015172943");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16092015111100>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16092015111100");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16092015111101>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16092015111101");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16092015111816>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16092015111816");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16092015125443>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16092015125443");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16092015132503>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16092015132503");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16112015142528>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16112015142528");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16122015132453>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16122015132453");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16122015132628>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16122015132628");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas16122015144153>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_16122015144153");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17022016120224>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17022016120224");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17022016142808>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17022016142808");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17022016143643>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17022016143643");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17022016155850>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17022016155850");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17022016163038>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17022016163038");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17032015175515>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17032015175515");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17082015103841>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17082015103841");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17082015103847>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17082015103847");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17082015103929>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17082015103929");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17082015105225>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17082015105225");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17112015160059>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17112015160059");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17112015160337>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17112015160337");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17112015175029>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17112015175029");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17112015175300>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17112015175300");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015120859>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015120859");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015121400>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015121400");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015121408>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015121408");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015121415>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015121415");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015121526>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015121526");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015121617>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015121617");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015121630>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015121630");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015121702>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015121702");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015123658>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015123658");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015123720>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015123720");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015123955>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015123955");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015124056>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015124056");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015131541>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015131541");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015171626>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015171626");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas17122015171827>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_17122015171827");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18012016100103>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18012016100103");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18012016145434>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18012016145434");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18012016145550>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18012016145550");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18012016150026>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18012016150026");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18022016102934>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18022016102934");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18022016103818>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18022016103818");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18022016103925>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18022016103925");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18022016104601>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18022016104601");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18022016173259>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18022016173259");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18022016173334>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18022016173334");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18022016173400>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18022016173400");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18022016173415>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18022016173415");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18112015100230>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18112015100230");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18112015100454>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18112015100454");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18112015100518>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18112015100518");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18122015164622>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18122015164622");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18122015164747>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18122015164747");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18122015164811>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18122015164811");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18122015173705>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18122015173705");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas18122015180552>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_18122015180552");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19022015153858>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19022015153858");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19022016144450>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19022016144450");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19022016144518>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19022016144518");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19022016145322>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19022016145322");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19022016145718>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19022016145718");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19022016151707>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19022016151707");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19022016151913>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19022016151913");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19052015100640>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19052015100640");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19082015161637>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19082015161637");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19082015161639>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19082015161639");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19112015155735>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19112015155735");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19112015162212>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19112015162212");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas19112015162426>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_19112015162426");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas1952015100650>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_1952015100650");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas1952015100930>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_1952015100930");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20032015160155>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20032015160155");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20072015153939>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20072015153939");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20082015130342>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20082015130342");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20082015143653>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20082015143653");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20082015155538>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20082015155538");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20082015155546>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20082015155546");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20082015155609>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20082015155609");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20082015164632>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20082015164632");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas20102015141653>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_20102015141653");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas2072015110154>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_2072015110154");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas2152015170119>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_2152015170119");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas22012016100156>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_22012016100156");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas22012016110513>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_22012016110513");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas22012016110515>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_22012016110515");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas22042015170020>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_22042015170020");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas22102015172615>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_22102015172615");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas22102015172804>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_22102015172804");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas22102015174320>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_22102015174320");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas2242015170019>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_2242015170019");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23022016113840>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23022016113840");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23022016113940>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23022016113940");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23022016113952>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23022016113952");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23022016114005>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23022016114005");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23022016165702>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23022016165702");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23022016165705>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23022016165705");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23042015172309>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23042015172309");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23112015112435>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23112015112435");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23112015114611>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23112015114611");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23112015115719>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23112015115719");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23112015131522>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23112015131522");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23112015133300>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23112015133300");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas23112015165001>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_23112015165001");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas2312015154538>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_2312015154538");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas2312015154544>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_2312015154544");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas24022016095141>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_24022016095141");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas24022016095412>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_24022016095412");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas24032015162511>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_24032015162511");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas24112015121747>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_24112015121747");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas24112015181026>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_24112015181026");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas24112015181055>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_24112015181055");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25012016164644>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25012016164644");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25012016170126>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25012016170126");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015113716>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015113716");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015113739>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015113739");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015113944>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015113944");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015114242>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015114242");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015114504>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015114504");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015114804>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015114804");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015131838>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015131838");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015131856>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015131856");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015141716>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015141716");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015142040>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015142040");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015142238>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015142238");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25092015142511>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25092015142511");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015094315>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015094315");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015153223>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015153223");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015153312>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015153312");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015153531>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015153531");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015154359>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015154359");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015154405>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015154405");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015154411>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015154411");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015154650>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015154650");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015154707>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015154707");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015154754>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015154754");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015154805>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015154805");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015154809>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015154809");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015155702>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015155702");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015161037>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015161037");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015161931>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015161931");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015162919>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015162919");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015164437>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015164437");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015173425>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015173425");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015195146>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015195146");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas25112015195355>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_25112015195355");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26012015164204>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26012015164204");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26012016160004>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26012016160004");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26022016095003>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26022016095003");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26022016095032>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26022016095032");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26022016115253>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26022016115253");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26022016115258>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26022016115258");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26102015165946>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26102015165946");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26112015113645>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26112015113645");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26112015113753>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26112015113753");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26112015114629>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26112015114629");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas26112015142550>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_26112015142550");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas2612015164201>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_2612015164201");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27102015173612>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27102015173612");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27102015173705>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27102015173705");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27112015094945>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27112015094945");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27112015110528>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27112015110528");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27112015110621>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27112015110621");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27112015113658>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27112015113658");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27112015113659>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27112015113659");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27112015144519>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27112015144519");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27112015144707>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27112015144707");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas27112015145045>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_27112015145045");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas28012016114714>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_28012016114714");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas28012016114844>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_28012016114844");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas28012016171733>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_28012016171733");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas28012016175119>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_28012016175119");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas28092015110855>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_28092015110855");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas28092015161707>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_28092015161707");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas28092015165823>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_28092015165823");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas29092015160428>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_29092015160428");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas29102015112554>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_29102015112554");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30092015094109>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30092015094109");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30092015100557>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30092015100557");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30092015100650>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30092015100650");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30092015111742>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30092015111742");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102014100444>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102014100444");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015110805>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015110805");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015110943>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015110943");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015111027>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015111027");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015111054>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015111054");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015111119>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015111119");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015111519>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015111519");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015111558>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015111558");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015111629>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015111629");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015115604>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015115604");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015115657>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015115657");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015115834>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015115834");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30102015120025>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30102015120025");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30112015105959>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30112015105959");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30112015110148>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30112015110148");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30112015111002>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30112015111002");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30112015143232>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30112015143232");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30112015144710>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30112015144710");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas30112015152501>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_30112015152501");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas552015172330>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_552015172330");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas672015115939>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_672015115939");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas672015121400>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_672015121400");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas672015122216>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_672015122216");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas672015123159>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_672015123159");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas842015180735>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_842015180735");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsMusicas852015152321>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_MUSICAS_852015152321");

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.MusId)
                    .HasColumnName("MUS_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.MusTip).HasColumnName("MUS_TIP");
            });

            modelBuilder.Entity<GsNfeCondicoesPagto>(entity =>
            {
                entity.HasKey(e => e.NfeconpagId);

                entity.ToTable("GS_NFE_CONDICOES_PAGTO");

                entity.Property(e => e.NfeconpagId).HasColumnName("NFECONPAG_ID");

                entity.Property(e => e.NfeconpagDescricao)
                    .IsRequired()
                    .HasColumnName("NFECONPAG_DESCRICAO")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NfeconpagTipoId).HasColumnName("NFECONPAG_TIPO_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfeErro>(entity =>
            {
                entity.HasKey(e => e.NfeerroId);

                entity.ToTable("GS_NFE_ERRO");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.NfeloteId)
                    .HasName("Idx_NFELOTE_ID");

                entity.Property(e => e.NfeerroId)
                    .HasColumnName("NFEERRO_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfeerroErro)
                    .HasColumnName("NFEERRO_ERRO")
                    .HasColumnType("text");

                entity.Property(e => e.NfeloteId).HasColumnName("NFELOTE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfeInutilizacao>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_NFE_INUTILIZACAO");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.NotserId)
                    .HasName("Idx_NOTSER_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.NfeinuId).HasColumnName("NFEINU_ID");

                entity.Property(e => e.NfeinuNfFinal).HasColumnName("NFEINU_NF_FINAL");

                entity.Property(e => e.NfeinuNfInicial).HasColumnName("NFEINU_NF_INICIAL");

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsNfeLote>(entity =>
            {
                entity.HasKey(e => e.NfeloteId);

                entity.ToTable("GS_NFE_LOTE");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.NotserId)
                    .HasName("Idx_NOTSER_ID");

                entity.Property(e => e.NfeloteId)
                    .HasColumnName("NFELOTE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.NfeloteAssincrono)
                    .HasColumnName("NFELOTE_ASSINCRONO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NfeloteDataenvio)
                    .HasColumnName("NFELOTE_DATAENVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfeloteNumero).HasColumnName("NFELOTE_NUMERO");

                entity.Property(e => e.NfeloteSituacao).HasColumnName("NFELOTE_SITUACAO");

                entity.Property(e => e.NfeloteSucesso)
                    .HasColumnName("NFELOTE_SUCESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfeXml>(entity =>
            {
                entity.HasKey(e => e.NfexmlId);

                entity.ToTable("GS_NFE_XML");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.NfeloteId)
                    .HasName("Idx_NFELOTE_ID");

                entity.Property(e => e.NfexmlId)
                    .HasColumnName("NFEXML_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfeloteId).HasColumnName("NFELOTE_ID");

                entity.Property(e => e.NfexmlTipo).HasColumnName("NFEXML_TIPO");

                entity.Property(e => e.NfexmlXml)
                    .HasColumnName("NFEXML_XML")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfseAtividade>(entity =>
            {
                entity.HasKey(e => new { e.NfseatId, e.AssId });

                entity.ToTable("GS_NFSE_ATIVIDADE");

                entity.Property(e => e.NfseatId).HasColumnName("NFSEAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfseatCodigo)
                    .HasColumnName("NFSEAT_CODIGO")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.NfseatDescricao)
                    .HasColumnName("NFSEAT_DESCRICAO")
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfseLote>(entity =>
            {
                entity.HasKey(e => new { e.NfseloteId, e.AssId });

                entity.ToTable("GS_NFSE_LOTE");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.NfseloteDataenvio)
                    .HasName("Idx_NFSELOTE_DATAENVIO");

                entity.HasIndex(e => e.NfseloteNumero)
                    .HasName("Idx_NFSELOTE_NUMERO");

                entity.Property(e => e.NfseloteId).HasColumnName("NFSELOTE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.NfseloteAssincrono)
                    .HasColumnName("NFSELOTE_ASSINCRONO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NfseloteDataenvio)
                    .HasColumnName("NFSELOTE_DATAENVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfseloteNumero).HasColumnName("NFSELOTE_NUMERO");

                entity.Property(e => e.NfseloteProtocolo).HasColumnName("NFSELOTE_PROTOCOLO");

                entity.Property(e => e.NfseloteSituacao).HasColumnName("NFSELOTE_SITUACAO");

                entity.Property(e => e.NfseloteSucesso)
                    .HasColumnName("NFSELOTE_SUCESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfseLoteAlerta>(entity =>
            {
                entity.HasKey(e => new { e.NfselotealertaId, e.AssId });

                entity.ToTable("GS_NFSE_LOTE_ALERTA");

                entity.HasIndex(e => e.NfseloteId)
                    .HasName("Idx_NFSELOTE_ID");

                entity.Property(e => e.NfselotealertaId).HasColumnName("NFSELOTEALERTA_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfseloteId).HasColumnName("NFSELOTE_ID");

                entity.Property(e => e.NfselotealertaCodigo).HasColumnName("NFSELOTEALERTA_CODIGO");

                entity.Property(e => e.NfselotealertaDescricao)
                    .HasColumnName("NFSELOTEALERTA_DESCRICAO")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfseLoteErro>(entity =>
            {
                entity.HasKey(e => new { e.NfseloteerroId, e.AssId });

                entity.ToTable("GS_NFSE_LOTE_ERRO");

                entity.HasIndex(e => e.NfNfseRps)
                    .HasName("Idx_NF_NFSE_RPS");

                entity.HasIndex(e => e.NfseloteId)
                    .HasName("Idx_NFSELOTE_ID");

                entity.Property(e => e.NfseloteerroId).HasColumnName("NFSELOTEERRO_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfNfseRps).HasColumnName("NF_NFSE_RPS");

                entity.Property(e => e.NfseloteId).HasColumnName("NFSELOTE_ID");

                entity.Property(e => e.NfseloteerroCodigo).HasColumnName("NFSELOTEERRO_CODIGO");

                entity.Property(e => e.NfseloteerroDescricao)
                    .HasColumnName("NFSELOTEERRO_DESCRICAO")
                    .HasColumnType("text");

                entity.Property(e => e.NfseloteerroProcedimento)
                    .HasColumnName("NFSELOTEERRO_PROCEDIMENTO")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfsePrefeituras>(entity =>
            {
                entity.HasKey(e => e.NfseprefId);

                entity.ToTable("GS_NFSE_PREFEITURAS");

                entity.Property(e => e.NfseprefId).HasColumnName("NFSEPREF_ID");

                entity.Property(e => e.NfseprefCod).HasColumnName("NFSEPREF_COD");

                entity.Property(e => e.NfseprefLote).HasColumnName("NFSEPREF_LOTE");

                entity.Property(e => e.NfseprefNome)
                    .IsRequired()
                    .HasColumnName("NFSEPREF_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NfseprefUf)
                    .IsRequired()
                    .HasColumnName("NFSEPREF_UF")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNfseXml>(entity =>
            {
                entity.HasKey(e => new { e.NfsexmlId, e.AssId });

                entity.ToTable("GS_NFSE_XML");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.NfsexmlId).HasColumnName("NFSEXML_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfsexmlTipo).HasColumnName("NFSEXML_TIPO");

                entity.Property(e => e.NfsexmlXml)
                    .HasColumnName("NFSEXML_XML")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNivelRelacao>(entity =>
            {
                entity.HasKey(e => new { e.NirelId, e.AssId })
                    .HasName("GS_NIVEL_RELACAO_PK");

                entity.ToTable("GS_NIVEL_RELACAO");

                entity.HasIndex(e => e.AssempsetId)
                    .HasName("Idx_ASSEMPSET_ID");

                entity.HasIndex(e => e.NirelAtivo)
                    .HasName("Idx_NIREL_ATIVO");

                entity.Property(e => e.NirelId)
                    .HasColumnName("NIREL_ID")
                    .HasComment("ID do Nivel de Relação ");

                entity.Property(e => e.AssId)
                    .HasColumnName("ASS_ID")
                    .HasComment("ID do Associado");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.FsiId)
                    .HasColumnName("FSI_ID")
                    .HasComment("ID da Fase de Implantação do Nivel de Relação");

                entity.Property(e => e.NirelAtivo)
                    .HasColumnName("NIREL_ATIVO")
                    .HasComment("Status da Situação do Nivel de Relação");

                entity.Property(e => e.NirelDes)
                    .HasColumnName("NIREL_DES")
                    .HasColumnType("text")
                    .HasComment("Descrição detalhada do Nivel de Relação");

                entity.Property(e => e.NirelEtapa)
                    .HasColumnName("NIREL_ETAPA")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasComment("Descrição Reduzida do Nivel de Relação");

                entity.Property(e => e.NirelOrc)
                    .HasColumnName("NIREL_ORC")
                    .HasComment("Flag de Obrigatoriedade de Numero de Orçamento do Nivel de Relação");

                entity.Property(e => e.NirelPosicao).HasColumnName("NIREL_POSICAO");

                entity.Property(e => e.StiId)
                    .HasColumnName("STI_ID")
                    .HasComment("ID do Setor de Implantação do Nivel de Relação");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime")
                    .HasComment("Data de Cadastro do Nivel de Relação");

                entity.Property(e => e.SysDel)
                    .HasColumnName("SYS_DEL")
                    .HasComment("Flag de Exclusão do Nivel de Relação");

                entity.HasOne(d => d.Fsi)
                    .WithMany(p => p.GsNivelRelacao)
                    .HasForeignKey(d => d.FsiId)
                    .HasConstraintName("FK_FSI_ID");

                entity.HasOne(d => d.Sti)
                    .WithMany(p => p.GsNivelRelacao)
                    .HasForeignKey(d => d.StiId)
                    .HasConstraintName("FK_STI_ID");
            });

            modelBuilder.Entity<GsNomeEvento>(entity =>
            {
                entity.HasKey(e => new { e.NomevtId, e.AssId });

                entity.ToTable("GS_NOME_EVENTO");

                entity.Property(e => e.NomevtId).HasColumnName("NOMEVT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.LocalEvento)
                    .HasColumnName("LOCAL_EVENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NomevtDes)
                    .HasColumnName("NOMEVT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PeriodoFin)
                    .HasColumnName("PERIODO_FIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.PeriodoIni)
                    .HasColumnName("PERIODO_INI")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UfeId).HasColumnName("UFE_ID");
            });

            modelBuilder.Entity<GsNotaFiscal>(entity =>
            {
                entity.HasKey(e => new { e.NfId, e.AssId });

                entity.ToTable("GS_NOTA_FISCAL");

                entity.HasIndex(e => e.CfopId)
                    .HasName("Idx_CFOP_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.CobnfeId)
                    .HasName("Idx_COBNFE_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.NfDatcan)
                    .HasName("Idx_NF_DATCAN");

                entity.HasIndex(e => e.NfDatemissao)
                    .HasName("Idx_NF_DATEMISSAO");

                entity.HasIndex(e => e.NfNfseLote)
                    .HasName("Idx_NF_NFSE_LOTE");

                entity.HasIndex(e => e.NfNfseRps)
                    .HasName("Idx_NF_NFSE_RPS");

                entity.HasIndex(e => e.NfNumnota)
                    .HasName("Idx_NF_NUMNOTA");

                entity.HasIndex(e => e.NfSit)
                    .HasName("Idx_NF_SIT");

                entity.HasIndex(e => e.NfVct1)
                    .HasName("Idx_NF_VCT1");

                entity.HasIndex(e => e.NfVct2)
                    .HasName("Idx_NF_VCT2");

                entity.HasIndex(e => e.NfeloteId)
                    .HasName("Idx_NFELOTE_ID");

                entity.HasIndex(e => e.NfseatId)
                    .HasName("Idx_NFSEAT_ID");

                entity.HasIndex(e => e.NotserId)
                    .HasName("Idx_NOTSER_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CfopId).HasColumnName("CFOP_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.Cnf).HasColumnName("CNF");

                entity.Property(e => e.CobnfeId).HasColumnName("COBNFE_ID");

                entity.Property(e => e.ConpagId).HasColumnName("CONPAG_ID");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.NfAliquotaCofins).HasColumnName("NF_ALIQUOTA_COFINS");

                entity.Property(e => e.NfAliquotaCsll).HasColumnName("NF_ALIQUOTA_CSLL");

                entity.Property(e => e.NfAliquotaInss).HasColumnName("NF_ALIQUOTA_INSS");

                entity.Property(e => e.NfAliquotaIr).HasColumnName("NF_ALIQUOTA_IR");

                entity.Property(e => e.NfAliquotaPis).HasColumnName("NF_ALIQUOTA_PIS");

                entity.Property(e => e.NfAuditoria)
                    .HasColumnName("NF_AUDITORIA")
                    .HasColumnType("image");

                entity.Property(e => e.NfBaseicms)
                    .HasColumnName("NF_BASEICMS")
                    .HasColumnType("money");

                entity.Property(e => e.NfBaseicmsst)
                    .HasColumnName("NF_BASEICMSST")
                    .HasColumnType("money");

                entity.Property(e => e.NfBaseiss)
                    .HasColumnName("NF_BASEISS")
                    .HasMaxLength(20)
                    .IsFixedLength();

                entity.Property(e => e.NfChavenfeFinalidadeEmissao)
                    .HasColumnName("NF_CHAVENFE_FINALIDADE_EMISSAO")
                    .HasMaxLength(44)
                    .IsUnicode(false);

                entity.Property(e => e.NfClatitId)
                    .HasColumnName("NF_CLATIT_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NfConsumidorFinal).HasColumnName("NF_CONSUMIDOR_FINAL");

                entity.Property(e => e.NfDatcan)
                    .HasColumnName("NF_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfDatemissao)
                    .HasColumnName("NF_DATEMISSAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfDatentrada)
                    .HasColumnName("NF_DATENTRADA")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfDatsaida)
                    .HasColumnName("NF_DATSAIDA")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfDestinoOperacao).HasColumnName("NF_DESTINO_OPERACAO");

                entity.Property(e => e.NfFinalidadeEmissao).HasColumnName("NF_FINALIDADE_EMISSAO");

                entity.Property(e => e.NfFlagvctsfatloc).HasColumnName("NF_FLAGVCTSFATLOC");

                entity.Property(e => e.NfFrete).HasColumnName("NF_FRETE");

                entity.Property(e => e.NfGravaenderecoentrega).HasColumnName("NF_GRAVAENDERECOENTREGA");

                entity.Property(e => e.NfImpprod).HasColumnName("NF_IMPPROD");

                entity.Property(e => e.NfInfoadici)
                    .HasColumnName("NF_INFOADICI")
                    .HasColumnType("text");

                entity.Property(e => e.NfLocalDespacho)
                    .HasColumnName("NF_LOCAL_DESPACHO")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.NfLocalEmbarque)
                    .HasColumnName("NF_LOCAL_EMBARQUE")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.NfLocalExportacao)
                    .HasColumnName("NF_LOCAL_EXPORTACAO")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.NfLocalentregaCodmunicipio).HasColumnName("NF_LOCALENTREGA_CODMUNICIPIO");

                entity.Property(e => e.NfNfeSituacao).HasColumnName("NF_NFE_SITUACAO");

                entity.Property(e => e.NfNfseCodigoVerificacao)
                    .HasColumnName("NF_NFSE_CODIGO_VERIFICACAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.NfNfseLote).HasColumnName("NF_NFSE_LOTE");

                entity.Property(e => e.NfNfseRps).HasColumnName("NF_NFSE_RPS");

                entity.Property(e => e.NfNfseSituacao).HasColumnName("NF_NFSE_SITUACAO");

                entity.Property(e => e.NfNumnota).HasColumnName("NF_NUMNOTA");

                entity.Property(e => e.NfObscanc)
                    .HasColumnName("NF_OBSCANC")
                    .HasColumnType("text");

                entity.Property(e => e.NfObsexterna)
                    .HasColumnName("NF_OBSEXTERNA")
                    .HasColumnType("text");

                entity.Property(e => e.NfObsinterna)
                    .HasColumnName("NF_OBSINTERNA")
                    .HasColumnType("text");

                entity.Property(e => e.NfOperacao).HasColumnName("NF_OPERACAO");

                entity.Property(e => e.NfPar1).HasColumnName("NF_PAR1");

                entity.Property(e => e.NfPar2).HasColumnName("NF_PAR2");

                entity.Property(e => e.NfPerciss).HasColumnName("NF_PERCISS");

                entity.Property(e => e.NfPericms).HasColumnName("NF_PERICMS");

                entity.Property(e => e.NfPericmsst).HasColumnName("NF_PERICMSST");

                entity.Property(e => e.NfProdcodigo)
                    .HasColumnName("NF_PRODCODIGO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NfProddescricao)
                    .HasColumnName("NF_PRODDESCRICAO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NfProdquantidade).HasColumnName("NF_PRODQUANTIDADE");

                entity.Property(e => e.NfProdvalorunitario)
                    .HasColumnName("NF_PRODVALORUNITARIO")
                    .HasColumnType("money");

                entity.Property(e => e.NfReleqt).HasColumnName("NF_RELEQT");

                entity.Property(e => e.NfSit).HasColumnName("NF_SIT");

                entity.Property(e => e.NfSubtotal)
                    .HasColumnName("NF_SUBTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.NfTextolivre)
                    .HasColumnName("NF_TEXTOLIVRE")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.NfTipo)
                    .HasColumnName("NF_TIPO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NfTipoAtendimento).HasColumnName("NF_TIPO_ATENDIMENTO");

                entity.Property(e => e.NfTipoeqt).HasColumnName("NF_TIPOEQT");

                entity.Property(e => e.NfTipofatloc).HasColumnName("NF_TIPOFATLOC");

                entity.Property(e => e.NfTipolanc)
                    .HasColumnName("NF_TIPOLANC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NfTipotransp).HasColumnName("NF_TIPOTRANSP");

                entity.Property(e => e.NfTotpaginas).HasColumnName("NF_TOTPAGINAS");

                entity.Property(e => e.NfUfEmbarque)
                    .HasColumnName("NF_UF_EMBARQUE")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NfUfPaisSaida)
                    .HasColumnName("NF_UF_PAIS_SAIDA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NfValoicmsst)
                    .HasColumnName("NF_VALOICMSST")
                    .HasColumnType("money");

                entity.Property(e => e.NfValorCofins).HasColumnName("NF_VALOR_COFINS");

                entity.Property(e => e.NfValorCsll).HasColumnName("NF_VALOR_CSLL");

                entity.Property(e => e.NfValorInss).HasColumnName("NF_VALOR_INSS");

                entity.Property(e => e.NfValorIr).HasColumnName("NF_VALOR_IR");

                entity.Property(e => e.NfValorPis).HasColumnName("NF_VALOR_PIS");

                entity.Property(e => e.NfValordesc)
                    .HasColumnName("NF_VALORDESC")
                    .HasColumnType("money");

                entity.Property(e => e.NfValorfrete)
                    .HasColumnName("NF_VALORFRETE")
                    .HasColumnType("money");

                entity.Property(e => e.NfValoricms)
                    .HasColumnName("NF_VALORICMS")
                    .HasColumnType("money");

                entity.Property(e => e.NfValoriss)
                    .HasColumnName("NF_VALORISS")
                    .HasColumnType("money");

                entity.Property(e => e.NfValoroutdesp)
                    .HasColumnName("NF_VALOROUTDESP")
                    .HasColumnType("money");

                entity.Property(e => e.NfValorseguro)
                    .HasColumnName("NF_VALORSEGURO")
                    .HasColumnType("money");

                entity.Property(e => e.NfValorserv)
                    .HasColumnName("NF_VALORSERV")
                    .HasColumnType("money");

                entity.Property(e => e.NfValortotal)
                    .HasColumnName("NF_VALORTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.NfValpar1).HasColumnName("NF_VALPAR1");

                entity.Property(e => e.NfValpar2).HasColumnName("NF_VALPAR2");

                entity.Property(e => e.NfVct1)
                    .HasColumnName("NF_VCT1")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfVct2)
                    .HasColumnName("NF_VCT2")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfVctsfatloc)
                    .HasColumnName("NF_VCTSFATLOC")
                    .HasColumnType("text");

                entity.Property(e => e.NfVolesp)
                    .HasColumnName("NF_VOLESP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NfVolmarca)
                    .HasColumnName("NF_VOLMARCA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NfVolnum).HasColumnName("NF_VOLNUM");

                entity.Property(e => e.NfVolpesobruto).HasColumnName("NF_VOLPESOBRUTO");

                entity.Property(e => e.NfVolpesoliq).HasColumnName("NF_VOLPESOLIQ");

                entity.Property(e => e.NfVolqtd).HasColumnName("NF_VOLQTD");

                entity.Property(e => e.NfdesgeId)
                    .HasColumnName("NFDESGE_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NfeloteId).HasColumnName("NFELOTE_ID");

                entity.Property(e => e.NfseOperacao)
                    .HasColumnName("NFSE_OPERACAO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NfseTiporecolhimento)
                    .HasColumnName("NFSE_TIPORECOLHIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NfseTributacao)
                    .HasColumnName("NFSE_TRIBUTACAO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NfseatId).HasColumnName("NFSEAT_ID");

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatalt)
                    .HasColumnName("SYS_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.TranspCpfcnpj)
                    .HasColumnName("TRANSP_CPFCNPJ")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TranspEnd)
                    .HasColumnName("TRANSP_END")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.TranspId).HasColumnName("TRANSP_ID");

                entity.Property(e => e.TranspMunicipio)
                    .HasColumnName("TRANSP_MUNICIPIO")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.TranspNomemot)
                    .HasColumnName("TRANSP_NOMEMOT")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TranspPlaca)
                    .HasColumnName("TRANSP_PLACA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TranspRginest)
                    .HasColumnName("TRANSP_RGINEST")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TranspUf)
                    .HasColumnName("TRANSP_UF")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TranspUfplaca)
                    .HasColumnName("TRANSP_UFPLACA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TranspVia)
                    .HasColumnName("TRANSP_VIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsNotaFiscalConfig>(entity =>
            {
                entity.HasKey(e => new { e.NfcId, e.AssId });

                entity.ToTable("GS_NOTA_FISCAL_CONFIG");

                entity.Property(e => e.NfcId).HasColumnName("NFC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.NfcCod).HasColumnName("NFC_COD");

                entity.Property(e => e.NfcCol).HasColumnName("NFC_COL");

                entity.Property(e => e.NfcOrd).HasColumnName("NFC_ORD");

                entity.Property(e => e.NfcTam).HasColumnName("NFC_TAM");

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalConfiguracao>(entity =>
            {
                entity.HasKey(e => new { e.CfgnfId, e.AssId, e.EmpId });

                entity.ToTable("GS_NOTA_FISCAL_CONFIGURACAO");

                entity.HasIndex(e => e.NotserId)
                    .HasName("Idx_NOTSER_ID");

                entity.Property(e => e.CfgnfId).HasColumnName("CFGNF_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.CfgnfAlinhamento).HasColumnName("CFGNF_ALINHAMENTO");

                entity.Property(e => e.CfgnfAltura).HasColumnName("CFGNF_ALTURA");

                entity.Property(e => e.CfgnfAtivatexto).HasColumnName("CFGNF_ATIVATEXTO");

                entity.Property(e => e.CfgnfDes)
                    .HasColumnName("CFGNF_DES")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CfgnfEspacolinha).HasColumnName("CFGNF_ESPACOLINHA");

                entity.Property(e => e.CfgnfEspacolinhacustom).HasColumnName("CFGNF_ESPACOLINHACUSTOM");

                entity.Property(e => e.CfgnfFont).HasColumnName("CFGNF_FONT");

                entity.Property(e => e.CfgnfFontBold).HasColumnName("CFGNF_FONT_BOLD");

                entity.Property(e => e.CfgnfFontItalic).HasColumnName("CFGNF_FONT_ITALIC");

                entity.Property(e => e.CfgnfFontTam).HasColumnName("CFGNF_FONT_TAM");

                entity.Property(e => e.CfgnfGrupo).HasColumnName("CFGNF_GRUPO");

                entity.Property(e => e.CfgnfLargura).HasColumnName("CFGNF_LARGURA");

                entity.Property(e => e.CfgnfMargesq).HasColumnName("CFGNF_MARGESQ");

                entity.Property(e => e.CfgnfMargsup).HasColumnName("CFGNF_MARGSUP");

                entity.Property(e => e.CfgnfName)
                    .HasColumnName("CFGNF_NAME")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CfgnfOrd).HasColumnName("CFGNF_ORD");

                entity.Property(e => e.CfgnfSit).HasColumnName("CFGNF_SIT");

                entity.Property(e => e.CfgnfTextolivre)
                    .HasColumnName("CFGNF_TEXTOLIVRE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalConfiguracaoOld>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_NOTA_FISCAL_CONFIGURACAO_OLD");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CfgnfAlinhamento).HasColumnName("CFGNF_ALINHAMENTO");

                entity.Property(e => e.CfgnfAltura).HasColumnName("CFGNF_ALTURA");

                entity.Property(e => e.CfgnfAtivatexto).HasColumnName("CFGNF_ATIVATEXTO");

                entity.Property(e => e.CfgnfDes)
                    .HasColumnName("CFGNF_DES")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CfgnfEspacolinha).HasColumnName("CFGNF_ESPACOLINHA");

                entity.Property(e => e.CfgnfEspacolinhacustom).HasColumnName("CFGNF_ESPACOLINHACUSTOM");

                entity.Property(e => e.CfgnfFont).HasColumnName("CFGNF_FONT");

                entity.Property(e => e.CfgnfFontBold).HasColumnName("CFGNF_FONT_BOLD");

                entity.Property(e => e.CfgnfFontItalic).HasColumnName("CFGNF_FONT_ITALIC");

                entity.Property(e => e.CfgnfFontTam).HasColumnName("CFGNF_FONT_TAM");

                entity.Property(e => e.CfgnfGrupo).HasColumnName("CFGNF_GRUPO");

                entity.Property(e => e.CfgnfId).HasColumnName("CFGNF_ID");

                entity.Property(e => e.CfgnfLargura).HasColumnName("CFGNF_LARGURA");

                entity.Property(e => e.CfgnfMargesq).HasColumnName("CFGNF_MARGESQ");

                entity.Property(e => e.CfgnfMargsup).HasColumnName("CFGNF_MARGSUP");

                entity.Property(e => e.CfgnfName)
                    .HasColumnName("CFGNF_NAME")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CfgnfOrd).HasColumnName("CFGNF_ORD");

                entity.Property(e => e.CfgnfSit).HasColumnName("CFGNF_SIT");

                entity.Property(e => e.CfgnfTextolivre)
                    .HasColumnName("CFGNF_TEXTOLIVRE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalDescricaoGeral>(entity =>
            {
                entity.HasKey(e => e.NfdesgeId)
                    .HasName("PK__GS_NOTA___EED01B9025C68D63");

                entity.ToTable("GS_NOTA_FISCAL_DESCRICAO_GERAL");

                entity.Property(e => e.NfdesgeId)
                    .HasColumnName("NFDESGE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfdesgeDes)
                    .HasColumnName("NFDESGE_DES")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalEquipamento>(entity =>
            {
                entity.HasKey(e => new { e.NfEquipamentoId, e.AssId })
                    .HasName("PK_GS_NOTA_FISCAL_EQUIPAMENTO_1");

                entity.ToTable("GS_NOTA_FISCAL_EQUIPAMENTO");

                entity.HasIndex(e => e.CfopId)
                    .HasName("Idx_CFOP_ID");

                entity.HasIndex(e => e.EptaprId)
                    .HasName("Idx_EPTAPR_ID");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.NfId)
                    .HasName("Idx_NF_ID");

                entity.Property(e => e.NfEquipamentoId).HasColumnName("NF_EQUIPAMENTO_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CfopId).HasColumnName("CFOP_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.NfEquipamentoDescricao)
                    .HasColumnName("NF_EQUIPAMENTO_DESCRICAO")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.NfEquipamentoDevolvido).HasColumnName("NF_EQUIPAMENTO_DEVOLVIDO");

                entity.Property(e => e.NfEquipamentoPreco)
                    .HasColumnName("NF_EQUIPAMENTO_PRECO")
                    .HasColumnType("money");

                entity.Property(e => e.NfEquipamentoQtd).HasColumnName("NF_EQUIPAMENTO_QTD");

                entity.Property(e => e.NfEquipamentoQtdDevolvido).HasColumnName("NF_EQUIPAMENTO_QTD_DEVOLVIDO");

                entity.Property(e => e.NfEquipamentoTerceiro)
                    .HasColumnName("NF_EQUIPAMENTO_TERCEIRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NfEquipamentoTipo).HasColumnName("NF_EQUIPAMENTO_TIPO");

                entity.Property(e => e.NfEquipamentoTotal)
                    .HasColumnName("NF_EQUIPAMENTO_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.NfIdOrigem).HasColumnName("NF_ID_ORIGEM");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalMateriais>(entity =>
            {
                entity.HasKey(e => new { e.NfMateriaisId, e.AssId });

                entity.ToTable("GS_NOTA_FISCAL_MATERIAIS");

                entity.HasIndex(e => e.CfopId)
                    .HasName("Idx_CFOP_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.HasIndex(e => e.NfId)
                    .HasName("Idx_NF_ID");

                entity.Property(e => e.NfMateriaisId).HasColumnName("NF_MATERIAIS_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CfopId).HasColumnName("CFOP_ID");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.NfIdOrigem).HasColumnName("NF_ID_ORIGEM");

                entity.Property(e => e.NfMateriaisDevolvido).HasColumnName("NF_MATERIAIS_DEVOLVIDO");

                entity.Property(e => e.NfMateriaisQtd).HasColumnName("NF_MATERIAIS_QTD");

                entity.Property(e => e.NfMateriaisQtdDevolvido).HasColumnName("NF_MATERIAIS_QTD_DEVOLVIDO");

                entity.Property(e => e.NfMateriaisValor)
                    .HasColumnName("NF_MATERIAIS_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.NfMateriaisValortotal)
                    .HasColumnName("NF_MATERIAIS_VALORTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalNfeAlerta>(entity =>
            {
                entity.HasKey(e => e.NfnfealertaId);

                entity.ToTable("GS_NOTA_FISCAL_NFE_ALERTA");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.NfId)
                    .HasName("Idx_NF_ID");

                entity.HasIndex(e => e.NfeloteId)
                    .HasName("Idx_NFELOTE_ID");

                entity.Property(e => e.NfnfealertaId)
                    .HasColumnName("NFNFEALERTA_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.NfeloteId).HasColumnName("NFELOTE_ID");

                entity.Property(e => e.NfnfealertaAlerta)
                    .HasColumnName("NFNFEALERTA_ALERTA")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalNfeXml>(entity =>
            {
                entity.HasKey(e => e.NfnfexmlId);

                entity.ToTable("GS_NOTA_FISCAL_NFE_XML");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.NfId)
                    .HasName("Idx_NF_ID");

                entity.Property(e => e.NfnfexmlId)
                    .HasColumnName("NFNFEXML_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.NfnfexmlChave)
                    .HasColumnName("NFNFEXML_CHAVE")
                    .HasMaxLength(44)
                    .IsUnicode(false);

                entity.Property(e => e.NfnfexmlProtocolo)
                    .HasColumnName("NFNFEXML_PROTOCOLO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.NfnfexmlProtocoloCancelamento)
                    .HasColumnName("NFNFEXML_PROTOCOLO_CANCELAMENTO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.NfnfexmlXml)
                    .HasColumnName("NFNFEXML_XML")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");
            });

            modelBuilder.Entity<GsNotaFiscalParcela>(entity =>
            {
                entity.HasKey(e => new { e.NfparId, e.AssId, e.NfId });

                entity.ToTable("GS_NOTA_FISCAL_PARCELA");

                entity.HasIndex(e => e.NfId)
                    .HasName("Idx_NF_ID");

                entity.Property(e => e.NfparId).HasColumnName("NFPAR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.NfparNum).HasColumnName("NFPAR_NUM");

                entity.Property(e => e.NfparPrazo).HasColumnName("NFPAR_PRAZO");

                entity.Property(e => e.NfparValor)
                    .HasColumnName("NFPAR_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.NfparVecnto)
                    .HasColumnName("NFPAR_VECNTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalSeries>(entity =>
            {
                entity.HasKey(e => new { e.NotserId, e.AssId, e.EmpId })
                    .HasName("PK_GS_NOTAS_FISCAIS_SERIES");

                entity.ToTable("GS_NOTA_FISCAL_SERIES");

                entity.HasIndex(e => e.DrvimpId)
                    .HasName("Idx_DRVIMP_ID");

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.CfopId).HasColumnName("CFOP_ID");

                entity.Property(e => e.DrvimpId).HasColumnName("DRVIMP_ID");

                entity.Property(e => e.NotserDes)
                    .HasColumnName("NOTSER_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NotserLote).HasColumnName("NOTSER_LOTE");

                entity.Property(e => e.NotserNum).HasColumnName("NOTSER_NUM");

                entity.Property(e => e.NotserObs)
                    .HasColumnName("NOTSER_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.NotserPorta)
                    .HasColumnName("NOTSER_PORTA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NotserTipo)
                    .HasColumnName("NOTSER_TIPO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NotserTippre).HasColumnName("NOTSER_TIPPRE");

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsNotaFiscalServico>(entity =>
            {
                entity.HasKey(e => new { e.NfServicoId, e.AssId });

                entity.ToTable("GS_NOTA_FISCAL_SERVICO");

                entity.HasIndex(e => e.NfId)
                    .HasName("Idx_NF_ID");

                entity.HasIndex(e => e.ServId)
                    .HasName("Idx_SERV_ID");

                entity.Property(e => e.NfServicoId).HasColumnName("NF_SERVICO_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ClassServId).HasColumnName("CLASS_SERV_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.NfServValDescCondic)
                    .HasColumnName("NF_SERV_VAL_DESC_CONDIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NfServValDescIncondic)
                    .HasColumnName("NF_SERV_VAL_DESC_INCONDIC")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NfServValOutRetencoes)
                    .HasColumnName("NF_SERV_VAL_OUT_RETENCOES")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NfServicoQtd).HasColumnName("NF_SERVICO_QTD");

                entity.Property(e => e.NfServicoTotal)
                    .HasColumnName("NF_SERVICO_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.NfServicoValor)
                    .HasColumnName("NF_SERVICO_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.NfsId).HasColumnName("NFS_ID");

                entity.Property(e => e.PrefeituraId).HasColumnName("PREFEITURA_ID");

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsObservacoesOrcamentos>(entity =>
            {
                entity.ToTable("GS_OBSERVACOES_ORCAMENTOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OboDescCompleta)
                    .HasColumnName("OBO_DESC_COMPLETA")
                    .HasColumnType("text");

                entity.Property(e => e.OboDescReduzida)
                    .HasColumnName("OBO_DESC_REDUZIDA")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.OboObsPadrao).HasColumnName("OBO_OBS_PADRAO");

                entity.Property(e => e.OboUsuarioIdAlt).HasColumnName("OBO_USUARIO_ID_ALT");

                entity.Property(e => e.OboUsuarioIdCad).HasColumnName("OBO_USUARIO_ID_CAD");

                entity.Property(e => e.SysDatalt)
                    .HasColumnName("SYS_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GsObservacoesOrcamentos)
                    .HasForeignKey(d => d.AssId)
                    .HasConstraintName("FK_ASS_OBSERVACOES");
            });

            modelBuilder.Entity<GsOcorrenciaAtendimento>(entity =>
            {
                entity.HasKey(e => new { e.OcoateId, e.AssId });

                entity.ToTable("GS_OCORRENCIA_ATENDIMENTO");

                entity.Property(e => e.OcoateId).HasColumnName("OCOATE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OcoateDes)
                    .HasColumnName("OCOATE_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OcoateInfoprov)
                    .HasColumnName("OCOATE_INFOPROV")
                    .HasColumnType("text");

                entity.Property(e => e.OcoateObs).HasColumnName("OCOATE_OBS");

                entity.Property(e => e.OcoateOpccom).HasColumnName("OCOATE_OPCCOM");

                entity.Property(e => e.OcoateOpcdiv).HasColumnName("OCOATE_OPCDIV");

                entity.Property(e => e.OcoateOpcfin).HasColumnName("OCOATE_OPCFIN");

                entity.Property(e => e.OcoateOpcger).HasColumnName("OCOATE_OPCGER");

                entity.Property(e => e.OcoateOpcsup).HasColumnName("OCOATE_OPCSUP");

                entity.Property(e => e.OcoateOpctec).HasColumnName("OCOATE_OPCTEC");

                entity.Property(e => e.OcoatePadrao).HasColumnName("OCOATE_PADRAO");

                entity.Property(e => e.OcoateProv).HasColumnName("OCOATE_PROV");

                entity.Property(e => e.OcoateSetor).HasColumnName("OCOATE_SETOR");

                entity.Property(e => e.OcoateTipo).HasColumnName("OCOATE_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOcorrenciaDemissao>(entity =>
            {
                entity.HasKey(e => new { e.OcodemId, e.AssId });

                entity.ToTable("GS_OCORRENCIA_DEMISSAO");

                entity.Property(e => e.OcodemId).HasColumnName("OCODEM_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OcodemDes)
                    .HasColumnName("OCODEM_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOperadorasCartao>(entity =>
            {
                entity.HasKey(e => new { e.OpecadId, e.AssId });

                entity.ToTable("GS_OPERADORAS_CARTAO");

                entity.Property(e => e.OpecadId).HasColumnName("OPECAD_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.OpecadDes)
                    .HasColumnName("OPECAD_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RegraData)
                    .HasColumnName("REGRA_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.RegraMesemmesMesdireto)
                    .HasColumnName("REGRA_MESEMMES_MESDIRETO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TaxaAdn).HasColumnName("TAXA_ADN");

                entity.Property(e => e.TaxaCre).HasColumnName("TAXA_CRE");

                entity.Property(e => e.TaxaDeb).HasColumnName("TAXA_DEB");

                entity.Property(e => e.TaxaPercentualIof).HasColumnName("TAXA_PERCENTUAL_IOF");

                entity.Property(e => e.TaxaValorOperacao).HasColumnName("TAXA_VALOR_OPERACAO");
            });

            modelBuilder.Entity<GsOrcamentoParcelaBak>(entity =>
            {
                entity.HasKey(e => new { e.OrcparId, e.AssId, e.OrcId });

                entity.ToTable("GS_ORCAMENTO_PARCELA_BAK");

                entity.Property(e => e.OrcparId).HasColumnName("ORCPAR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrcparNum).HasColumnName("ORCPAR_NUM");

                entity.Property(e => e.OrcparPrazo).HasColumnName("ORCPAR_PRAZO");

                entity.Property(e => e.OrcparValor)
                    .HasColumnName("ORCPAR_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.OrcparVecnto)
                    .HasColumnName("ORCPAR_VECNTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentos>(entity =>
            {
                entity.HasKey(e => new { e.OrcId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS");

                entity.HasIndex(e => e.AssdocId)
                    .HasName("Idx_ASSDOC_ID");

                entity.HasIndex(e => e.AssdocId2)
                    .HasName("Idx_ASSDOC_ID2");

                entity.HasIndex(e => e.AssdocId3)
                    .HasName("Idx_ASSDOC_ID3");

                entity.HasIndex(e => e.ClatitId)
                    .HasName("Idx_CLATIT_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.CliforconId)
                    .HasName("Idx_CLIFORCON_ID");

                entity.HasIndex(e => e.ConpagId)
                    .HasName("Idx_CONPAG_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.EqpId)
                    .HasName("Idx_EQP_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.FunId1)
                    .HasName("Idx_FUN_ID1");

                entity.HasIndex(e => e.FunId2)
                    .HasName("Idx_FUN_ID2");

                entity.HasIndex(e => e.NfId)
                    .HasName("Idx_NF_ID");

                entity.HasIndex(e => e.NotserId)
                    .HasName("Idx_NOTSER_ID");

                entity.HasIndex(e => e.OrcData)
                    .HasName("Idx_ORC_DATA");

                entity.HasIndex(e => e.OrcDatapr)
                    .HasName("Idx_ORC_DATAPR");

                entity.HasIndex(e => e.OrcDatfim)
                    .HasName("Idx_ORC_DATFIM");

                entity.HasIndex(e => e.OrcDatini)
                    .HasName("Idx_ORC_DATINI");

                entity.HasIndex(e => e.OrcEventoLocal)
                    .HasName("Idx_ORC_EVENTO_LOCAL");

                entity.HasIndex(e => e.OrcEventoNome)
                    .HasName("Idx_ORC_EVENTO_NOME");

                entity.HasIndex(e => e.OrcEvtCidid)
                    .HasName("Idx_ORC_EVT_CIDID");

                entity.HasIndex(e => e.OrcNum)
                    .HasName("Idx_ORC_NUM");

                entity.HasIndex(e => e.OrcSit)
                    .HasName("Idx_ORC_SIT");

                entity.HasIndex(e => e.OrcTabpre)
                    .HasName("Idx_ORC_TABPRE");

                entity.HasIndex(e => e.OrcUsuarioIdAlt)
                    .HasName("Idx_ORC_USUARIO_ID_ALT");

                entity.HasIndex(e => e.OrcValidade)
                    .HasName("Idx_ORC_VALIDADE");

                entity.HasIndex(e => e.OrccanId)
                    .HasName("Idx_ORCCAN_ID");

                entity.HasIndex(e => e.TiptranspId)
                    .HasName("Idx_TIPTRANSP_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdocId).HasColumnName("ASSDOC_ID");

                entity.Property(e => e.AssdocId2).HasColumnName("ASSDOC_ID2");

                entity.Property(e => e.AssdocId3).HasColumnName("ASSDOC_ID3");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.ClatitId).HasColumnName("CLATIT_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CliforId2).HasColumnName("CLIFOR_ID2");

                entity.Property(e => e.CliforconId).HasColumnName("CLIFORCON_ID");

                entity.Property(e => e.ConpagId).HasColumnName("CONPAG_ID");

                entity.Property(e => e.CtldocId1).HasColumnName("CTLDOC_ID1");

                entity.Property(e => e.CtldocId2).HasColumnName("CTLDOC_ID2");

                entity.Property(e => e.CtldocId3).HasColumnName("CTLDOC_ID3");

                entity.Property(e => e.CttId).HasColumnName("CTT_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EqpId).HasColumnName("EQP_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.FunId1).HasColumnName("FUN_ID1");

                entity.Property(e => e.FunId2).HasColumnName("FUN_ID2");

                entity.Property(e => e.FunId3)
                    .HasColumnName("FUN_ID3")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.NomevtId).HasColumnName("NOMEVT_ID");

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.OrcChqclc).HasColumnName("ORC_CHQCLC");

                entity.Property(e => e.OrcChqclcage)
                    .HasColumnName("ORC_CHQCLCAGE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OrcChqclcbanid).HasColumnName("ORC_CHQCLCBANID");

                entity.Property(e => e.OrcChqclccc)
                    .HasColumnName("ORC_CHQCLCCC")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OrcChqclccomp)
                    .HasColumnName("ORC_CHQCLCCOMP")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcChqclcemi)
                    .HasColumnName("ORC_CHQCLCEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcChqclcnum)
                    .HasColumnName("ORC_CHQCLCNUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OrcChqclcval)
                    .HasColumnName("ORC_CHQCLCVAL")
                    .HasColumnType("money");

                entity.Property(e => e.OrcCobdiaria).HasColumnName("ORC_COBDIARIA");

                entity.Property(e => e.OrcComissaoflag).HasColumnName("ORC_COMISSAOFLAG");

                entity.Property(e => e.OrcComissaofun).HasColumnName("ORC_COMISSAOFUN");

                entity.Property(e => e.OrcComissaofun1).HasColumnName("ORC_COMISSAOFUN1");

                entity.Property(e => e.OrcComissaofun2).HasColumnName("ORC_COMISSAOFUN2");

                entity.Property(e => e.OrcContato)
                    .HasColumnName("ORC_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrcContatoDdd)
                    .HasColumnName("ORC_CONTATO_DDD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OrcContatoFone)
                    .HasColumnName("ORC_CONTATO_FONE")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.OrcCtlrenovacao).HasColumnName("ORC_CTLRENOVACAO");

                entity.Property(e => e.OrcCttDiafat).HasColumnName("ORC_CTT_DIAFAT");

                entity.Property(e => e.OrcCttDiavct).HasColumnName("ORC_CTT_DIAVCT");

                entity.Property(e => e.OrcCttInicio)
                    .HasColumnName("ORC_CTT_INICIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttPeriodoCobFim)
                    .HasColumnName("ORC_CTT_PERIODO_COB_FIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttPeriodoCobIni)
                    .HasColumnName("ORC_CTT_PERIODO_COB_INI")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttPrazoContrato).HasColumnName("ORC_CTT_PRAZO_CONTRATO");

                entity.Property(e => e.OrcCttProxFat)
                    .HasColumnName("ORC_CTT_PROX_FAT")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttTermino)
                    .HasColumnName("ORC_CTT_TERMINO")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttTipoContrato).HasColumnName("ORC_CTT_TIPO_CONTRATO");

                entity.Property(e => e.OrcCttcontrato).HasColumnName("ORC_CTTCONTRATO");

                entity.Property(e => e.OrcCttdatemi)
                    .HasColumnName("ORC_CTTDATEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttdoc)
                    .HasColumnName("ORC_CTTDOC")
                    .HasColumnType("text");

                entity.Property(e => e.OrcCttdoctest1)
                    .HasColumnName("ORC_CTTDOCTEST1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.OrcCttdoctest2)
                    .HasColumnName("ORC_CTTDOCTEST2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.OrcCttmontest2)
                    .HasColumnName("ORC_CTTMONTEST2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrcCttnomtest1)
                    .HasColumnName("ORC_CTTNOMTEST1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrcCttnum).HasColumnName("ORC_CTTNUM");

                entity.Property(e => e.OrcCttvalor)
                    .HasColumnName("ORC_CTTVALOR")
                    .HasColumnType("money");

                entity.Property(e => e.OrcCustoadian)
                    .HasColumnName("ORC_CUSTOADIAN")
                    .HasColumnType("money");

                entity.Property(e => e.OrcCustobv)
                    .HasColumnName("ORC_CUSTOBV")
                    .HasColumnType("money");

                entity.Property(e => e.OrcCustodesp)
                    .HasColumnName("ORC_CUSTODESP")
                    .HasColumnType("money");

                entity.Property(e => e.OrcCustoeqt)
                    .HasColumnName("ORC_CUSTOEQT")
                    .HasColumnType("money");

                entity.Property(e => e.OrcCustomat)
                    .HasColumnName("ORC_CUSTOMAT")
                    .HasColumnType("money");

                entity.Property(e => e.OrcCustoserv)
                    .HasColumnName("ORC_CUSTOSERV")
                    .HasColumnType("money");

                entity.Property(e => e.OrcCustotec)
                    .HasColumnName("ORC_CUSTOTEC")
                    .HasColumnType("money");

                entity.Property(e => e.OrcData)
                    .HasColumnName("ORC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcDataAlt)
                    .HasColumnName("ORC_DATA_ALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcDatacancela)
                    .HasColumnName("ORC_DATACANCELA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcDatapr)
                    .HasColumnName("ORC_DATAPR")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcDatfim)
                    .HasColumnName("ORC_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcDatini)
                    .HasColumnName("ORC_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcDiaevt).HasColumnName("ORC_DIAEVT");

                entity.Property(e => e.OrcDiaevtcob).HasColumnName("ORC_DIAEVTCOB");

                entity.Property(e => e.OrcDocasp)
                    .HasColumnName("ORC_DOCASP")
                    .HasColumnType("text");

                entity.Property(e => e.OrcDochtml)
                    .HasColumnName("ORC_DOCHTML")
                    .HasColumnType("text");

                entity.Property(e => e.OrcDochtml2)
                    .HasColumnName("ORC_DOCHTML2")
                    .HasColumnType("text");

                entity.Property(e => e.OrcDochtml3)
                    .HasColumnName("ORC_DOCHTML3")
                    .HasColumnType("text");

                entity.Property(e => e.OrcEmailContato)
                    .HasColumnName("ORC_EMAIL_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEventoLocal)
                    .HasColumnName("ORC_EVENTO_LOCAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEventoNome)
                    .HasColumnName("ORC_EVENTO_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEventoTipo)
                    .HasColumnName("ORC_EVENTO_TIPO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEvtBai)
                    .HasColumnName("ORC_EVT_BAI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEvtCep)
                    .HasColumnName("ORC_EVT_CEP")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OrcEvtCidid).HasColumnName("ORC_EVT_CIDID");

                entity.Property(e => e.OrcEvtContato)
                    .HasColumnName("ORC_EVT_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEvtCpl)
                    .HasColumnName("ORC_EVT_CPL")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEvtDdd)
                    .HasColumnName("ORC_EVT_DDD")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OrcEvtEnd)
                    .HasColumnName("ORC_EVT_END")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEvtNum)
                    .HasColumnName("ORC_EVT_NUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.OrcEvtTel)
                    .HasColumnName("ORC_EVT_TEL")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.OrcFixvalorc).HasColumnName("ORC_FIXVALORC");

                entity.Property(e => e.OrcInfevt)
                    .HasColumnName("ORC_INFEVT")
                    .HasColumnType("text");

                entity.Property(e => e.OrcIteeqt).HasColumnName("ORC_ITEEQT");

                entity.Property(e => e.OrcItemat).HasColumnName("ORC_ITEMAT");

                entity.Property(e => e.OrcNum).HasColumnName("ORC_NUM");

                entity.Property(e => e.OrcNumcontrato).HasColumnName("ORC_NUMCONTRATO");

                entity.Property(e => e.OrcObs)
                    .HasColumnName("ORC_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.OrcObscancela)
                    .HasColumnName("ORC_OBSCANCELA")
                    .HasColumnType("text");

                entity.Property(e => e.OrcObsint)
                    .HasColumnName("ORC_OBSINT")
                    .HasColumnType("text");

                entity.Property(e => e.OrcObsnota)
                    .HasColumnName("ORC_OBSNOTA")
                    .HasColumnType("text");

                entity.Property(e => e.OrcQtdeqt).HasColumnName("ORC_QTDEQT");

                entity.Property(e => e.OrcQtdmat).HasColumnName("ORC_QTDMAT");

                entity.Property(e => e.OrcResumo)
                    .HasColumnName("ORC_RESUMO")
                    .HasColumnType("text");

                entity.Property(e => e.OrcSit).HasColumnName("ORC_SIT");

                entity.Property(e => e.OrcSubtotal)
                    .HasColumnName("ORC_SUBTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.OrcTabpre).HasColumnName("ORC_TABPRE");

                entity.Property(e => e.OrcTabpreco).HasColumnName("ORC_TABPRECO");

                entity.Property(e => e.OrcTabprecotip).HasColumnName("ORC_TABPRECOTIP");

                entity.Property(e => e.OrcTipo)
                    .HasColumnName("ORC_TIPO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrcTipodesc).HasColumnName("ORC_TIPODESC");

                entity.Property(e => e.OrcTipope).HasColumnName("ORC_TIPOPE");

                entity.Property(e => e.OrcUsuarioIdAlt).HasColumnName("ORC_USUARIO_ID_ALT");

                entity.Property(e => e.OrcValeqt)
                    .HasColumnName("ORC_VALEQT")
                    .HasColumnType("money");

                entity.Property(e => e.OrcValfixosalas).HasColumnName("ORC_VALFIXOSALAS");

                entity.Property(e => e.OrcValidade)
                    .HasColumnName("ORC_VALIDADE")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcValmat)
                    .HasColumnName("ORC_VALMAT")
                    .HasColumnType("money");

                entity.Property(e => e.OrcValordesc)
                    .HasColumnName("ORC_VALORDESC")
                    .HasColumnType("money");

                entity.Property(e => e.OrcValordescperc).HasColumnName("ORC_VALORDESCPERC");

                entity.Property(e => e.OrcValordesp)
                    .HasColumnName("ORC_VALORDESP")
                    .HasColumnType("money");

                entity.Property(e => e.OrcValorfixo)
                    .HasColumnName("ORC_VALORFIXO")
                    .HasColumnType("money");

                entity.Property(e => e.OrcValortotal)
                    .HasColumnName("ORC_VALORTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.OrcVersao)
                    .HasColumnName("ORC_VERSAO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.OrcVersaoCad)
                    .HasColumnName("ORC_VERSAO_CAD")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.OrcVisita).HasColumnName("ORC_VISITA");

                entity.Property(e => e.OrcVisitaData)
                    .HasColumnName("ORC_VISITA_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcVisitaHora).HasColumnName("ORC_VISITA_HORA");

                entity.Property(e => e.OrcVlcobrado)
                    .HasColumnName("ORC_VLCOBRADO")
                    .HasColumnType("money");

                entity.Property(e => e.OrcVlnaocobrado)
                    .HasColumnName("ORC_VLNAOCOBRADO")
                    .HasColumnType("money");

                entity.Property(e => e.OrcVlrttcomisao)
                    .HasColumnName("ORC_VLRTTCOMISAO")
                    .HasColumnType("money");

                entity.Property(e => e.OrcVlrttdespesa)
                    .HasColumnName("ORC_VLRTTDESPESA")
                    .HasColumnType("money");

                entity.Property(e => e.OrcVlrttdespfixa)
                    .HasColumnName("ORC_VLRTTDESPFIXA")
                    .HasColumnType("money");

                entity.Property(e => e.OrcVlrttdespvar)
                    .HasColumnName("ORC_VLRTTDESPVAR")
                    .HasColumnType("money");

                entity.Property(e => e.OrcVlrttlucrobru)
                    .HasColumnName("ORC_VLRTTLUCROBRU")
                    .HasColumnType("money");

                entity.Property(e => e.OrcVlrttlucroliq)
                    .HasColumnName("ORC_VLRTTLUCROLIQ")
                    .HasColumnType("money");

                entity.Property(e => e.OrccanId).HasColumnName("ORCCAN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysVer).HasColumnName("SYS_VER");

                entity.Property(e => e.TiptranspId).HasColumnName("TIPTRANSP_ID");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsOrcamentosAdiantamentos>(entity =>
            {
                entity.HasKey(e => new { e.AdiorcId, e.AssId, e.OrcId });

                entity.ToTable("GS_ORCAMENTOS_ADIANTAMENTOS");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.AdiorcId).HasColumnName("ADIORC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.AdiorcAgr).HasColumnName("ADIORC_AGR");

                entity.Property(e => e.AdiorcData)
                    .HasColumnName("ADIORC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.AdiorcDes)
                    .HasColumnName("ADIORC_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AdiorcObs)
                    .HasColumnName("ADIORC_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.AdiorcValor).HasColumnName("ADIORC_VALOR");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosAgenda>(entity =>
            {
                entity.HasKey(e => new { e.OrcageId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_AGENDA");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.Property(e => e.OrcageId).HasColumnName("ORCAGE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrcageCobrar).HasColumnName("ORCAGE_COBRAR");

                entity.Property(e => e.OrcageData)
                    .HasColumnName("ORCAGE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcageHora).HasColumnName("ORCAGE_HORA");

                entity.Property(e => e.OrcageMotivo).HasColumnName("ORCAGE_MOTIVO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosAgendaTecnicos>(entity =>
            {
                entity.HasKey(e => new { e.OrcagetecId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_AGENDA_TECNICOS");

                entity.HasIndex(e => e.CarfunId)
                    .HasName("Idx_CARFUN_ID");

                entity.HasIndex(e => e.CargnivId)
                    .HasName("Idx_CARGNIV_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.Property(e => e.OrcagetecId).HasColumnName("ORCAGETEC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CarfunId).HasColumnName("CARFUN_ID");

                entity.Property(e => e.CargnivId).HasColumnName("CARGNIV_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrcagetecAgr).HasColumnName("ORCAGETEC_AGR");

                entity.Property(e => e.OrcagetecData)
                    .HasColumnName("ORCAGETEC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcagetecQtde).HasColumnName("ORCAGETEC_QTDE");

                entity.Property(e => e.OrcagetecTipoDiaria).HasColumnName("ORCAGETEC_TIPO_DIARIA");

                entity.Property(e => e.OrcagetecVencimento)
                    .HasColumnName("ORCAGETEC_VENCIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcagetecVlrcliente)
                    .HasColumnName("ORCAGETEC_VLRCLIENTE")
                    .HasColumnType("money");

                entity.Property(e => e.OrcagetecVlrdiaria)
                    .HasColumnName("ORCAGETEC_VLRDIARIA")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosBv>(entity =>
            {
                entity.HasKey(e => new { e.OrcbvId, e.OrcId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_BV");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.Property(e => e.OrcbvId).HasColumnName("ORCBV_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.OrcbvAgr).HasColumnName("ORCBV_AGR");

                entity.Property(e => e.OrcbvBase).HasColumnName("ORCBV_BASE");

                entity.Property(e => e.OrcbvData)
                    .HasColumnName("ORCBV_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcbvPercentual)
                    .HasColumnName("ORCBV_PERCENTUAL")
                    .HasColumnType("money");

                entity.Property(e => e.OrcbvTipoCalculo).HasColumnName("ORCBV_TIPO_CALCULO");

                entity.Property(e => e.OrcbvValor)
                    .HasColumnName("ORCBV_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosCancelamentos>(entity =>
            {
                entity.HasKey(e => new { e.OrccanId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_CANCELAMENTOS");

                entity.Property(e => e.OrccanId).HasColumnName("ORCCAN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OrccanDes)
                    .HasColumnName("ORCCAN_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosCttParcelas>(entity =>
            {
                entity.HasKey(e => new { e.OrcCttparId, e.OrcId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_CTT_PARCELAS");

                entity.Property(e => e.OrcCttparId).HasColumnName("ORC_CTTPAR_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.NfsId).HasColumnName("NFS_ID");

                entity.Property(e => e.OrcCttparCobfim)
                    .HasColumnName("ORC_CTTPAR_COBFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttparCobini)
                    .HasColumnName("ORC_CTTPAR_COBINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttparFat)
                    .HasColumnName("ORC_CTTPAR_FAT")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCttparVencto)
                    .HasColumnName("ORC_CTTPAR_VENCTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosDespesas>(entity =>
            {
                entity.HasKey(e => new { e.OrcdespId, e.AssId })
                    .HasName("PK_GS_ORCAMENTOS_DESPESAS_1");

                entity.ToTable("GS_ORCAMENTOS_DESPESAS");

                entity.HasIndex(e => e.CattitId)
                    .HasName("Idx_CATTIT_ID");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.GrpdespeveId)
                    .HasName("Idx_GRPDESPEVE_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.SubcattitId)
                    .HasName("Idx_SUBCATTIT_ID");

                entity.HasIndex(e => e.SubgrpdespeveId)
                    .HasName("Idx_SUBGRPDESPEVE_ID");

                entity.Property(e => e.OrcdespId).HasColumnName("ORCDESP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CattitId).HasColumnName("CATTIT_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.GrpdespeveId).HasColumnName("GRPDESPEVE_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrcdespAgr).HasColumnName("ORCDESP_AGR");

                entity.Property(e => e.OrcdespObs)
                    .HasColumnName("ORCDESP_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.OrcdespQtd).HasColumnName("ORCDESP_QTD");

                entity.Property(e => e.OrcdespTotal)
                    .HasColumnName("ORCDESP_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.OrcdespValor)
                    .HasColumnName("ORCDESP_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.OrcdespVenc)
                    .HasColumnName("ORCDESP_VENC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SubcattitId).HasColumnName("SUBCATTIT_ID");

                entity.Property(e => e.SubgrpdespeveId).HasColumnName("SUBGRPDESPEVE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.OrceqtId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_EQUIPAMENTOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ORC_EQT_ID");

                entity.HasIndex(e => e.EqtId)
                    .HasName("Idx_EQT_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.OrcestiteId)
                    .HasName("Idx_ORCESTITE_ID");

                entity.Property(e => e.OrceqtId).HasColumnName("ORCEQT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtId).HasColumnName("EQT_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrceqtAgr).HasColumnName("ORCEQT_AGR");

                entity.Property(e => e.OrceqtEqtterc).HasColumnName("ORCEQT_EQTTERC");

                entity.Property(e => e.OrceqtLancado).HasColumnName("ORCEQT_LANCADO");

                entity.Property(e => e.OrceqtObs)
                    .HasColumnName("ORCEQT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.OrceqtObsint)
                    .HasColumnName("ORCEQT_OBSINT")
                    .HasColumnType("text");

                entity.Property(e => e.OrceqtPreco)
                    .HasColumnName("ORCEQT_PRECO")
                    .HasColumnType("money");

                entity.Property(e => e.OrceqtPrecosubloc)
                    .HasColumnName("ORCEQT_PRECOSUBLOC")
                    .HasColumnType("money");

                entity.Property(e => e.OrceqtQtd).HasColumnName("ORCEQT_QTD");

                entity.Property(e => e.OrceqtQtdLancado).HasColumnName("ORCEQT_QTD_LANCADO");

                entity.Property(e => e.OrceqtQtdmod).HasColumnName("ORCEQT_QTDMOD");

                entity.Property(e => e.OrceqtTotal)
                    .HasColumnName("ORCEQT_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.OrceqtTotalSalas)
                    .HasColumnName("ORCEQT_TOTAL_SALAS")
                    .HasColumnType("money");

                entity.Property(e => e.OrceqtValor)
                    .HasColumnName("ORCEQT_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.OrceqtView).HasColumnName("ORCEQT_VIEW");

                entity.Property(e => e.OrcestiteId).HasColumnName("ORCESTITE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosEquipamentosTerceiros>(entity =>
            {
                entity.HasKey(e => new { e.OrceqtterId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_EQUIPAMENTOS_TERCEIROS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.GrpeqtId)
                    .HasName("Idx_GRPEQT_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.OrcestiteId)
                    .HasName("Idx_ORCESTITE_ID");

                entity.Property(e => e.OrceqtterId).HasColumnName("ORCEQTTER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.GrpeqtId).HasColumnName("GRPEQT_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrceqtterAgr).HasColumnName("ORCEQTTER_AGR");

                entity.Property(e => e.OrceqtterDatvenc)
                    .HasColumnName("ORCEQTTER_DATVENC")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrceqtterDes)
                    .HasColumnName("ORCEQTTER_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OrceqtterDevdata)
                    .HasColumnName("ORCEQTTER_DEVDATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrceqtterDevhora).HasColumnName("ORCEQTTER_DEVHORA");

                entity.Property(e => e.OrceqtterDias).HasColumnName("ORCEQTTER_DIAS");

                entity.Property(e => e.OrceqtterGerareq)
                    .HasColumnName("ORCEQTTER_GERAREQ")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OrceqtterLancado).HasColumnName("ORCEQTTER_LANCADO");

                entity.Property(e => e.OrceqtterObs)
                    .HasColumnName("ORCEQTTER_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.OrceqtterObsint)
                    .HasColumnName("ORCEQTTER_OBSINT")
                    .HasColumnType("text");

                entity.Property(e => e.OrceqtterPrecocompra)
                    .HasColumnName("ORCEQTTER_PRECOCOMPRA")
                    .HasColumnType("money");

                entity.Property(e => e.OrceqtterPrecolocacao)
                    .HasColumnName("ORCEQTTER_PRECOLOCACAO")
                    .HasColumnType("money");

                entity.Property(e => e.OrceqtterPrecorepassado)
                    .HasColumnName("ORCEQTTER_PRECOREPASSADO")
                    .HasColumnType("money");

                entity.Property(e => e.OrceqtterPrint).HasColumnName("ORCEQTTER_PRINT");

                entity.Property(e => e.OrceqtterQtd).HasColumnName("ORCEQTTER_QTD");

                entity.Property(e => e.OrceqtterQtdLancado).HasColumnName("ORCEQTTER_QTD_LANCADO");

                entity.Property(e => e.OrceqtterRetdata)
                    .HasColumnName("ORCEQTTER_RETDATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrceqtterRethora).HasColumnName("ORCEQTTER_RETHORA");

                entity.Property(e => e.OrceqtterTotal)
                    .HasColumnName("ORCEQTTER_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.OrcestiteId).HasColumnName("ORCESTITE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosEstrutura>(entity =>
            {
                entity.HasKey(e => new { e.OrcestId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_ESTRUTURA");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.Property(e => e.OrcestId).HasColumnName("ORCEST_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrcestDatini)
                    .HasColumnName("ORCEST_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcestDatter)
                    .HasColumnName("ORCEST_DATTER")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcestDias).HasColumnName("ORCEST_DIAS");

                entity.Property(e => e.OrcestNome)
                    .HasColumnName("ORCEST_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.OrcestNumpes).HasColumnName("ORCEST_NUMPES");

                entity.Property(e => e.OrcestObs)
                    .HasColumnName("ORCEST_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.OrcestValor)
                    .HasColumnName("ORCEST_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosEstruturaEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.OrcestiteId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_ESTRUTURA_EQUIPAMENTOS");

                entity.HasIndex(e => e.EptaprId)
                    .HasName("Idx_EPTAPR_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.OrceqtId)
                    .HasName("Idx_ORCEQT_ID");

                entity.HasIndex(e => e.OrcestId)
                    .HasName("Idx_ORCEST_ID");

                entity.Property(e => e.OrcestiteId).HasColumnName("ORCESTITE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EptaprId).HasColumnName("EPTAPR_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrceqtId).HasColumnName("ORCEQT_ID");

                entity.Property(e => e.OrcestId).HasColumnName("ORCEST_ID");

                entity.Property(e => e.OrcestiteAgr)
                    .HasColumnName("ORCESTITE_AGR")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OrcestiteQtd).HasColumnName("ORCESTITE_QTD");

                entity.Property(e => e.OrcestiteTotal).HasColumnName("ORCESTITE_TOTAL");

                entity.Property(e => e.OrcestiteVal).HasColumnName("ORCESTITE_VAL");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosGruposDespesas>(entity =>
            {
                entity.HasKey(e => new { e.GrpdespeveId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_GRUPOS_DESPESAS");

                entity.Property(e => e.GrpdespeveId).HasColumnName("GRPDESPEVE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.GrpdespeveDes)
                    .HasColumnName("GRPDESPEVE_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosImagem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_ORCAMENTOS_IMAGEM");

                entity.Property(e => e.Arquivo)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosMateriais>(entity =>
            {
                entity.HasKey(e => new { e.OrcmatId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_MATERIAIS");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.OrcestiteId)
                    .HasName("Idx_ORCESTITE_ID");

                entity.Property(e => e.OrcmatId).HasColumnName("ORCMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrcestiteId).HasColumnName("ORCESTITE_ID");

                entity.Property(e => e.OrcmatAgr).HasColumnName("ORCMAT_AGR");

                entity.Property(e => e.OrcmatLancado).HasColumnName("ORCMAT_LANCADO");

                entity.Property(e => e.OrcmatPreco)
                    .HasColumnName("ORCMAT_PRECO")
                    .HasColumnType("money");

                entity.Property(e => e.OrcmatQtd).HasColumnName("ORCMAT_QTD");

                entity.Property(e => e.OrcmatQtdLancado).HasColumnName("ORCMAT_QTD_LANCADO");

                entity.Property(e => e.OrcmatTotal)
                    .HasColumnName("ORCMAT_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.OrcmatView).HasColumnName("ORCMAT_VIEW");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosObservacoes>(entity =>
            {
                entity.ToTable("GS_ORCAMENTOS_OBSERVACOES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OboHabilitado).HasColumnName("OBO_HABILITADO");

                entity.Property(e => e.OboId).HasColumnName("OBO_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrcUsuarioIdAlt).HasColumnName("ORC_USUARIO_ID_ALT");

                entity.Property(e => e.OrcUsuarioIdCad).HasColumnName("ORC_USUARIO_ID_CAD");

                entity.Property(e => e.SysDatalt)
                    .HasColumnName("SYS_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GsOrcamentosObservacoes)
                    .HasForeignKey(d => d.AssId)
                    .HasConstraintName("FK_ASS_ORCAMENTOS_OBSERVACOES");

                entity.HasOne(d => d.Obo)
                    .WithMany(p => p.GsOrcamentosObservacoes)
                    .HasForeignKey(d => d.OboId)
                    .HasConstraintName("FK_OBO_ORCAMENTOS_OBSERVACOES");
            });

            modelBuilder.Entity<GsOrcamentosParcela>(entity =>
            {
                entity.HasKey(e => new { e.OrcparId, e.AssId, e.OrcId })
                    .HasName("PK_GS_ORCAMENTO_PARCELA");

                entity.ToTable("GS_ORCAMENTOS_PARCELA");

                entity.Property(e => e.OrcparId).HasColumnName("ORCPAR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.GrptitId).HasColumnName("GRPTIT_ID");

                entity.Property(e => e.OrcparNum).HasColumnName("ORCPAR_NUM");

                entity.Property(e => e.OrcparPrazo).HasColumnName("ORCPAR_PRAZO");

                entity.Property(e => e.OrcparValor)
                    .HasColumnName("ORCPAR_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.OrcparVecnto)
                    .HasColumnName("ORCPAR_VECNTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SubgrpId).HasColumnName("SUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosPs>(entity =>
            {
                entity.HasKey(e => new { e.OrcpsId, e.OrcId });

                entity.ToTable("GS_ORCAMENTOS_PS");

                entity.Property(e => e.OrcpsId).HasColumnName("ORCPS_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.AmxId).HasColumnName("AMX_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosServicos>(entity =>
            {
                entity.HasKey(e => new { e.OrcservId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_SERVICOS");

                entity.HasIndex(e => e.OrcId)
                    .HasName("Idx_ORC_ID");

                entity.HasIndex(e => e.OrcestiteId)
                    .HasName("Idx_ORCESTITE_ID");

                entity.HasIndex(e => e.ServId)
                    .HasName("Idx_SERV_ID");

                entity.Property(e => e.OrcservId).HasColumnName("ORCSERV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrcestiteId).HasColumnName("ORCESTITE_ID");

                entity.Property(e => e.OrcservAgr).HasColumnName("ORCSERV_AGR");

                entity.Property(e => e.OrcservDias).HasColumnName("ORCSERV_DIAS");

                entity.Property(e => e.OrcservLancados).HasColumnName("ORCSERV_LANCADOS");

                entity.Property(e => e.OrcservObs)
                    .HasColumnName("ORCSERV_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.OrcservPreco)
                    .HasColumnName("ORCSERV_PRECO")
                    .HasColumnType("money");

                entity.Property(e => e.OrcservQtd).HasColumnName("ORCSERV_QTD");

                entity.Property(e => e.OrcservQtdLancados).HasColumnName("ORCSERV_QTD_LANCADOS");

                entity.Property(e => e.OrcservTotal)
                    .HasColumnName("ORCSERV_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosSubgruposDespesas>(entity =>
            {
                entity.HasKey(e => new { e.SubgrpdespeveId, e.AssId, e.GrpdespeveId });

                entity.ToTable("GS_ORCAMENTOS_SUBGRUPOS_DESPESAS");

                entity.Property(e => e.SubgrpdespeveId).HasColumnName("SUBGRPDESPEVE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.GrpdespeveId).HasColumnName("GRPDESPEVE_ID");

                entity.Property(e => e.SubgrpdespeveDes)
                    .HasColumnName("SUBGRPDESPEVE_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsOrcamentosTecnicos>(entity =>
            {
                entity.HasKey(e => new { e.OrctecId, e.OrcId, e.AssId });

                entity.ToTable("GS_ORCAMENTOS_TECNICOS");

                entity.HasIndex(e => e.CarfunId)
                    .HasName("Idx_CARFUN_ID");

                entity.HasIndex(e => e.CargnivId)
                    .HasName("Idx_CARGNIV_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.OrctecData)
                    .HasName("Idx_ORCTEC_DATA");

                entity.Property(e => e.OrctecId).HasColumnName("ORCTEC_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CarfunId).HasColumnName("CARFUN_ID");

                entity.Property(e => e.CargnivId).HasColumnName("CARGNIV_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.OrctecAgr).HasColumnName("ORCTEC_AGR");

                entity.Property(e => e.OrctecData)
                    .HasColumnName("ORCTEC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrctecResp).HasColumnName("ORCTEC_RESP");

                entity.Property(e => e.OrctecTipo).HasColumnName("ORCTEC_TIPO");

                entity.Property(e => e.OrctecValdir)
                    .HasColumnName("ORCTEC_VALDIR")
                    .HasColumnType("money");

                entity.Property(e => e.OrctecValneg)
                    .HasColumnName("ORCTEC_VALNEG")
                    .HasColumnType("money");

                entity.Property(e => e.OrctecVencimento)
                    .HasColumnName("ORCTEC_VENCIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPaises>(entity =>
            {
                entity.HasKey(e => e.PaisId);

                entity.ToTable("GS_PAISES");

                entity.Property(e => e.PaisId)
                    .HasColumnName("PAIS_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.PaisNome)
                    .HasColumnName("PAIS_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PaisSgl)
                    .HasColumnName("PAIS_SGL")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PaisSit).HasColumnName("PAIS_SIT");

                entity.Property(e => e.SetId).HasColumnName("SET_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysInfo).HasColumnName("SYS_INFO");
            });

            modelBuilder.Entity<GsParametrosPlanoContas>(entity =>
            {
                entity.HasKey(e => new { e.ParplnctsId, e.AssId });

                entity.ToTable("GS_PARAMETROS_PLANO_CONTAS");

                entity.HasIndex(e => e.PlnctsctsId)
                    .HasName("Idx_PLNCTSCTS_ID");

                entity.HasIndex(e => e.PlnctsgrpId)
                    .HasName("Idx_PLNCTSGRP_ID");

                entity.HasIndex(e => e.PlnctssubctsId)
                    .HasName("Idx_PLNCTSSUBCTS_ID");

                entity.HasIndex(e => e.PlnctssubgrpId)
                    .HasName("Idx_PLNCTSSUBGRP_ID");

                entity.Property(e => e.ParplnctsId).HasColumnName("PARPLNCTS_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ParplnctsDes)
                    .HasColumnName("PARPLNCTS_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ParplnctsMod)
                    .IsRequired()
                    .HasColumnName("PARPLNCTS_MOD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParplnctsTipo).HasColumnName("PARPLNCTS_TIPO");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedagio>(entity =>
            {
                entity.HasKey(e => new { e.PedaId, e.AssId, e.TraId });

                entity.ToTable("GS_PEDAGIO");

                entity.HasIndex(e => e.CidId)
                    .HasName("Idx_CID_ID");

                entity.HasIndex(e => e.TraId)
                    .HasName("Idx_TRA_ID");

                entity.Property(e => e.PedaId).HasColumnName("PEDA_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.TraId).HasColumnName("TRA_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.PedaKm).HasColumnName("PEDA_KM");

                entity.Property(e => e.PedaTipo).HasColumnName("PEDA_TIPO");

                entity.Property(e => e.PedaValor)
                    .HasColumnName("PEDA_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedidosCompras>(entity =>
            {
                entity.HasKey(e => new { e.PedcompId, e.AssId });

                entity.ToTable("GS_PEDIDOS_COMPRAS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.PedcompData)
                    .HasName("Idx_PEDCOMP_DATA");

                entity.HasIndex(e => e.PedcompNum)
                    .HasName("Idx_PEDCOMP_NUM");

                entity.HasIndex(e => e.PedcompPrevent)
                    .HasName("Idx_PEDCOMP_PREVENT");

                entity.HasIndex(e => e.PedcompSit)
                    .HasName("Idx_PEDCOMP_SIT");

                entity.HasIndex(e => e.ReqcomId)
                    .HasName("Idx_REQCOM_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.PedcompId).HasColumnName("PEDCOMP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CadconbanId)
                    .HasColumnName("CADCONBAN_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ClatitId).HasColumnName("CLATIT_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.ConpagId).HasColumnName("CONPAG_ID");

                entity.Property(e => e.CppId).HasColumnName("CPP_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.GrptitId).HasColumnName("GRPTIT_ID");

                entity.Property(e => e.PedcompCondpag)
                    .HasColumnName("PEDCOMP_CONDPAG")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PedcompConpagObs)
                    .HasColumnName("PEDCOMP_CONPAG_OBS")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.PedcompData)
                    .HasColumnName("PEDCOMP_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.PedcompDataprov)
                    .HasColumnName("PEDCOMP_DATAPROV")
                    .HasColumnType("datetime");

                entity.Property(e => e.PedcompDatcanc)
                    .HasColumnName("PEDCOMP_DATCANC")
                    .HasColumnType("datetime");

                entity.Property(e => e.PedcompDatent)
                    .HasColumnName("PEDCOMP_DATENT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PedcompDesconto).HasColumnName("PEDCOMP_DESCONTO");

                entity.Property(e => e.PedcompEmissaonf)
                    .HasColumnName("PEDCOMP_EMISSAONF")
                    .HasColumnType("datetime");

                entity.Property(e => e.PedcompFretenf)
                    .HasColumnName("PEDCOMP_FRETENF")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompIcmsnf)
                    .HasColumnName("PEDCOMP_ICMSNF")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompIpinf)
                    .HasColumnName("PEDCOMP_IPINF")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompItens).HasColumnName("PEDCOMP_ITENS");

                entity.Property(e => e.PedcompJurofi)
                    .HasColumnName("PEDCOMP_JUROFI")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompMotcan)
                    .HasColumnName("PEDCOMP_MOTCAN")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PedcompNum).HasColumnName("PEDCOMP_NUM");

                entity.Property(e => e.PedcompNumnf).HasColumnName("PEDCOMP_NUMNF");

                entity.Property(e => e.PedcompObs)
                    .HasColumnName("PEDCOMP_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.PedcompOperacaonf)
                    .HasColumnName("PEDCOMP_OPERACAONF")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PedcompPrevent)
                    .HasColumnName("PEDCOMP_PREVENT")
                    .HasColumnType("datetime");

                entity.Property(e => e.PedcompQtd).HasColumnName("PEDCOMP_QTD");

                entity.Property(e => e.PedcompSerienf)
                    .HasColumnName("PEDCOMP_SERIENF")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.PedcompSit).HasColumnName("PEDCOMP_SIT");

                entity.Property(e => e.PedcompStnf)
                    .HasColumnName("PEDCOMP_STNF")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompTransp)
                    .HasColumnName("PEDCOMP_TRANSP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PedcompUsecanId).HasColumnName("PEDCOMP_USECAN_ID");

                entity.Property(e => e.PedcompValor)
                    .HasColumnName("PEDCOMP_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompValornf)
                    .HasColumnName("PEDCOMP_VALORNF")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompparcId).HasColumnName("PEDCOMPPARC_ID");

                entity.Property(e => e.PednumpNumfor).HasColumnName("PEDNUMP_NUMFOR");

                entity.Property(e => e.ReqcomId).HasColumnName("REQCOM_ID");

                entity.Property(e => e.SubgrpId).HasColumnName("SUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TranspId).HasColumnName("TRANSP_ID");
            });

            modelBuilder.Entity<GsPedidosComprasCancelamentos>(entity =>
            {
                entity.ToTable("GS_PEDIDOS_COMPRAS_CANCELAMENTOS");

                entity.HasIndex(e => new { e.Id, e.AssId })
                    .HasName("IX_PEDIDOS_COMPRAS_CANCELAMENTOS")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PccanDes)
                    .HasColumnName("PCCAN_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GsPedidosComprasCancelamentos)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PCCAN_ASS_ID");
            });

            modelBuilder.Entity<GsPedidosComprasCcusto>(entity =>
            {
                entity.HasKey(e => new { e.PedcompccId, e.AssId });

                entity.ToTable("GS_PEDIDOS_COMPRAS_CCUSTO");

                entity.HasIndex(e => e.CencusgrpId)
                    .HasName("Idx_CENCUSGRP_ID");

                entity.HasIndex(e => e.PedcompId)
                    .HasName("Idx_PEDCOMP_ID");

                entity.Property(e => e.PedcompccId).HasColumnName("PEDCOMPCC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.PedcompId).HasColumnName("PEDCOMP_ID");

                entity.Property(e => e.PedcompccPercentual)
                    .HasColumnName("PEDCOMPCC_PERCENTUAL")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompccValor)
                    .HasColumnName("PEDCOMPCC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedidosComprasEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.PedcompeptId, e.AssId })
                    .HasName("PK_GS_PEDIDOS_COMPRAS_EQUIPAMENTOS_1");

                entity.ToTable("GS_PEDIDOS_COMPRAS_EQUIPAMENTOS");

                entity.HasIndex(e => e.PedcompId)
                    .HasName("Idx_PEDCOMP_ID");

                entity.HasIndex(e => e.ReqcomiteId)
                    .HasName("Idx_REQCOMITE_ID");

                entity.Property(e => e.PedcompeptId).HasColumnName("PEDCOMPEPT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PedcompId).HasColumnName("PEDCOMP_ID");

                entity.Property(e => e.PedcompeptDes)
                    .HasColumnName("PEDCOMPEPT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PedcompeptMarca)
                    .HasColumnName("PEDCOMPEPT_MARCA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PedcompeptObs)
                    .HasColumnName("PEDCOMPEPT_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.PedcompeptQtd).HasColumnName("PEDCOMPEPT_QTD");

                entity.Property(e => e.PedcompeptQtdcom).HasColumnName("PEDCOMPEPT_QTDCOM");

                entity.Property(e => e.PedcompeptTot)
                    .HasColumnName("PEDCOMPEPT_TOT")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompeptTotcom)
                    .HasColumnName("PEDCOMPEPT_TOTCOM")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompeptVal)
                    .HasColumnName("PEDCOMPEPT_VAL")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompeptValcom)
                    .HasColumnName("PEDCOMPEPT_VALCOM")
                    .HasColumnType("money");

                entity.Property(e => e.ReqcomiteId).HasColumnName("REQCOMITE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedidosComprasMateriais>(entity =>
            {
                entity.HasKey(e => new { e.PedcompitematId, e.AssId });

                entity.ToTable("GS_PEDIDOS_COMPRAS_MATERIAIS");

                entity.HasIndex(e => e.PedcompId)
                    .HasName("Idx_PEDCOMP_ID");

                entity.HasIndex(e => e.ReqcomiteId)
                    .HasName("Idx_REQCOMITE_ID");

                entity.Property(e => e.PedcompitematId).HasColumnName("PEDCOMPITEMAT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PedcompId).HasColumnName("PEDCOMP_ID");

                entity.Property(e => e.PedcompitematPreco)
                    .HasColumnName("PEDCOMPITEMAT_PRECO")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompitematPrecocom)
                    .HasColumnName("PEDCOMPITEMAT_PRECOCOM")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompitematQtd).HasColumnName("PEDCOMPITEMAT_QTD");

                entity.Property(e => e.PedcompitematQtdcom).HasColumnName("PEDCOMPITEMAT_QTDCOM");

                entity.Property(e => e.PedcompitematTotal)
                    .HasColumnName("PEDCOMPITEMAT_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompitematTotalcom)
                    .HasColumnName("PEDCOMPITEMAT_TOTALCOM")
                    .HasColumnType("money");

                entity.Property(e => e.ReqcomiteId).HasColumnName("REQCOMITE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedidosComprasParcelas>(entity =>
            {
                entity.HasKey(e => new { e.PedcompparcId, e.AssId, e.PedcompId });

                entity.ToTable("GS_PEDIDOS_COMPRAS_PARCELAS");

                entity.HasIndex(e => e.PedcompId)
                    .HasName("Idx_PEDCOMP_ID");

                entity.Property(e => e.PedcompparcId).HasColumnName("PEDCOMPPARC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PedcompId).HasColumnName("PEDCOMP_ID");

                entity.Property(e => e.PedcompparcNum).HasColumnName("PEDCOMPPARC_NUM");

                entity.Property(e => e.PedcompparcValor)
                    .HasColumnName("PEDCOMPPARC_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.PedcompparcVencto)
                    .HasColumnName("PEDCOMPPARC_VENCTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedidosComprasSolicitacoes>(entity =>
            {
                entity.HasKey(e => new { e.PedcomsolId, e.PedcomId, e.AssId });

                entity.ToTable("GS_PEDIDOS_COMPRAS_SOLICITACOES");

                entity.HasIndex(e => e.PedcomId)
                    .HasName("Idx_PEDCOM_ID");

                entity.HasIndex(e => e.ReqcomId)
                    .HasName("Idx_REQCOM_ID");

                entity.HasIndex(e => e.ReqcomiteId)
                    .HasName("Idx_REQCOMITE_ID");

                entity.Property(e => e.PedcomsolId).HasColumnName("PEDCOMSOL_ID");

                entity.Property(e => e.PedcomId).HasColumnName("PEDCOM_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ReqcomId).HasColumnName("REQCOM_ID");

                entity.Property(e => e.ReqcomQtd).HasColumnName("REQCOM_QTD");

                entity.Property(e => e.ReqcomQtdcom).HasColumnName("REQCOM_QTDCOM");

                entity.Property(e => e.ReqcomTotal)
                    .HasColumnName("REQCOM_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.ReqcomTotalcom)
                    .HasColumnName("REQCOM_TOTALCOM")
                    .HasColumnType("money");

                entity.Property(e => e.ReqcomValor)
                    .HasColumnName("REQCOM_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.ReqcomValorcom)
                    .HasColumnName("REQCOM_VALORCOM")
                    .HasColumnType("money");

                entity.Property(e => e.ReqcomiteId).HasColumnName("REQCOMITE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedidosVendas>(entity =>
            {
                entity.HasKey(e => new { e.PedvenId, e.AssId });

                entity.ToTable("GS_PEDIDOS_VENDAS");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.HasIndex(e => e.PedvenDataprov)
                    .HasName("Idx_PEDVEN_DATAPROV");

                entity.HasIndex(e => e.PedvenNum)
                    .HasName("Idx_PEDVEN_NUM");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.PedvenId).HasColumnName("PEDVEN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.ConpagId).HasColumnName("CONPAG_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.PedVenStatus).HasColumnName("PED_VEN_STATUS");

                entity.Property(e => e.PedvenCondpag)
                    .HasColumnName("PEDVEN_CONDPAG")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PedvenDataprov)
                    .HasColumnName("PEDVEN_DATAPROV")
                    .HasColumnType("datetime");

                entity.Property(e => e.PedvenEvento)
                    .HasColumnName("PEDVEN_EVENTO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PedvenNum).HasColumnName("PEDVEN_NUM");

                entity.Property(e => e.PedvenObs)
                    .HasColumnName("PEDVEN_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.PedvenPednum)
                    .HasColumnName("PEDVEN_PEDNUM")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PedvenQtde).HasColumnName("PEDVEN_QTDE");

                entity.Property(e => e.PedvenSit).HasColumnName("PEDVEN_SIT");

                entity.Property(e => e.PedvenValor).HasColumnName("PEDVEN_VALOR");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedidosVendasEquipamentos>(entity =>
            {
                entity.HasKey(e => new { e.PedveneqtId, e.AssId });

                entity.ToTable("GS_PEDIDOS_VENDAS_EQUIPAMENTOS");

                entity.HasIndex(e => e.EqtserId)
                    .HasName("Idx_EQTSER_ID");

                entity.HasIndex(e => e.PedvenId)
                    .HasName("Idx_PEDVEN_ID");

                entity.Property(e => e.PedveneqtId).HasColumnName("PEDVENEQT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqtserId).HasColumnName("EQTSER_ID");

                entity.Property(e => e.PedvenId).HasColumnName("PEDVEN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPedidosVendasParcelas>(entity =>
            {
                entity.HasKey(e => new { e.PedvenparId, e.AssId });

                entity.ToTable("GS_PEDIDOS_VENDAS_PARCELAS");

                entity.HasIndex(e => e.PedvenId)
                    .HasName("Idx_PEDVEN_ID");

                entity.Property(e => e.PedvenparId).HasColumnName("PEDVENPAR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PedvenId).HasColumnName("PEDVEN_ID");

                entity.Property(e => e.PedvenparNum).HasColumnName("PEDVENPAR_NUM");

                entity.Property(e => e.PedvenparPrazo).HasColumnName("PEDVENPAR_PRAZO");

                entity.Property(e => e.PedvenparValor)
                    .HasColumnName("PEDVENPAR_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.PedvenparVenc)
                    .HasColumnName("PEDVENPAR_VENC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPlanocontasContas>(entity =>
            {
                entity.HasKey(e => new { e.PlnctsctsId, e.AssId });

                entity.ToTable("GS_PLANOCONTAS_CONTAS");

                entity.HasIndex(e => e.PlnctssubgrpId)
                    .HasName("Idx_PLNCTSSUBGRP_ID");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Id26)
                    .HasColumnName("ID26")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctsctsDes)
                    .HasColumnName("PLNCTSCTS_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctsctsSit).HasColumnName("PLNCTSCTS_SIT");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPlanocontasGrupos>(entity =>
            {
                entity.HasKey(e => new { e.PlnctsgrpId, e.AssId })
                    .HasName("PK_GS_PLANOCONTAS_GRUPOS_1");

                entity.ToTable("GS_PLANOCONTAS_GRUPOS");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Id26)
                    .HasColumnName("ID26")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctsgrpCod).HasColumnName("PLNCTSGRP_COD");

                entity.Property(e => e.PlnctsgrpDes)
                    .HasColumnName("PLNCTSGRP_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctsgrpLo).HasColumnName("PLNCTSGRP_LO");

                entity.Property(e => e.PlnctsgrpSit)
                    .HasColumnName("PLNCTSGRP_SIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PlnctsgrpTipo).HasColumnName("PLNCTSGRP_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPlanocontasSetor>(entity =>
            {
                entity.ToTable("GS_PLANOCONTAS_SETOR");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.GsAssociadosEmpresasSetores)
                    .WithMany(p => p.GsPlanocontasSetor)
                    .HasForeignKey(d => new { d.AssempsetId, d.AssId, d.EmpId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PLNSETOR_ASS_EMP_SET");
            });

            modelBuilder.Entity<GsPlanocontasSubcontas>(entity =>
            {
                entity.HasKey(e => new { e.PlnctssubctsId, e.AssId });

                entity.ToTable("GS_PLANOCONTAS_SUBCONTAS");

                entity.HasIndex(e => e.PlnctsctsId)
                    .HasName("Idx_PLNCTSCTS_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Id26)
                    .HasColumnName("ID26")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctssubctsDes)
                    .HasColumnName("PLNCTSSUBCTS_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctssubctsSit).HasColumnName("PLNCTSSUBCTS_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPlanocontasSubgrupos>(entity =>
            {
                entity.HasKey(e => new { e.PlnctssubgrpId, e.AssId })
                    .HasName("PK_GS_PLANOCONTAS_SUBGRUPOS_1");

                entity.ToTable("GS_PLANOCONTAS_SUBGRUPOS");

                entity.HasIndex(e => e.PlnctsgrpId)
                    .HasName("Idx_PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubgrpCod).HasColumnName("PLNCTSSUBGRP_COD");

                entity.Property(e => e.PlnctssubgrpDes)
                    .HasColumnName("PLNCTSSUBGRP_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctssubgrpSit).HasColumnName("PLNCTSSUBGRP_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPlanosContasNfeRag>(entity =>
            {
                entity.HasKey(e => e.PlcNfeId);

                entity.ToTable("GS_PLANOS_CONTAS_NFE_RAG");

                entity.Property(e => e.PlcNfeId).HasColumnName("PLC_NFE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPrestacaoContas>(entity =>
            {
                entity.HasKey(e => new { e.PresconId, e.AssId });

                entity.ToTable("GS_PRESTACAO_CONTAS");

                entity.HasIndex(e => e.EvtId)
                    .HasName("Idx_EVT_ID");

                entity.HasIndex(e => e.MovbanId)
                    .HasName("Idx_MOVBAN_ID");

                entity.Property(e => e.PresconId).HasColumnName("PRESCON_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AdievtId).HasColumnName("ADIEVT_ID");

                entity.Property(e => e.CptId).HasColumnName("CPT_ID");

                entity.Property(e => e.CrtId).HasColumnName("CRT_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.MovbanId).HasColumnName("MOVBAN_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.PreconData)
                    .HasColumnName("PRECON_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.PreconNumprecon).HasColumnName("PRECON_NUMPRECON");

                entity.Property(e => e.PreconRec).HasColumnName("PRECON_REC");

                entity.Property(e => e.PreconSit).HasColumnName("PRECON_SIT");

                entity.Property(e => e.PreconTipo).HasColumnName("PRECON_TIPO");

                entity.Property(e => e.PreconValdin)
                    .HasColumnName("PRECON_VALDIN")
                    .HasColumnType("money");

                entity.Property(e => e.PreconVale).HasColumnName("PRECON_VALE");

                entity.Property(e => e.PreconValor)
                    .HasColumnName("PRECON_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.PreconValorpago)
                    .HasColumnName("PRECON_VALORPAGO")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPrestacaoContasItens>(entity =>
            {
                entity.HasKey(e => new { e.PresconiteId, e.AssId });

                entity.ToTable("GS_PRESTACAO_CONTAS_ITENS");

                entity.Property(e => e.PresconiteId).HasColumnName("PRESCONITE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CattitId).HasColumnName("CATTIT_ID");

                entity.Property(e => e.PresconId).HasColumnName("PRESCON_ID");

                entity.Property(e => e.PresconiteData)
                    .HasColumnName("PRESCONITE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.PresconiteHist)
                    .HasColumnName("PRESCONITE_HIST")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PresconiteNumrec)
                    .HasColumnName("PRESCONITE_NUMREC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PresconiteValor)
                    .HasColumnName("PRESCONITE_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.SubcattitId).HasColumnName("SUBCATTIT_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsPrivilegios>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_PRIVILEGIOS");

                entity.HasIndex(e => e.UseprvGrp)
                    .HasName("Idx_USEPRV_GRP");

                entity.HasIndex(e => e.UseprvId)
                    .HasName("Idx_USEPRV_ID");

                entity.HasIndex(e => e.UseprvMod)
                    .HasName("Idx_USEPRV_MOD");

                entity.Property(e => e.LicregId).HasColumnName("LICREG_ID");

                entity.Property(e => e.LogForm)
                    .HasColumnName("LOG_FORM")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LogMacadress)
                    .HasColumnName("LOG_MACADRESS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseprvDes)
                    .HasColumnName("USEPRV_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UseprvGrp).HasColumnName("USEPRV_GRP");

                entity.Property(e => e.UseprvId).HasColumnName("USEPRV_ID");

                entity.Property(e => e.UseprvMod)
                    .HasColumnName("USEPRV_MOD")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UseprvObservacao)
                    .HasColumnName("USEPRV_OBSERVACAO")
                    .HasColumnType("text");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsPrivilegiosUsuarios>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_PRIVILEGIOS_USUARIOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.HasIndex(e => e.UseprvGrp)
                    .HasName("Idx_USEPRV_GRP");

                entity.HasIndex(e => e.UseprvId)
                    .HasName("Idx_USEPRV_ID");

                entity.HasIndex(e => e.UseprvMod)
                    .HasName("Idx_USEPRV_MOD");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.LicregId).HasColumnName("LICREG_ID");

                entity.Property(e => e.LogForm)
                    .HasColumnName("LOG_FORM")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LogMacadress)
                    .HasColumnName("LOG_MACADRESS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.UseprvDes)
                    .HasColumnName("USEPRV_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UseprvGrp).HasColumnName("USEPRV_GRP");

                entity.Property(e => e.UseprvId).HasColumnName("USEPRV_ID");

                entity.Property(e => e.UseprvIte).HasColumnName("USEPRV_ITE");

                entity.Property(e => e.UseprvMod)
                    .HasColumnName("USEPRV_MOD")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UseprvSit).HasColumnName("USEPRV_SIT");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsRagAtualizacao>(entity =>
            {
                entity.HasKey(e => new { e.AtuverId, e.AssId });

                entity.ToTable("GS_RAG_ATUALIZACAO");

                entity.Property(e => e.AtuverId).HasColumnName("ATUVER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AtuverData)
                    .HasColumnName("ATUVER_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.AtuverFile)
                    .HasColumnName("ATUVER_FILE")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagAtualizacaoGestor>(entity =>
            {
                entity.HasKey(e => new { e.AtgId, e.AssId });

                entity.ToTable("GS_RAG_ATUALIZACAO_GESTOR");

                entity.Property(e => e.AtgId).HasColumnName("ATG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AtgAtivo).HasColumnName("ATG_ATIVO");

                entity.Property(e => e.AtgFtpdir)
                    .HasColumnName("ATG_FTPDIR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AtgFtphost)
                    .HasColumnName("ATG_FTPHOST")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AtgFtppass)
                    .HasColumnName("ATG_FTPPASS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AtgFtpuser)
                    .HasColumnName("ATG_FTPUSER")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.AtgNome)
                    .HasColumnName("ATG_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagAvdeb02092014170945>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_RAG_AVDEB02092014170945");

                entity.Property(e => e.AvdDatvct)
                    .HasColumnName("AVD_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AvdId)
                    .HasColumnName("AVD_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AvdParc).HasColumnName("AVD_PARC");

                entity.Property(e => e.AvdValbol).HasColumnName("AVD_VALBOL");

                entity.Property(e => e.AvdValjur).HasColumnName("AVD_VALJUR");

                entity.Property(e => e.AvdValmul).HasColumnName("AVD_VALMUL");

                entity.Property(e => e.AvdValsub).HasColumnName("AVD_VALSUB");

                entity.Property(e => e.AvdValtot).HasColumnName("AVD_VALTOT");
            });

            modelBuilder.Entity<GsRagAvdeb09082019140637>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_RAG_AVDEB09082019140637");

                entity.Property(e => e.AvdAtraso).HasColumnName("AVD_ATRASO");

                entity.Property(e => e.AvdCon).HasColumnName("AVD_CON");

                entity.Property(e => e.AvdCustas).HasColumnName("AVD_CUSTAS");

                entity.Property(e => e.AvdDatvct)
                    .HasColumnName("AVD_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AvdDebcre).HasColumnName("AVD_DEBCRE");

                entity.Property(e => e.AvdDesc).HasColumnName("AVD_DESC");

                entity.Property(e => e.AvdForma).HasColumnName("AVD_FORMA");

                entity.Property(e => e.AvdId)
                    .HasColumnName("AVD_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AvdOpe).HasColumnName("AVD_OPE");

                entity.Property(e => e.AvdParc).HasColumnName("AVD_PARC");

                entity.Property(e => e.AvdTxOpe).HasColumnName("AVD_TX_OPE");

                entity.Property(e => e.AvdValbol).HasColumnName("AVD_VALBOL");

                entity.Property(e => e.AvdValjur).HasColumnName("AVD_VALJUR");

                entity.Property(e => e.AvdValmul).HasColumnName("AVD_VALMUL");

                entity.Property(e => e.AvdValsub).HasColumnName("AVD_VALSUB");

                entity.Property(e => e.AvdValtot).HasColumnName("AVD_VALTOT");
            });

            modelBuilder.Entity<GsRagAvdeb23032016154340>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_RAG_AVDEB23032016154340");

                entity.Property(e => e.AvdAtraso).HasColumnName("AVD_ATRASO");

                entity.Property(e => e.AvdCon).HasColumnName("AVD_CON");

                entity.Property(e => e.AvdCustas).HasColumnName("AVD_CUSTAS");

                entity.Property(e => e.AvdDatvct)
                    .HasColumnName("AVD_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AvdDebcre).HasColumnName("AVD_DEBCRE");

                entity.Property(e => e.AvdDesc).HasColumnName("AVD_DESC");

                entity.Property(e => e.AvdForma).HasColumnName("AVD_FORMA");

                entity.Property(e => e.AvdId)
                    .HasColumnName("AVD_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AvdOpe).HasColumnName("AVD_OPE");

                entity.Property(e => e.AvdParc).HasColumnName("AVD_PARC");

                entity.Property(e => e.AvdTxOpe).HasColumnName("AVD_TX_OPE");

                entity.Property(e => e.AvdValbol).HasColumnName("AVD_VALBOL");

                entity.Property(e => e.AvdValjur).HasColumnName("AVD_VALJUR");

                entity.Property(e => e.AvdValmul).HasColumnName("AVD_VALMUL");

                entity.Property(e => e.AvdValsub).HasColumnName("AVD_VALSUB");

                entity.Property(e => e.AvdValtot).HasColumnName("AVD_VALTOT");
            });

            modelBuilder.Entity<GsRagAvdeb26112015104240>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_RAG_AVDEB26112015104240");

                entity.Property(e => e.AvdAtraso).HasColumnName("AVD_ATRASO");

                entity.Property(e => e.AvdCon).HasColumnName("AVD_CON");

                entity.Property(e => e.AvdCustas).HasColumnName("AVD_CUSTAS");

                entity.Property(e => e.AvdDatvct)
                    .HasColumnName("AVD_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AvdDebcre).HasColumnName("AVD_DEBCRE");

                entity.Property(e => e.AvdDesc).HasColumnName("AVD_DESC");

                entity.Property(e => e.AvdForma).HasColumnName("AVD_FORMA");

                entity.Property(e => e.AvdId)
                    .HasColumnName("AVD_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AvdOpe).HasColumnName("AVD_OPE");

                entity.Property(e => e.AvdParc).HasColumnName("AVD_PARC");

                entity.Property(e => e.AvdTxOpe).HasColumnName("AVD_TX_OPE");

                entity.Property(e => e.AvdValbol).HasColumnName("AVD_VALBOL");

                entity.Property(e => e.AvdValjur).HasColumnName("AVD_VALJUR");

                entity.Property(e => e.AvdValmul).HasColumnName("AVD_VALMUL");

                entity.Property(e => e.AvdValsub).HasColumnName("AVD_VALSUB");

                entity.Property(e => e.AvdValtot).HasColumnName("AVD_VALTOT");
            });

            modelBuilder.Entity<GsRagAvdeb28012016163405>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_RAG_AVDEB28012016163405");

                entity.Property(e => e.AvdAtraso).HasColumnName("AVD_ATRASO");

                entity.Property(e => e.AvdCon).HasColumnName("AVD_CON");

                entity.Property(e => e.AvdCustas).HasColumnName("AVD_CUSTAS");

                entity.Property(e => e.AvdDatvct)
                    .HasColumnName("AVD_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AvdDebcre).HasColumnName("AVD_DEBCRE");

                entity.Property(e => e.AvdDesc).HasColumnName("AVD_DESC");

                entity.Property(e => e.AvdForma).HasColumnName("AVD_FORMA");

                entity.Property(e => e.AvdId)
                    .HasColumnName("AVD_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AvdOpe).HasColumnName("AVD_OPE");

                entity.Property(e => e.AvdParc).HasColumnName("AVD_PARC");

                entity.Property(e => e.AvdTxOpe).HasColumnName("AVD_TX_OPE");

                entity.Property(e => e.AvdValbol).HasColumnName("AVD_VALBOL");

                entity.Property(e => e.AvdValjur).HasColumnName("AVD_VALJUR");

                entity.Property(e => e.AvdValmul).HasColumnName("AVD_VALMUL");

                entity.Property(e => e.AvdValsub).HasColumnName("AVD_VALSUB");

                entity.Property(e => e.AvdValtot).HasColumnName("AVD_VALTOT");
            });

            modelBuilder.Entity<GsRagAvisoAux>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("GS_RAG_AVISO_AUX");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AvbEmail)
                    .HasColumnName("AVB_EMAIL")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.AvbId)
                    .HasColumnName("AVB_ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AvbSit).HasColumnName("AVB_SIT");

                entity.Property(e => e.AviId).HasColumnName("AVI_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseEnv).HasColumnName("USE_ENV");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsRagAvisoDb>(entity =>
            {
                entity.HasKey(e => e.AviId)
                    .HasName("PK__GS_RAG_A__81FB791E2A170C8B");

                entity.ToTable("GS_RAG_AVISO_DB");

                entity.Property(e => e.AviId).HasColumnName("AVI_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AviContato)
                    .HasColumnName("AVI_CONTATO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AviCustas)
                    .HasColumnName("AVI_CUSTAS")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AviDatemi)
                    .HasColumnName("AVI_DATEMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.AviDatvct)
                    .HasColumnName("AVI_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AviForma).HasColumnName("AVI_FORMA");

                entity.Property(e => e.AviMsg)
                    .HasColumnName("AVI_MSG")
                    .HasMaxLength(1500)
                    .IsUnicode(false);

                entity.Property(e => e.AviObs)
                    .HasColumnName("AVI_OBS")
                    .HasMaxLength(1500)
                    .IsUnicode(false);

                entity.Property(e => e.AviSit)
                    .HasColumnName("AVI_SIT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AviValdes).HasColumnName("AVI_VALDES");

                entity.Property(e => e.AviValtot).HasColumnName("AVI_VALTOT");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagAvisoDbAux>(entity =>
            {
                entity.HasKey(e => e.AuxId)
                    .HasName("PK__GS_RAG_A__41702CFE078CEA5D");

                entity.ToTable("GS_RAG_AVISO_DB_AUX");

                entity.Property(e => e.AuxId).HasColumnName("AUX_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AviId).HasColumnName("AVI_ID");

                entity.Property(e => e.CrpId).HasColumnName("CRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagAvisoDbParcelas>(entity =>
            {
                entity.HasKey(e => e.AvdId)
                    .HasName("PK__GS_RAG_A__3A0D741B31B82E53");

                entity.ToTable("GS_RAG_AVISO_DB_PARCELAS");

                entity.Property(e => e.AvdId).HasColumnName("AVD_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AvdCon)
                    .HasColumnName("AVD_CON")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AvdCustas).HasColumnName("AVD_CUSTAS");

                entity.Property(e => e.AvdDatvct)
                    .HasColumnName("AVD_DATVCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.AvdDebcre)
                    .HasColumnName("AVD_DEBCRE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AvdDesc)
                    .HasColumnName("AVD_DESC")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AvdForma)
                    .HasColumnName("AVD_FORMA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AvdOpe)
                    .HasColumnName("AVD_OPE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AvdParc).HasColumnName("AVD_PARC");

                entity.Property(e => e.AvdTxOpe)
                    .HasColumnName("AVD_TX_OPE")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AvdValbol).HasColumnName("AVD_VALBOL");

                entity.Property(e => e.AvdValjur).HasColumnName("AVD_VALJUR");

                entity.Property(e => e.AvdValmul).HasColumnName("AVD_VALMUL");

                entity.Property(e => e.AvdValsub).HasColumnName("AVD_VALSUB");

                entity.Property(e => e.AvdValtot).HasColumnName("AVD_VALTOT");

                entity.Property(e => e.AviId).HasColumnName("AVI_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.HasOne(d => d.Avi)
                    .WithMany(p => p.GsRagAvisoDbParcelas)
                    .HasForeignKey(d => d.AviId)
                    .HasConstraintName("FK_RAG_AVISO_DB_PARCELAS");
            });

            modelBuilder.Entity<GsRagCobrancaNfe>(entity =>
            {
                entity.HasKey(e => e.CobnfeId);

                entity.ToTable("GS_RAG_COBRANCA_NFE");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.TabnfeId)
                    .HasName("Idx_TABNFE_ID");

                entity.Property(e => e.CobnfeId)
                    .HasColumnName("COBNFE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CobnfeCompetencia)
                    .HasColumnName("COBNFE_COMPETENCIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CobnfeQtdeBase).HasColumnName("COBNFE_QTDE_BASE");

                entity.Property(e => e.CobnfeQtdeNfeExtra).HasColumnName("COBNFE_QTDE_NFE_EXTRA");

                entity.Property(e => e.CobnfeValorCobrado).HasColumnName("COBNFE_VALOR_COBRADO");

                entity.Property(e => e.CobnfeValorExtraCobrado).HasColumnName("COBNFE_VALOR_EXTRA_COBRADO");

                entity.Property(e => e.CobnfeValorMensal).HasColumnName("COBNFE_VALOR_MENSAL");

                entity.Property(e => e.CobnfeValorNfeExtra).HasColumnName("COBNFE_VALOR_NFE_EXTRA");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabnfeId).HasColumnName("TABNFE_ID");
            });

            modelBuilder.Entity<GsRagControleDesenvolvimento>(entity =>
            {
                entity.HasKey(e => new { e.DsvId, e.AssId, e.FunId });

                entity.ToTable("GS_RAG_CONTROLE_DESENVOLVIMENTO");

                entity.Property(e => e.DsvId).HasColumnName("DSV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.DsvApostila).HasColumnName("DSV_APOSTILA");

                entity.Property(e => e.DsvDatfimprev)
                    .HasColumnName("DSV_DATFIMPREV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DsvDatfimreal)
                    .HasColumnName("DSV_DATFIMREAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DsvDatiniprev)
                    .HasColumnName("DSV_DATINIPREV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DsvDatinireal)
                    .HasColumnName("DSV_DATINIREAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DsvDes)
                    .HasColumnName("DSV_DES")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.DsvHelp).HasColumnName("DSV_HELP");

                entity.Property(e => e.DsvInfo)
                    .HasColumnName("DSV_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.DsvMod)
                    .HasColumnName("DSV_MOD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DsvSit).HasColumnName("DSV_SIT");

                entity.Property(e => e.DsvTela).HasColumnName("DSV_TELA");

                entity.Property(e => e.DsvTeste).HasColumnName("DSV_TESTE");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagControleDesenvolvimentoCom>(entity =>
            {
                entity.HasKey(e => new { e.DsvcomId, e.DsvId, e.AssId });

                entity.ToTable("GS_RAG_CONTROLE_DESENVOLVIMENTO_COM");

                entity.Property(e => e.DsvcomId).HasColumnName("DSVCOM_ID");

                entity.Property(e => e.DsvId).HasColumnName("DSV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DsvSit).HasColumnName("DSV_SIT");

                entity.Property(e => e.DsvcomInf)
                    .HasColumnName("DSVCOM_INF")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagDatacenter>(entity =>
            {
                entity.HasKey(e => e.DcId);

                entity.ToTable("GS_RAG_DATACENTER");

                entity.Property(e => e.DcId)
                    .HasColumnName("DC_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.DcDatabase)
                    .HasColumnName("DC_DATABASE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DcHostname)
                    .HasColumnName("DC_HOSTNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DcPassword)
                    .HasColumnName("DC_PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DcUsername)
                    .HasColumnName("DC_USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsRagDesenvolvimento>(entity =>
            {
                entity.HasKey(e => new { e.ModprgId, e.AssId });

                entity.ToTable("GS_RAG_DESENVOLVIMENTO");

                entity.HasIndex(e => e.PrgId)
                    .HasName("Idx_PRG_ID");

                entity.Property(e => e.ModprgId).HasColumnName("MODPRG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ModprgDatofcini)
                    .HasColumnName("MODPRG_DATOFCINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModprgDatofcter)
                    .HasColumnName("MODPRG_DATOFCTER")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModprgDatprvini)
                    .HasColumnName("MODPRG_DATPRVINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModprgDatprvter)
                    .HasColumnName("MODPRG_DATPRVTER")
                    .HasColumnType("datetime");

                entity.Property(e => e.ModprgDes)
                    .HasColumnName("MODPRG_DES")
                    .HasColumnType("text");

                entity.Property(e => e.ModprgNome)
                    .HasColumnName("MODPRG_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModprgSit).HasColumnName("MODPRG_SIT");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagDriverImpressora>(entity =>
            {
                entity.HasKey(e => new { e.DrvimpId, e.AssId });

                entity.ToTable("GS_RAG_DRIVER_IMPRESSORA");

                entity.HasIndex(e => e.DrvimpNome)
                    .HasName("Idx_DRVIMP_NOME");

                entity.Property(e => e.DrvimpId).HasColumnName("DRVIMP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DrvimpExp).HasColumnName("DRVIMP_EXP");

                entity.Property(e => e.DrvimpNome)
                    .HasColumnName("DRVIMP_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DrvimpNor).HasColumnName("DRVIMP_NOR");

                entity.Property(e => e.DrvimpRed).HasColumnName("DRVIMP_RED");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagFaq>(entity =>
            {
                entity.HasKey(e => new { e.RagfaqId, e.AssId });

                entity.ToTable("GS_RAG_FAQ");

                entity.HasIndex(e => e.AssempsetId)
                    .HasName("Idx_ASSEMPSET_ID");

                entity.HasIndex(e => e.RagfaqDescr)
                    .HasName("Idx_RAGFAQ_DESCR");

                entity.HasIndex(e => e.RagfaqTitulo)
                    .HasName("Idx_RAGFAQ_TITULO");

                entity.HasIndex(e => e.RaggrpfaqId)
                    .HasName("Idx_RAGGRPFAQ_ID");

                entity.HasIndex(e => e.RagsubgrpfaqId)
                    .HasName("Idx_RAGSUBGRPFAQ_ID");

                entity.Property(e => e.RagfaqId).HasColumnName("RAGFAQ_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.RagfaqAcesso).HasColumnName("RAGFAQ_ACESSO");

                entity.Property(e => e.RagfaqDescr)
                    .HasColumnName("RAGFAQ_DESCR")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.RagfaqHtml)
                    .HasColumnName("RAGFAQ_HTML")
                    .HasColumnType("text");

                entity.Property(e => e.RagfaqTitulo)
                    .HasColumnName("RAGFAQ_TITULO")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.RaggrpfaqId).HasColumnName("RAGGRPFAQ_ID");

                entity.Property(e => e.RagsubgrpfaqId).HasColumnName("RAGSUBGRPFAQ_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagFaqArquivo>(entity =>
            {
                entity.HasKey(e => e.RagfaqarqId);

                entity.ToTable("GS_RAG_FAQ_ARQUIVO");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.RagfaqId)
                    .HasName("Idx_RAGFAQ_ID");

                entity.Property(e => e.RagfaqarqId)
                    .HasColumnName("RAGFAQARQ_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RagfaqId).HasColumnName("RAGFAQ_ID");

                entity.Property(e => e.RagfaqarqArquivo)
                    .HasColumnName("RAGFAQARQ_ARQUIVO")
                    .HasMaxLength(1);

                entity.Property(e => e.RagfaqarqNome)
                    .HasColumnName("RAGFAQARQ_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RagfaqarqTamanho).HasColumnName("RAGFAQARQ_TAMANHO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagFaqLog>(entity =>
            {
                entity.HasKey(e => e.RagfaqlogId);

                entity.ToTable("GS_RAG_FAQ_LOG");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_RAGFAQ_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.RagfaqlogId)
                    .HasColumnName("RAGFAQLOG_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.RagfaqId).HasColumnName("RAGFAQ_ID");

                entity.Property(e => e.RagfaqlogTipo).HasColumnName("RAGFAQLOG_TIPO");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagFaqPrivilegiosGrupos>(entity =>
            {
                entity.HasKey(e => e.RagprivgrpId);

                entity.ToTable("GS_RAG_FAQ_PRIVILEGIOS_GRUPOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.RaggrpfaqId)
                    .HasName("Idx_RAGGRPFAQ_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.RagprivgrpId)
                    .HasColumnName("RAGPRIVGRP_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RaggrpfaqId).HasColumnName("RAGGRPFAQ_ID");

                entity.Property(e => e.RagprivgrpAlterar).HasColumnName("RAGPRIVGRP_ALTERAR");

                entity.Property(e => e.RagprivgrpVisualizar).HasColumnName("RAGPRIVGRP_VISUALIZAR");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsRagFaqPrivilegiosSetor>(entity =>
            {
                entity.HasKey(e => e.RagprivsetorId);

                entity.ToTable("GS_RAG_FAQ_PRIVILEGIOS_SETOR");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.AssempsetId)
                    .HasName("Idx_ASSEMPSET_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.RagprivsetorId)
                    .HasColumnName("RAGPRIVSETOR_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.RagprivsetorAlterar).HasColumnName("RAGPRIVSETOR_ALTERAR");

                entity.Property(e => e.RagprivsetorVisualizar).HasColumnName("RAGPRIVSETOR_VISUALIZAR");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsRagFaqPrivilegiosSubgrupos>(entity =>
            {
                entity.HasKey(e => e.RagprivsubgrpId);

                entity.ToTable("GS_RAG_FAQ_PRIVILEGIOS_SUBGRUPOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.RagsubgrpfaqId)
                    .HasName("Idx_RAGSUBGRPFAQ_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.RagprivsubgrpId)
                    .HasColumnName("RAGPRIVSUBGRP_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RagprivsubgrpAlterar).HasColumnName("RAGPRIVSUBGRP_ALTERAR");

                entity.Property(e => e.RagprivsubgrpVisualizar).HasColumnName("RAGPRIVSUBGRP_VISUALIZAR");

                entity.Property(e => e.RagsubgrpfaqId).HasColumnName("RAGSUBGRPFAQ_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsRagGruposFaq>(entity =>
            {
                entity.HasKey(e => new { e.RaggrpfaqId, e.AssId });

                entity.ToTable("GS_RAG_GRUPOS_FAQ");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.Property(e => e.RaggrpfaqId).HasColumnName("RAGGRPFAQ_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RaggrpfaqDes)
                    .HasColumnName("RAGGRPFAQ_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagImagens>(entity =>
            {
                entity.HasKey(e => new { e.RagimgId, e.AssId });

                entity.ToTable("GS_RAG_IMAGENS");

                entity.Property(e => e.RagimgId).HasColumnName("RAGIMG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RagimgArq)
                    .HasColumnName("RAGIMG_ARQ")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RagimgNome)
                    .HasColumnName("RAGIMG_NOME")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.RagimgTam).HasColumnName("RAGIMG_TAM");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagIndicesReajusteContratos>(entity =>
            {
                entity.ToTable("GS_RAG_INDICES_REAJUSTE_CONTRATOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IndAnoReajuste).HasColumnName("IND_ANO_REAJUSTE");

                entity.Property(e => e.IndMesReajuste)
                    .IsRequired()
                    .HasColumnName("IND_MES_REAJUSTE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IndNome)
                    .IsRequired()
                    .HasColumnName("IND_NOME")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IndValorReajuste).HasColumnName("IND_VALOR_REAJUSTE");

                entity.Property(e => e.NumMes).HasColumnName("NUM_MES");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");
            });

            modelBuilder.Entity<GsRagMensagens>(entity =>
            {
                entity.HasKey(e => e.MsgId);

                entity.ToTable("GS_RAG_MENSAGENS");

                entity.Property(e => e.MsgId).HasColumnName("MSG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.MsgAviso).HasColumnName("MSG_AVISO");

                entity.Property(e => e.MsgBloqueio).HasColumnName("MSG_BLOQUEIO");

                entity.Property(e => e.MsgDesclink)
                    .HasColumnName("MSG_DESCLINK")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsgDias).HasColumnName("MSG_DIAS");

                entity.Property(e => e.MsgDiasApos).HasColumnName("MSG_DIAS_APOS");

                entity.Property(e => e.MsgInfo)
                    .HasColumnName("MSG_INFO")
                    .HasMaxLength(1500)
                    .IsUnicode(false);

                entity.Property(e => e.MsgLink)
                    .HasColumnName("MSG_LINK")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MsgNome)
                    .HasColumnName("MSG_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.MsgSelecao).HasColumnName("MSG_SELECAO");

                entity.Property(e => e.MsgSobsel).HasColumnName("MSG_SOBSEL");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagMensagensParametros>(entity =>
            {
                entity.HasKey(e => e.PrmmsgId);

                entity.ToTable("GS_RAG_MENSAGENS_PARAMETROS");

                entity.Property(e => e.PrmmsgId).HasColumnName("PRMMSG_ID");

                entity.Property(e => e.MsgBxBoleto).HasColumnName("MSG_BX_BOLETO");

                entity.Property(e => e.MsgDiasApos).HasColumnName("MSG_DIAS_APOS");

                entity.Property(e => e.MsgId).HasColumnName("MSG_ID");

                entity.Property(e => e.MsgJuros).HasColumnName("MSG_JUROS");

                entity.Property(e => e.MsgMultas).HasColumnName("MSG_MULTAS");

                entity.Property(e => e.PrmmsgSup).HasColumnName("PRMMSG_SUP");

                entity.Property(e => e.SysDatalt)
                    .HasColumnName("SYS_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagOrcamentos>(entity =>
            {
                entity.HasKey(e => new { e.RagorcId, e.AssId });

                entity.ToTable("GS_RAG_ORCAMENTOS");

                entity.HasIndex(e => e.AssdocId1)
                    .HasName("Idx_ASSDOC_ID1");

                entity.HasIndex(e => e.AssdocId2)
                    .HasName("Idx_ASSDOC_ID2");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.EqpId)
                    .HasName("Idx_EQP_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.RagorcApresenta1Funid)
                    .HasName("Idx_RAGORC_APRESENTA1_FUNID");

                entity.HasIndex(e => e.RagorcApresentaFunid)
                    .HasName("Idx_RAGORC_APRESENTA_FUNID");

                entity.HasIndex(e => e.RagorcCarteiraFunid)
                    .HasName("Idx_RAGORC_CARTEIRA_FUNID");

                entity.HasIndex(e => e.RagorcData)
                    .HasName("Idx_RAGORC_DATA");

                entity.HasIndex(e => e.RagorcDatapr)
                    .HasName("Idx_RAGORC_DATAPR");

                entity.HasIndex(e => e.RagorcDatcan)
                    .HasName("Idx_RAGORC_DATCAN");

                entity.HasIndex(e => e.RagorcDatval)
                    .HasName("Idx_RAGORC_DATVAL");

                entity.HasIndex(e => e.RagorcFechamentoFunid)
                    .HasName("Idx_RAGORC_FECHAMENTO_FUNID");

                entity.HasIndex(e => e.RagorcIndicacaoFunid)
                    .HasName("Idx_RAGORC_INDICACAO_FUNID");

                entity.HasIndex(e => e.RagorcSit)
                    .HasName("Idx_RAGORC_SIT");

                entity.Property(e => e.RagorcId).HasColumnName("RAGORC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssdocId1).HasColumnName("ASSDOC_ID1");

                entity.Property(e => e.AssdocId2).HasColumnName("ASSDOC_ID2");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.ConbanId)
                    .HasColumnName("CONBAN_ID")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CttId).HasColumnName("CTT_ID");

                entity.Property(e => e.EqpId).HasColumnName("EQP_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.RagorcApresenta1Funid).HasColumnName("RAGORC_APRESENTA1_FUNID");

                entity.Property(e => e.RagorcApresentaFunid).HasColumnName("RAGORC_APRESENTA_FUNID");

                entity.Property(e => e.RagorcApresentaPorc).HasColumnName("RAGORC_APRESENTA_PORC");

                entity.Property(e => e.RagorcCarteiraFunid).HasColumnName("RAGORC_CARTEIRA_FUNID");

                entity.Property(e => e.RagorcCarteiraPorc).HasColumnName("RAGORC_CARTEIRA_PORC");

                entity.Property(e => e.RagorcCofins)
                    .HasColumnName("RAGORC_COFINS")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcContrato).HasColumnName("RAGORC_CONTRATO");

                entity.Property(e => e.RagorcCttdoc)
                    .HasColumnName("RAGORC_CTTDOC")
                    .HasColumnType("text");

                entity.Property(e => e.RagorcData)
                    .HasColumnName("RAGORC_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.RagorcDatacompra)
                    .HasColumnName("RAGORC_DATACOMPRA")
                    .HasColumnType("datetime");

                entity.Property(e => e.RagorcDatapr)
                    .HasColumnName("RAGORC_DATAPR")
                    .HasColumnType("datetime");

                entity.Property(e => e.RagorcDatcan)
                    .HasColumnName("RAGORC_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.RagorcDatcen).HasColumnName("RAGORC_DATCEN");

                entity.Property(e => e.RagorcDatman)
                    .HasColumnName("RAGORC_DATMAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.RagorcDatval)
                    .HasColumnName("RAGORC_DATVAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.RagorcDesconto).HasColumnName("RAGORC_DESCONTO");

                entity.Property(e => e.RagorcFechamentoFunid).HasColumnName("RAGORC_FECHAMENTO_FUNID");

                entity.Property(e => e.RagorcFechamentoPorc).HasColumnName("RAGORC_FECHAMENTO_PORC");

                entity.Property(e => e.RagorcFidelidade).HasColumnName("RAGORC_FIDELIDADE");

                entity.Property(e => e.RagorcFidlic).HasColumnName("RAGORC_FIDLIC");

                entity.Property(e => e.RagorcFidval)
                    .HasColumnName("RAGORC_FIDVAL")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcFilial).HasColumnName("RAGORC_FILIAL");

                entity.Property(e => e.RagorcHorcus).HasColumnName("RAGORC_HORCUS");

                entity.Property(e => e.RagorcIndicacaoFunid).HasColumnName("RAGORC_INDICACAO_FUNID");

                entity.Property(e => e.RagorcIndicacaoPorc).HasColumnName("RAGORC_INDICACAO_PORC");

                entity.Property(e => e.RagorcIrrf)
                    .HasColumnName("RAGORC_IRRF")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcMaqlic).HasColumnName("RAGORC_MAQLIC");

                entity.Property(e => e.RagorcMaqval)
                    .HasColumnName("RAGORC_MAQVAL")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcMespontualidade).HasColumnName("RAGORC_MESPONTUALIDADE");

                entity.Property(e => e.RagorcNumpar).HasColumnName("RAGORC_NUMPAR");

                entity.Property(e => e.RagorcOpetre).HasColumnName("RAGORC_OPETRE");

                entity.Property(e => e.RagorcOpeval)
                    .HasColumnName("RAGORC_OPEVAL")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcOrcdoc)
                    .HasColumnName("RAGORC_ORCDOC")
                    .HasColumnType("text");

                entity.Property(e => e.RagorcParmensred).HasColumnName("RAGORC_PARMENSRED");

                entity.Property(e => e.RagorcPercdes).HasColumnName("RAGORC_PERCDES");

                entity.Property(e => e.RagorcPercent).HasColumnName("RAGORC_PERCENT");

                entity.Property(e => e.RagorcPontualidade).HasColumnName("RAGORC_PONTUALIDADE");

                entity.Property(e => e.RagorcPrazomedio).HasColumnName("RAGORC_PRAZOMEDIO");

                entity.Property(e => e.RagorcQtdimp).HasColumnName("RAGORC_QTDIMP");

                entity.Property(e => e.RagorcQtdnf).HasColumnName("RAGORC_QTDNF");

                entity.Property(e => e.RagorcSerlic).HasColumnName("RAGORC_SERLIC");

                entity.Property(e => e.RagorcServal)
                    .HasColumnName("RAGORC_SERVAL")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcSimplesfed).HasColumnName("RAGORC_SIMPLESFED");

                entity.Property(e => e.RagorcSit).HasColumnName("RAGORC_SIT");

                entity.Property(e => e.RagorcSitimp).HasColumnName("RAGORC_SITIMP");

                entity.Property(e => e.RagorcTipo).HasColumnName("RAGORC_TIPO");

                entity.Property(e => e.RagorcTipperc).HasColumnName("RAGORC_TIPPERC");

                entity.Property(e => e.RagorcTipserv).HasColumnName("RAGORC_TIPSERV");

                entity.Property(e => e.RagorcTrehor).HasColumnName("RAGORC_TREHOR");

                entity.Property(e => e.RagorcTreval)
                    .HasColumnName("RAGORC_TREVAL")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValbruto)
                    .HasColumnName("RAGORC_VALBRUTO")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValcus)
                    .HasColumnName("RAGORC_VALCUS")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValdes)
                    .HasColumnName("RAGORC_VALDES")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValhorcus)
                    .HasColumnName("RAGORC_VALHORCUS")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValimp)
                    .HasColumnName("RAGORC_VALIMP")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValinstserv)
                    .HasColumnName("RAGORC_VALINSTSERV")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValmens)
                    .HasColumnName("RAGORC_VALMENS")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValor).HasColumnName("RAGORC_VALOR");

                entity.Property(e => e.RagorcValorsetup)
                    .HasColumnName("RAGORC_VALORSETUP")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValpagar)
                    .HasColumnName("RAGORC_VALPAGAR")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValparmensred)
                    .HasColumnName("RAGORC_VALPARMENSRED")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValsinal)
                    .HasColumnName("RAGORC_VALSINAL")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValsoft)
                    .HasColumnName("RAGORC_VALSOFT")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcValtot)
                    .HasColumnName("RAGORC_VALTOT")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcVlrcofins)
                    .HasColumnName("RAGORC_VLRCOFINS")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcVlrirrf)
                    .HasColumnName("RAGORC_VLRIRRF")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcVlrnf)
                    .HasColumnName("RAGORC_VLRNF")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcVlrtotnf)
                    .HasColumnName("RAGORC_VLRTOTNF")
                    .HasColumnType("money");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabimpValorHosp)
                    .HasColumnName("TABIMP_VALOR_HOSP")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValorSuporte)
                    .HasColumnName("TABIMP_VALOR_SUPORTE")
                    .HasColumnType("money");

                entity.Property(e => e.TabpagtoId).HasColumnName("TABPAGTO_ID");
            });

            modelBuilder.Entity<GsRagOrcamentosCustom>(entity =>
            {
                entity.HasKey(e => new { e.RagorccusId, e.RagorcId, e.AssId });

                entity.ToTable("GS_RAG_ORCAMENTOS_CUSTOM");

                entity.Property(e => e.RagorccusId).HasColumnName("RAGORCCUS_ID");

                entity.Property(e => e.RagorcId).HasColumnName("RAGORC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RagorccusGrau).HasColumnName("RAGORCCUS_GRAU");

                entity.Property(e => e.RagorccusHoras).HasColumnName("RAGORCCUS_HORAS");

                entity.Property(e => e.RagorccusModinfo)
                    .HasColumnName("RAGORCCUS_MODINFO")
                    .HasColumnType("text");

                entity.Property(e => e.RagorccusModulo)
                    .HasColumnName("RAGORCCUS_MODULO")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.RagorccusTotal)
                    .HasColumnName("RAGORCCUS_TOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.RagorccusValor).HasColumnName("RAGORCCUS_VALOR");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagOrcamentosEquipe>(entity =>
            {
                entity.HasKey(e => new { e.RagorcequipeId, e.AssId })
                    .HasName("GS_RAG_ORCAMENTOS_EQUIPE_PK");

                entity.ToTable("GS_RAG_ORCAMENTOS_EQUIPE");

                entity.HasIndex(e => e.EqpId)
                    .HasName("Idx_EQP_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.RagorcId)
                    .HasName("Idx_RAGORC_ID");

                entity.Property(e => e.RagorcequipeId).HasColumnName("RAGORCEQUIPE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EqpId).HasColumnName("EQP_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.RagorcId).HasColumnName("RAGORC_ID");

                entity.Property(e => e.RagorcequipePorc).HasColumnName("RAGORCEQUIPE_PORC");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagOrcamentosParcelas>(entity =>
            {
                entity.HasKey(e => new { e.RagorcparId, e.AssId });

                entity.ToTable("GS_RAG_ORCAMENTOS_PARCELAS");

                entity.Property(e => e.RagorcparId).HasColumnName("RAGORCPAR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RagorcId).HasColumnName("RAGORC_ID");

                entity.Property(e => e.RagorcparCofins)
                    .HasColumnName("RAGORCPAR_COFINS")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcparIrrf)
                    .HasColumnName("RAGORCPAR_IRRF")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcparNum).HasColumnName("RAGORCPAR_NUM");

                entity.Property(e => e.RagorcparPrz).HasColumnName("RAGORCPAR_PRZ");

                entity.Property(e => e.RagorcparVal)
                    .HasColumnName("RAGORCPAR_VAL")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcparValcon)
                    .HasColumnName("RAGORCPAR_VALCON")
                    .HasColumnType("money");

                entity.Property(e => e.RagorcparVct)
                    .HasColumnName("RAGORCPAR_VCT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagParcelamento>(entity =>
            {
                entity.HasKey(e => e.PctId);

                entity.ToTable("GS_RAG_PARCELAMENTO");

                entity.Property(e => e.PctId).HasColumnName("PCT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PctDes)
                    .HasColumnName("PCT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PctDiaVcto).HasColumnName("PCT_DIA_VCTO");

                entity.Property(e => e.PctParcelas).HasColumnName("PCT_PARCELAS");

                entity.Property(e => e.SysDatalt)
                    .HasColumnName("SYS_DATALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagParcelamentoItens>(entity =>
            {
                entity.HasKey(e => e.PciId);

                entity.ToTable("GS_RAG_PARCELAMENTO_ITENS");

                entity.Property(e => e.PciId).HasColumnName("PCI_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.PciCobranca)
                    .HasColumnName("PCI_COBRANCA")
                    .HasColumnType("money");

                entity.Property(e => e.PciJuros).HasColumnName("PCI_JUROS");

                entity.Property(e => e.PciMultas).HasColumnName("PCI_MULTAS");

                entity.Property(e => e.PciPar).HasColumnName("PCI_PAR");

                entity.Property(e => e.PciPrazo).HasColumnName("PCI_PRAZO");

                entity.Property(e => e.PctId).HasColumnName("PCT_ID");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagProgramacao>(entity =>
            {
                entity.HasKey(e => new { e.DesenId, e.AssId });

                entity.ToTable("GS_RAG_PROGRAMACAO");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.DesenAssunto)
                    .HasName("Idx_DESEN_ASSUNTO");

                entity.HasIndex(e => e.DesenDatent)
                    .HasName("Idx_DESEN_DATENT");

                entity.HasIndex(e => e.DesenDatprevent)
                    .HasName("Idx_DESEN_DATPREVENT");

                entity.HasIndex(e => e.DesenOrdem)
                    .HasName("Idx_DESEN_ORDEM");

                entity.HasIndex(e => e.DesenSit)
                    .HasName("Idx_DESEN_SIT");

                entity.HasIndex(e => e.DesenSubordem)
                    .HasName("Idx_DESEN_SUBORDEM");

                entity.HasIndex(e => e.DesenTipo)
                    .HasName("Idx_DESEN_TIPO");

                entity.HasIndex(e => e.PrgId)
                    .HasName("Idx_PRG_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.DesenAssunto)
                    .HasColumnName("DESEN_ASSUNTO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DesenCaminho)
                    .HasColumnName("DESEN_CAMINHO")
                    .HasColumnType("text");

                entity.Property(e => e.DesenCodcli)
                    .HasColumnName("DESEN_CODCLI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DesenContato)
                    .HasColumnName("DESEN_CONTATO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesenDatent)
                    .HasColumnName("DESEN_DATENT")
                    .HasColumnType("datetime");

                entity.Property(e => e.DesenDatexec)
                    .HasColumnName("DESEN_DATEXEC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DesenDatprevcli)
                    .HasColumnName("DESEN_DATPREVCLI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DesenDatprevent)
                    .HasColumnName("DESEN_DATPREVENT")
                    .HasColumnType("datetime");

                entity.Property(e => e.DesenDescMelhoria)
                    .HasColumnName("DESEN_DESC_MELHORIA")
                    .HasColumnType("text");

                entity.Property(e => e.DesenGravaprogramacao).HasColumnName("DESEN_GRAVAPROGRAMACAO");

                entity.Property(e => e.DesenImagem)
                    .HasColumnName("DESEN_IMAGEM")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesenInfodes)
                    .HasColumnName("DESEN_INFODES")
                    .HasColumnType("text");

                entity.Property(e => e.DesenInfoperacional)
                    .HasColumnName("DESEN_INFOPERACIONAL")
                    .HasColumnType("text");

                entity.Property(e => e.DesenInfosol)
                    .HasColumnName("DESEN_INFOSOL")
                    .HasColumnType("text");

                entity.Property(e => e.DesenInicio)
                    .HasColumnName("DESEN_INICIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DesenMenu1).HasColumnName("DESEN_MENU1");

                entity.Property(e => e.DesenMenu2).HasColumnName("DESEN_MENU2");

                entity.Property(e => e.DesenMenu3).HasColumnName("DESEN_MENU3");

                entity.Property(e => e.DesenMotivo)
                    .HasColumnName("DESEN_MOTIVO")
                    .HasColumnType("text");

                entity.Property(e => e.DesenOrdem).HasColumnName("DESEN_ORDEM");

                entity.Property(e => e.DesenPrioridade).HasColumnName("DESEN_PRIORIDADE");

                entity.Property(e => e.DesenProces1).HasColumnName("DESEN_PROCES1");

                entity.Property(e => e.DesenProces2).HasColumnName("DESEN_PROCES2");

                entity.Property(e => e.DesenProces3).HasColumnName("DESEN_PROCES3");

                entity.Property(e => e.DesenProces4).HasColumnName("DESEN_PROCES4");

                entity.Property(e => e.DesenProces5).HasColumnName("DESEN_PROCES5");

                entity.Property(e => e.DesenProces6).HasColumnName("DESEN_PROCES6");

                entity.Property(e => e.DesenSit).HasColumnName("DESEN_SIT");

                entity.Property(e => e.DesenSubordem).HasColumnName("DESEN_SUBORDEM");

                entity.Property(e => e.DesenTempoestim)
                    .HasColumnName("DESEN_TEMPOESTIM")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DesenTemporeal)
                    .HasColumnName("DESEN_TEMPOREAL")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DesenTipo).HasColumnName("DESEN_TIPO");

                entity.Property(e => e.DesenUrgente)
                    .HasColumnName("DESEN_URGENTE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DesenVersao)
                    .HasColumnName("DESEN_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DesenvComplexidade)
                    .HasColumnName("DESENV_COMPLEXIDADE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DesenvVersaoBuild)
                    .HasColumnName("DESENV_VERSAO_BUILD")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysProduto).HasColumnName("SYS_PRODUTO");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsRagProgramacaoApontamentos>(entity =>
            {
                entity.HasKey(e => new { e.ProgaponId, e.AssId });

                entity.ToTable("GS_RAG_PROGRAMACAO_APONTAMENTOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.DesenId)
                    .HasName("Idx_DESEN_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.ProgaponId).HasColumnName("PROGAPON_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.ProgaponDescricao)
                    .HasColumnName("PROGAPON_DESCRICAO")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagProgramacaoDetalhes>(entity =>
            {
                entity.HasKey(e => new { e.ProgdetId, e.AssId });

                entity.ToTable("GS_RAG_PROGRAMACAO_DETALHES");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.DesenId)
                    .HasName("Idx_DESEN_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.ProgdetId).HasColumnName("PROGDET_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.ProgdetDescricao)
                    .HasColumnName("PROGDET_DESCRICAO")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagProgramacaoItens>(entity =>
            {
                entity.HasKey(e => new { e.DesenitemId, e.DesenId });

                entity.ToTable("GS_RAG_PROGRAMACAO_ITENS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.Property(e => e.DesenitemId).HasColumnName("DESENITEM_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenitemDes)
                    .HasColumnName("DESENITEM_DES")
                    .HasColumnType("text");

                entity.Property(e => e.DesenitemInfo)
                    .HasColumnName("DESENITEM_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.DesenitemOrder).HasColumnName("DESENITEM_ORDER");

                entity.Property(e => e.DesenitemSit).HasColumnName("DESENITEM_SIT");

                entity.Property(e => e.DesenitemTempoatu).HasColumnName("DESENITEM_TEMPOATU");

                entity.Property(e => e.DesenitemTempoest).HasColumnName("DESENITEM_TEMPOEST");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagProgramacaoLog>(entity =>
            {
                entity.HasKey(e => new { e.ProglogId, e.AssId });

                entity.ToTable("GS_RAG_PROGRAMACAO_LOG");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.DesenId)
                    .HasName("Idx_DESEN_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.ProglogId).HasColumnName("PROGLOG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.DesenSit).HasColumnName("DESEN_SIT");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatfim)
                    .HasColumnName("SYS_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagProgramacaoTestes>(entity =>
            {
                entity.HasKey(e => new { e.ProgtesId, e.AssId });

                entity.ToTable("GS_RAG_PROGRAMACAO_TESTES");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.DesenId)
                    .HasName("Idx_DESEN_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.Property(e => e.ProgtesId).HasColumnName("PROGTES_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.DesenId).HasColumnName("DESEN_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.ProgtesDescricao)
                    .HasColumnName("PROGTES_DESCRICAO")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagProgramadores>(entity =>
            {
                entity.HasKey(e => new { e.PrgId, e.AssId });

                entity.ToTable("GS_RAG_PROGRAMADORES");

                entity.HasIndex(e => e.AssId)
                    .HasName("idx_id_funcprog");

                entity.Property(e => e.PrgId).HasColumnName("PRG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.PrgNome)
                    .HasColumnName("PRG_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrgSit).HasColumnName("PRG_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TrsId).HasColumnName("TRS_ID");

                entity.HasOne(d => d.GsFuncionarios)
                    .WithMany(p => p.GsRagProgramadores)
                    .HasForeignKey(d => new { d.FunId, d.AssId })
                    .HasConstraintName("FK_ID_ASS_FUNC_PROG");
            });

            modelBuilder.Entity<GsRagRamosAtividadesAssociados>(entity =>
            {
                entity.HasKey(e => new { e.RtvaId, e.AssId });

                entity.ToTable("GS_RAG_RAMOS_ATIVIDADES_ASSOCIADOS");

                entity.Property(e => e.RtvaId).HasColumnName("RTVA_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RtvaNome)
                    .IsRequired()
                    .HasColumnName("RTVA_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagSubgruposFaq>(entity =>
            {
                entity.HasKey(e => new { e.RagsubgrpfaqId, e.AssId });

                entity.ToTable("GS_RAG_SUBGRUPOS_FAQ");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.RaggrpfaqId)
                    .HasName("Idx_RAGGRPFAQ_ID");

                entity.Property(e => e.RagsubgrpfaqId).HasColumnName("RAGSUBGRPFAQ_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RaggrpfaqId).HasColumnName("RAGGRPFAQ_ID");

                entity.Property(e => e.RagsubgrpfaqDes)
                    .HasColumnName("RAGSUBGRPFAQ_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRagTabDescontos>(entity =>
            {
                entity.HasKey(e => new { e.TabdesId, e.AssId })
                    .HasName("PK_GS_RAG_TABELA_DESCONTOS");

                entity.ToTable("GS_RAG_TAB_DESCONTOS");

                entity.HasIndex(e => e.TabdesPercentual)
                    .HasName("Idx_TABDES_PERCENTUAL");

                entity.HasIndex(e => e.TabdesPrazomedio)
                    .HasName("Idx_TABDES_PRAZOMEDIO");

                entity.Property(e => e.TabdesId).HasColumnName("TABDES_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabdesPercentual).HasColumnName("TABDES_PERCENTUAL");

                entity.Property(e => e.TabdesPerclicadi).HasColumnName("TABDES_PERCLICADI");

                entity.Property(e => e.TabdesPercsinal).HasColumnName("TABDES_PERCSINAL");

                entity.Property(e => e.TabdesPrazomedio).HasColumnName("TABDES_PRAZOMEDIO");

                entity.Property(e => e.TabdesTipo).HasColumnName("TABDES_TIPO");
            });

            modelBuilder.Entity<GsRagTabDescontosConcessao>(entity =>
            {
                entity.HasKey(e => new { e.TabdesId, e.AssId });

                entity.ToTable("GS_RAG_TAB_DESCONTOS_CONCESSAO");

                entity.Property(e => e.TabdesId).HasColumnName("TABDES_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabdesPercentual).HasColumnName("TABDES_PERCENTUAL");

                entity.Property(e => e.TabdesPerclicadi).HasColumnName("TABDES_PERCLICADI");

                entity.Property(e => e.TabdesPercsinal).HasColumnName("TABDES_PERCSINAL");

                entity.Property(e => e.TabdesPrazomedio).HasColumnName("TABDES_PRAZOMEDIO");

                entity.Property(e => e.TabdesTipo).HasColumnName("TABDES_TIPO");
            });

            modelBuilder.Entity<GsRagTabDescontosGi>(entity =>
            {
                entity.HasKey(e => new { e.TabdesId, e.AssId })
                    .HasName("PK_GS_RAG_TABELA_DESCONTOS_GI");

                entity.ToTable("GS_RAG_TAB_DESCONTOS_GI");

                entity.Property(e => e.TabdesId).HasColumnName("TABDES_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabdesPercentual).HasColumnName("TABDES_PERCENTUAL");

                entity.Property(e => e.TabdesPerclicadi).HasColumnName("TABDES_PERCLICADI");

                entity.Property(e => e.TabdesPercsinal).HasColumnName("TABDES_PERCSINAL");

                entity.Property(e => e.TabdesPrazomedio).HasColumnName("TABDES_PRAZOMEDIO");

                entity.Property(e => e.TabdesTipo).HasColumnName("TABDES_TIPO");
            });

            modelBuilder.Entity<GsRagTabFidelidade>(entity =>
            {
                entity.HasKey(e => new { e.TabfidId, e.AssId });

                entity.ToTable("GS_RAG_TAB_FIDELIDADE");

                entity.Property(e => e.TabfidId).HasColumnName("TABFID_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabfidDesconto)
                    .HasColumnName("TABFID_DESCONTO")
                    .HasColumnType("money");

                entity.Property(e => e.TabfidMeses).HasColumnName("TABFID_MESES");

                entity.Property(e => e.TabfidSubproduto)
                    .HasColumnName("TABFID_SUBPRODUTO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TabfidValorCompra)
                    .HasColumnName("TABFID_VALOR_COMPRA")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsRagTabHospedagem>(entity =>
            {
                entity.HasKey(e => e.TabhospId);

                entity.ToTable("GS_RAG_TAB_HOSPEDAGEM");

                entity.Property(e => e.TabhospId)
                    .HasColumnName("TABHOSP_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Espaco).HasColumnName("ESPACO");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.Valor)
                    .HasColumnName("VALOR")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsRagTabImplantacao>(entity =>
            {
                entity.HasKey(e => new { e.TabimpId, e.AssId });

                entity.ToTable("GS_RAG_TAB_IMPLANTACAO");

                entity.Property(e => e.TabimpId).HasColumnName("TABIMP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabimpEstacao).HasColumnName("TABIMP_ESTACAO");

                entity.Property(e => e.TabimpImplantacao).HasColumnName("TABIMP_IMPLANTACAO");

                entity.Property(e => e.TabimpManutencao)
                    .HasColumnName("TABIMP_MANUTENCAO")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValor)
                    .HasColumnName("TABIMP_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValorHosp)
                    .HasColumnName("TABIMP_VALOR_HOSP")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValorSuporte)
                    .HasColumnName("TABIMP_VALOR_SUPORTE")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsRagTabImplantacaoGi>(entity =>
            {
                entity.HasKey(e => new { e.TabimpId, e.AssId });

                entity.ToTable("GS_RAG_TAB_IMPLANTACAO_GI");

                entity.Property(e => e.TabimpId).HasColumnName("TABIMP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabimpEstacao).HasColumnName("TABIMP_ESTACAO");

                entity.Property(e => e.TabimpImplantacao).HasColumnName("TABIMP_IMPLANTACAO");

                entity.Property(e => e.TabimpManutencao)
                    .HasColumnName("TABIMP_MANUTENCAO")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValor)
                    .HasColumnName("TABIMP_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValorHosp)
                    .HasColumnName("TABIMP_VALOR_HOSP")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValorSuporte)
                    .HasColumnName("TABIMP_VALOR_SUPORTE")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsRagTabImplantacaoSubproduto>(entity =>
            {
                entity.HasKey(e => new { e.TabimpId, e.AssId })
                    .HasName("PK_GS_RAG_TAB_IMPLANTACAO_SUPRODUTO");

                entity.ToTable("GS_RAG_TAB_IMPLANTACAO_SUBPRODUTO");

                entity.Property(e => e.TabimpId).HasColumnName("TABIMP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabimpEstacao).HasColumnName("TABIMP_ESTACAO");

                entity.Property(e => e.TabimpImplantacao).HasColumnName("TABIMP_IMPLANTACAO");

                entity.Property(e => e.TabimpSubproduto)
                    .HasColumnName("TABIMP_SUBPRODUTO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TabimpValor)
                    .HasColumnName("TABIMP_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValorHosp)
                    .HasColumnName("TABIMP_VALOR_HOSP")
                    .HasColumnType("money");

                entity.Property(e => e.TabimpValorSuporte)
                    .HasColumnName("TABIMP_VALOR_SUPORTE")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsRagTabPagamento>(entity =>
            {
                entity.HasKey(e => new { e.TabpagtoId, e.AssId })
                    .HasName("PK_GS_GS_RAG_TAB_PAGAMENTO");

                entity.ToTable("GS_RAG_TAB_PAGAMENTO");

                entity.Property(e => e.TabpagtoId).HasColumnName("TABPAGTO_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabpagtoDes)
                    .HasColumnName("TABPAGTO_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TabpagtoProduto).HasColumnName("TABPAGTO_PRODUTO");
            });

            modelBuilder.Entity<GsRagTabProdutos>(entity =>
            {
                entity.HasKey(e => new { e.TabproId, e.AssId });

                entity.ToTable("GS_RAG_TAB_PRODUTOS");

                entity.Property(e => e.TabproId).HasColumnName("TABPRO_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabproDescricao)
                    .HasColumnName("TABPRO_DESCRICAO")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsRagTabelaNfe>(entity =>
            {
                entity.HasKey(e => e.TabnfeId);

                entity.ToTable("GS_RAG_TABELA_NFE");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.Property(e => e.TabnfeId)
                    .HasColumnName("TABNFE_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabnfeDescricao)
                    .HasColumnName("TABNFE_DESCRICAO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TabnfeQtdeBase).HasColumnName("TABNFE_QTDE_BASE");

                entity.Property(e => e.TabnfeValorMensal).HasColumnName("TABNFE_VALOR_MENSAL");

                entity.Property(e => e.TabnfeValorNfeExtra).HasColumnName("TABNFE_VALOR_NFE_EXTRA");

                entity.Property(e => e.TabnfeValorSetup).HasColumnName("TABNFE_VALOR_SETUP");
            });

            modelBuilder.Entity<GsRagUsuariosContas>(entity =>
            {
                entity.HasKey(e => new { e.UsucontasId, e.AssId });

                entity.ToTable("GS_RAG_USUARIOS_CONTAS");

                entity.HasIndex(e => e.ConbanId)
                    .HasName("Idx_CONBAN_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.UsucontasId).HasColumnName("USUCONTAS_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");
            });

            modelBuilder.Entity<GsRagfaqRelacao>(entity =>
            {
                entity.HasKey(e => new { e.RagfaqrelId, e.AssId });

                entity.ToTable("GS_RAGFAQ_RELACAO");

                entity.HasIndex(e => e.RagfaqId1)
                    .HasName("Idx_RAGFAQ_ID1");

                entity.HasIndex(e => e.RagfaqId2)
                    .HasName("Idx_RAGFAQ_ID2");

                entity.Property(e => e.RagfaqrelId).HasColumnName("RAGFAQREL_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RagfaqId1).HasColumnName("RAGFAQ_ID1");

                entity.Property(e => e.RagfaqId2).HasColumnName("RAGFAQ_ID2");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRamoAtividade>(entity =>
            {
                entity.HasKey(e => new { e.RtvId, e.AssId });

                entity.ToTable("GS_RAMO_ATIVIDADE");

                entity.Property(e => e.RtvId).HasColumnName("RTV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RtvNome)
                    .HasColumnName("RTV_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRelatorios>(entity =>
            {
                entity.HasKey(e => e.RelId);

                entity.ToTable("GS_RELATORIOS");

                entity.Property(e => e.RelId)
                    .HasColumnName("REL_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RelGrpid).HasColumnName("REL_GRPID");

                entity.Property(e => e.RelMargdir).HasColumnName("REL_MARGDIR");

                entity.Property(e => e.RelMargesq).HasColumnName("REL_MARGESQ");

                entity.Property(e => e.RelMarginf).HasColumnName("REL_MARGINF");

                entity.Property(e => e.RelMargsup).HasColumnName("REL_MARGSUP");

                entity.Property(e => e.RelNome)
                    .HasColumnName("REL_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RelSubgrpid).HasColumnName("REL_SUBGRPID");

                entity.Property(e => e.RelTipopag).HasColumnName("REL_TIPOPAG");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRelatoriosTabelas>(entity =>
            {
                entity.HasKey(e => e.ReltabId);

                entity.ToTable("GS_RELATORIOS_TABELAS");

                entity.Property(e => e.ReltabId)
                    .HasColumnName("RELTAB_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.RelId).HasColumnName("REL_ID");

                entity.Property(e => e.ReltabFormheight).HasColumnName("RELTAB_FORMHEIGHT");

                entity.Property(e => e.ReltabFormleft).HasColumnName("RELTAB_FORMLEFT");

                entity.Property(e => e.ReltabFormtop).HasColumnName("RELTAB_FORMTOP");

                entity.Property(e => e.ReltabFormwidth).HasColumnName("RELTAB_FORMWIDTH");

                entity.Property(e => e.ReltabTablename)
                    .HasColumnName("RELTAB_TABLENAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRelogioAlarme>(entity =>
            {
                entity.HasKey(e => new { e.RelalrId, e.AssId, e.UseId });

                entity.ToTable("GS_RELOGIO_ALARME");

                entity.HasIndex(e => e.RelalrData)
                    .HasName("Idx_RELALR_DATA");

                entity.HasIndex(e => e.RelalrDia)
                    .HasName("Idx_RELALR_DIA");

                entity.HasIndex(e => e.RelalrTip)
                    .HasName("Idx_RELALR_TIP");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.RelalrId).HasColumnName("RELALR_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.RelalrData).HasColumnName("RELALR_DATA");

                entity.Property(e => e.RelalrDes)
                    .IsRequired()
                    .HasColumnName("RELALR_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RelalrDia).HasColumnName("RELALR_DIA");

                entity.Property(e => e.RelalrHora).HasColumnName("RELALR_HORA");

                entity.Property(e => e.RelalrMinuto).HasColumnName("RELALR_MINUTO");

                entity.Property(e => e.RelalrSegundo).HasColumnName("RELALR_SEGUNDO");

                entity.Property(e => e.RelalrSit).HasColumnName("RELALR_SIT");

                entity.Property(e => e.RelalrTip).HasColumnName("RELALR_TIP");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRequisicoesCompras>(entity =>
            {
                entity.HasKey(e => new { e.ReqcomId, e.AssId });

                entity.ToTable("GS_REQUISICOES_COMPRAS");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.ReqcomData)
                    .HasName("Idx_REQCOM_DATA");

                entity.HasIndex(e => e.ReqcomDataprov)
                    .HasName("Idx_REQCOM_DATAPROV");

                entity.HasIndex(e => e.ReqcomNumped)
                    .HasName("Idx_REQCOM_NUMPED");

                entity.HasIndex(e => e.ReqcomSit)
                    .HasName("Idx_REQCOM_SIT");

                entity.Property(e => e.ReqcomId).HasColumnName("REQCOM_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.ReqcomData)
                    .HasColumnName("REQCOM_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ReqcomDataprov)
                    .HasColumnName("REQCOM_DATAPROV")
                    .HasColumnType("datetime");

                entity.Property(e => e.ReqcomDatcanc)
                    .HasColumnName("REQCOM_DATCANC")
                    .HasColumnType("datetime");

                entity.Property(e => e.ReqcomItem).HasColumnName("REQCOM_ITEM");

                entity.Property(e => e.ReqcomMotcan)
                    .HasColumnName("REQCOM_MOTCAN")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ReqcomNumped).HasColumnName("REQCOM_NUMPED");

                entity.Property(e => e.ReqcomObs)
                    .HasColumnName("REQCOM_OBS")
                    .HasColumnType("text");

                entity.Property(e => e.ReqcomPaiId).HasColumnName("REQCOM_PAI_ID");

                entity.Property(e => e.ReqcomQtd).HasColumnName("REQCOM_QTD");

                entity.Property(e => e.ReqcomRenovacao).HasColumnName("REQCOM_RENOVACAO");

                entity.Property(e => e.ReqcomSit).HasColumnName("REQCOM_SIT");

                entity.Property(e => e.ReqcomSoldes)
                    .HasColumnName("REQCOM_SOLDES")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ReqcomSolobs)
                    .HasColumnName("REQCOM_SOLOBS")
                    .HasColumnType("text");

                entity.Property(e => e.ReqcomSolqtd).HasColumnName("REQCOM_SOLQTD");

                entity.Property(e => e.ReqcomSolsit).HasColumnName("REQCOM_SOLSIT");

                entity.Property(e => e.ReqcomSoltip).HasColumnName("REQCOM_SOLTIP");

                entity.Property(e => e.ReqcomUsecanId).HasColumnName("REQCOM_USECAN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsRequisicoesComprasItens>(entity =>
            {
                entity.HasKey(e => new { e.ReqcomiteId, e.AssId });

                entity.ToTable("GS_REQUISICOES_COMPRAS_ITENS");

                entity.HasIndex(e => e.EtqId)
                    .HasName("Idx_ETQ_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.MatId)
                    .HasName("Idx_MAT_ID");

                entity.HasIndex(e => e.ReqcomId)
                    .HasName("Idx_REQCOM_ID");

                entity.Property(e => e.ReqcomiteId).HasColumnName("REQCOMITE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EtqId).HasColumnName("ETQ_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.MatId).HasColumnName("MAT_ID");

                entity.Property(e => e.ReqcomId).HasColumnName("REQCOM_ID");

                entity.Property(e => e.ReqcomiteDatanecessidade)
                    .HasColumnName("REQCOMITE_DATANECESSIDADE")
                    .HasColumnType("datetime");

                entity.Property(e => e.ReqcomiteDescr)
                    .HasColumnName("REQCOMITE_DESCR")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.ReqcomiteObs)
                    .HasColumnName("REQCOMITE_OBS")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ReqcomiteOrcId).HasColumnName("REQCOMITE_ORC_ID");

                entity.Property(e => e.ReqcomiteQtd).HasColumnName("REQCOMITE_QTD");

                entity.Property(e => e.ReqcomiteQtdcom).HasColumnName("REQCOMITE_QTDCOM");

                entity.Property(e => e.ReqcomiteTipo)
                    .HasColumnName("REQCOMITE_TIPO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ServDes)
                    .HasColumnName("SERV_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.ServTipo).HasColumnName("SERV_TIPO");

                entity.Property(e => e.ServUnidade)
                    .HasColumnName("SERV_UNIDADE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsScript>(entity =>
            {
                entity.HasKey(e => new { e.CmdtagId, e.AssId });

                entity.ToTable("GS_SCRIPT");

                entity.HasIndex(e => e.CmdtagDesc)
                    .HasName("Idx_CMDTAG_DESC");

                entity.HasIndex(e => e.CmdtagGs)
                    .HasName("Idx_CMDTAG_GS");

                entity.Property(e => e.CmdtagId).HasColumnName("CMDTAG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CmdtagDesc)
                    .HasColumnName("CMDTAG_DESC")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CmdtagGrupo).HasColumnName("CMDTAG_GRUPO");

                entity.Property(e => e.CmdtagGs)
                    .HasColumnName("CMDTAG_GS")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.CmdtagInfo)
                    .HasColumnName("CMDTAG_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.CmdtagScript)
                    .HasColumnName("CMDTAG_SCRIPT")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsServicos>(entity =>
            {
                entity.HasKey(e => new { e.ServId, e.AssId })
                    .HasName("PK_GS_SERVICOS_1");

                entity.ToTable("GS_SERVICOS");

                entity.HasIndex(e => e.UnidId)
                    .HasName("Idx_UNID_ID");

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CencusgrpId).HasColumnName("CENCUSGRP_ID");

                entity.Property(e => e.FamId).HasColumnName("FAM_ID");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.ServCod)
                    .HasColumnName("SERV_COD")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ServDes)
                    .HasColumnName("SERV_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ServInfo)
                    .HasColumnName("SERV_INFO")
                    .HasColumnType("text");

                entity.Property(e => e.ServVal)
                    .HasColumnName("SERV_VAL")
                    .HasColumnType("money");

                entity.Property(e => e.ServValDescCondicionado).HasColumnName("SERV_VAL_DESC_CONDICIONADO");

                entity.Property(e => e.ServValDescIncondicionado).HasColumnName("SERV_VAL_DESC_INCONDICIONADO");

                entity.Property(e => e.ServValOutrasRetencoes).HasColumnName("SERV_VAL_OUTRAS_RETENCOES");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UnidId).HasColumnName("UNID_ID");
            });

            modelBuilder.Entity<GsServidores>(entity =>
            {
                entity.HasKey(e => new { e.ServId, e.AssId });

                entity.ToTable("GS_SERVIDORES");

                entity.Property(e => e.ServId).HasColumnName("SERV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ServIp)
                    .HasColumnName("SERV_IP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ServName)
                    .HasColumnName("SERV_NAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ServPass)
                    .HasColumnName("SERV_PASS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ServUser)
                    .HasColumnName("SERV_USER")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSimulacaoRecebiveis>(entity =>
            {
                entity.HasKey(e => e.SimrecId);

                entity.ToTable("GS_SIMULACAO_RECEBIVEIS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_SIMRECASS_ID");

                entity.HasIndex(e => e.SimrecDatSimulacao)
                    .HasName("Idx_SIMREC_DAT_SIMULACAO");

                entity.Property(e => e.SimrecId)
                    .HasColumnName("SIMREC_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AgeopeId).HasColumnName("AGEOPE_ID");

                entity.Property(e => e.AgepagId).HasColumnName("AGEPAG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CartaoCheque)
                    .HasColumnName("CARTAO_CHEQUE")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.ConbanId).HasColumnName("CONBAN_ID");

                entity.Property(e => e.DataAntecipacao)
                    .HasColumnName("DATA_ANTECIPACAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.ReceberPagar)
                    .HasColumnName("RECEBER_PAGAR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SimrecDatSimulacao)
                    .HasColumnName("SIMREC_DAT_SIMULACAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SimrecDatUltimoRecalculo)
                    .HasColumnName("SIMREC_DAT_ULTIMO_RECALCULO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SimrecObsSimulacao)
                    .HasColumnName("SIMREC_OBS_SIMULACAO")
                    .HasColumnType("text");

                entity.Property(e => e.SimrecSitSimulacao).HasColumnName("SIMREC_SIT_SIMULACAO");

                entity.Property(e => e.SimrecTotAdiantamento).HasColumnName("SIMREC_TOT_ADIANTAMENTO");

                entity.Property(e => e.SimrecTotAdm).HasColumnName("SIMREC_TOT_ADM");

                entity.Property(e => e.SimrecTotBruto).HasColumnName("SIMREC_TOT_BRUTO");

                entity.Property(e => e.SimrecTotIof).HasColumnName("SIMREC_TOT_IOF");

                entity.Property(e => e.SimrecTotLiquido).HasColumnName("SIMREC_TOT_LIQUIDO");

                entity.Property(e => e.SimrecUseId).HasColumnName("SIMREC_USE_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSimulacaoRecebiveisDocumento>(entity =>
            {
                entity.HasKey(e => e.SimrecdId);

                entity.ToTable("GS_SIMULACAO_RECEBIVEIS_DOCUMENTO");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.SimrecId)
                    .HasName("Idx_SIMREC_ID");

                entity.Property(e => e.SimrecdId)
                    .HasColumnName("SIMRECD_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CartaoCheque)
                    .HasColumnName("CARTAO_CHEQUE")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.MovbanId).HasColumnName("MOVBAN_ID");

                entity.Property(e => e.ReceberPagar)
                    .HasColumnName("RECEBER_PAGAR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.SimrecId).HasColumnName("SIMREC_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSistemaFilesystem>(entity =>
            {
                entity.HasKey(e => e.FilesystemId);

                entity.ToTable("GS_SISTEMA_FILESYSTEM");

                entity.Property(e => e.FilesystemId)
                    .HasColumnName("FILESYSTEM_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.FilesystemDescr)
                    .HasColumnName("FILESYSTEM_DESCR")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.FilesystemName)
                    .HasColumnName("FILESYSTEM_NAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsSistemaHelp>(entity =>
            {
                entity.HasKey(e => e.SyshelpId);

                entity.ToTable("GS_SISTEMA_HELP");

                entity.HasIndex(e => e.SyshelpMod)
                    .HasName("Idx_SYSHELP_MOD");

                entity.HasIndex(e => e.SyshelpTipo)
                    .HasName("Idx_SYSHELP_TIPO");

                entity.Property(e => e.SyshelpId)
                    .HasColumnName("SYSHELP_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SyshelpDes)
                    .HasColumnName("SYSHELP_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SyshelpHtml)
                    .HasColumnName("SYSHELP_HTML")
                    .HasColumnType("text");

                entity.Property(e => e.SyshelpInfo)
                    .HasColumnName("SYSHELP_INFO")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SyshelpItem)
                    .HasColumnName("SYSHELP_ITEM")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SyshelpMod)
                    .HasColumnName("SYSHELP_MOD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SyshelpTipo).HasColumnName("SYSHELP_TIPO");
            });

            modelBuilder.Entity<GsSistemaParametros>(entity =>
            {
                entity.HasKey(e => e.SisprmId);

                entity.ToTable("GS_SISTEMA_PARAMETROS");

                entity.HasIndex(e => e.SisprmMod)
                    .HasName("Idx_SISPRM_MOD");

                entity.Property(e => e.SisprmId)
                    .HasColumnName("SISPRM_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.SisprmMod)
                    .HasColumnName("SISPRM_MOD")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SisprmVal)
                    .HasColumnName("SISPRM_VAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSistemaParametrosMemo>(entity =>
            {
                entity.HasKey(e => new { e.ParsismemoId, e.AssId })
                    .HasName("PK_GS_PARAMETROS_SISTEMA_MEMO");

                entity.ToTable("GS_SISTEMA_PARAMETROS_MEMO");

                entity.HasIndex(e => e.ParsismemoMod)
                    .HasName("Idx_PARSISMEMO_MOD");

                entity.Property(e => e.ParsismemoId).HasColumnName("PARSISMEMO_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ParsismemoInfo)
                    .HasColumnName("PARSISMEMO_INFO")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.ParsismemoMod)
                    .HasColumnName("PARSISMEMO_MOD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ParsismemoVal)
                    .HasColumnName("PARSISMEMO_VAL")
                    .HasColumnType("text");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSistemaPopup>(entity =>
            {
                entity.HasKey(e => new { e.SispppId, e.AssId });

                entity.ToTable("GS_SISTEMA_POPUP");

                entity.Property(e => e.SispppId).HasColumnName("SISPPP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SispppActive).HasColumnName("SISPPP_ACTIVE");

                entity.Property(e => e.SispppHeight).HasColumnName("SISPPP_HEIGHT");

                entity.Property(e => e.SispppLeft).HasColumnName("SISPPP_LEFT");

                entity.Property(e => e.SispppTitulo)
                    .HasColumnName("SISPPP_TITULO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SispppTop).HasColumnName("SISPPP_TOP");

                entity.Property(e => e.SispppUrl)
                    .HasColumnName("SISPPP_URL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SispppWidth).HasColumnName("SISPPP_WIDTH");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSistemaPublicacaoArquivos>(entity =>
            {
                entity.HasKey(e => new { e.PubverId, e.AssId });

                entity.ToTable("GS_SISTEMA_PUBLICACAO_ARQUIVOS");

                entity.Property(e => e.PubverId).HasColumnName("PUBVER_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.FilesystemId).HasColumnName("FILESYSTEM_ID");

                entity.Property(e => e.PubverFilename)
                    .HasColumnName("PUBVER_FILENAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PubverFilepathinstall)
                    .HasColumnName("PUBVER_FILEPATHINSTALL")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.PubverFilewidth).HasColumnName("PUBVER_FILEWIDTH");

                entity.Property(e => e.PubverSeguranca).HasColumnName("PUBVER_SEGURANCA");

                entity.Property(e => e.PubverTipo)
                    .HasColumnName("PUBVER_TIPO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PubverVersao1).HasColumnName("PUBVER_VERSAO1");

                entity.Property(e => e.PubverVersao2).HasColumnName("PUBVER_VERSAO2");

                entity.Property(e => e.PubverVersao3).HasColumnName("PUBVER_VERSAO3");

                entity.Property(e => e.PubverVersao4).HasColumnName("PUBVER_VERSAO4");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSistemaUpdate>(entity =>
            {
                entity.HasKey(e => e.SysupdId);

                entity.ToTable("GS_SISTEMA_UPDATE");

                entity.HasIndex(e => e.SysupdVersao)
                    .HasName("Idx_SYSUPD_VERSAO");

                entity.Property(e => e.SysupdId)
                    .HasColumnName("SYSUPD_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysupdData)
                    .HasColumnName("SYSUPD_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysupdFile)
                    .HasColumnName("SYSUPD_FILE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysupdTipo).HasColumnName("SYSUPD_TIPO");

                entity.Property(e => e.SysupdUrl)
                    .HasColumnName("SYSUPD_URL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysupdVersao)
                    .HasColumnName("SYSUPD_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysupdVersaobuild).HasColumnName("SYSUPD_VERSAOBUILD");

                entity.Property(e => e.SysupdVersaomaior).HasColumnName("SYSUPD_VERSAOMAIOR");

                entity.Property(e => e.SysupdVersaomenor).HasColumnName("SYSUPD_VERSAOMENOR");

                entity.Property(e => e.SysupdVersaorelease).HasColumnName("SYSUPD_VERSAORELEASE");
            });

            modelBuilder.Entity<GsStatusEvento>(entity =>
            {
                entity.HasKey(e => new { e.StsevtId, e.AssId })
                    .HasName("PK__GS_STATU__779B0AED35DCF99B");

                entity.ToTable("GS_STATUS_EVENTO");

                entity.Property(e => e.StsevtId).HasColumnName("STSEVT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.StsevtDes)
                    .HasColumnName("STSEVT_DES")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSubcategoriasTitulos>(entity =>
            {
                entity.HasKey(e => new { e.SubcattitId, e.AssId, e.CattitId });

                entity.ToTable("GS_SUBCATEGORIAS_TITULOS");

                entity.Property(e => e.SubcattitId).HasColumnName("SUBCATTIT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CattitId).HasColumnName("CATTIT_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SubcattitDes)
                    .HasColumnName("SUBCATTIT_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubcattitSit).HasColumnName("SUBCATTIT_SIT");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSugestaoPagtoAgrupamento>(entity =>
            {
                entity.HasKey(e => new { e.AgrsugpagId, e.AssId });

                entity.ToTable("GS_SUGESTAO_PAGTO_AGRUPAMENTO");

                entity.Property(e => e.AgrsugpagId).HasColumnName("AGRSUGPAG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AgrsugpagAtivo).HasColumnName("AGRSUGPAG_ATIVO");

                entity.Property(e => e.AgrsugpagDes)
                    .HasColumnName("AGRSUGPAG_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSugestaoRectoAgrupamento>(entity =>
            {
                entity.HasKey(e => new { e.AgrsugrecId, e.AssId });

                entity.ToTable("GS_SUGESTAO_RECTO_AGRUPAMENTO");

                entity.Property(e => e.AgrsugrecId).HasColumnName("AGRSUGREC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AgrsugrecAtivo).HasColumnName("AGRSUGREC_ATIVO");

                entity.Property(e => e.AgrsugrecDes)
                    .HasColumnName("AGRSUGREC_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSuporteTecnicoMsg>(entity =>
            {
                entity.HasKey(e => new { e.SuptecmsgId, e.AssId });

                entity.ToTable("GS_SUPORTE_TECNICO_MSG");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.Property(e => e.SuptecmsgId).HasColumnName("SUPTECMSG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SuptecmsgAssunto)
                    .HasColumnName("SUPTECMSG_ASSUNTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SuptecmsgMsg)
                    .HasColumnName("SUPTECMSG_MSG")
                    .HasColumnType("text");

                entity.Property(e => e.SuptecmsgNome)
                    .HasColumnName("SUPTECMSG_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SuptecmsgStatus).HasColumnName("SUPTECMSG_STATUS");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsSystemLog>(entity =>
            {
                entity.HasKey(e => new { e.LogId, e.AssId });

                entity.ToTable("GS_SYSTEM_LOG");

                entity.Property(e => e.LogId).HasColumnName("LOG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.LogDes)
                    .HasColumnName("LOG_DES")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.LogMod)
                    .HasColumnName("LOG_MOD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsTabelaNcm>(entity =>
            {
                entity.HasKey(e => e.TabncmId);

                entity.ToTable("GS_TABELA_NCM");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.Property(e => e.TabncmId)
                    .HasColumnName("TABNCM_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabncmAliquota).HasColumnName("TABNCM_ALIQUOTA");

                entity.Property(e => e.TabncmCodigo)
                    .HasColumnName("TABNCM_CODIGO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TabncmDescricao)
                    .HasColumnName("TABNCM_DESCRICAO")
                    .HasMaxLength(350)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsTabelasGestorAtual>(entity =>
            {
                entity.HasKey(e => new { e.TabId, e.AssId });

                entity.ToTable("GS_TABELAS_GESTOR_ATUAL");

                entity.Property(e => e.TabId).HasColumnName("TAB_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabName)
                    .HasColumnName("TAB_NAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TabValue).HasColumnName("TAB_VALUE");
            });

            modelBuilder.Entity<GsTabelasPrecos>(entity =>
            {
                entity.HasKey(e => new { e.TabprcId, e.AssId });

                entity.ToTable("GS_TABELAS_PRECOS");

                entity.HasIndex(e => e.TabprcDes)
                    .HasName("Idx_TABPRC_DES");

                entity.HasIndex(e => e.TabprcDiaini)
                    .HasName("Idx_TABPRC_DIAINI");

                entity.HasIndex(e => e.TabprcTipo)
                    .HasName("Idx_TABPRC_TIPO");

                entity.Property(e => e.TabprcId).HasColumnName("TABPRC_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.Id26).HasColumnName("ID26");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TabprcDes)
                    .HasColumnName("TABPRC_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TabprcDiacob).HasColumnName("TABPRC_DIACOB");

                entity.Property(e => e.TabprcDiaini).HasColumnName("TABPRC_DIAINI");

                entity.Property(e => e.TabprcDiater).HasColumnName("TABPRC_DIATER");

                entity.Property(e => e.TabprcPerc).HasColumnName("TABPRC_PERC");

                entity.Property(e => e.TabprcTipo).HasColumnName("TABPRC_TIPO");
            });

            modelBuilder.Entity<GsTelefones>(entity =>
            {
                entity.HasKey(e => new { e.CadtelId, e.AssId });

                entity.ToTable("GS_TELEFONES");

                entity.HasIndex(e => e.CadtelNum)
                    .HasName("Idx_CADTEL_NUM");

                entity.Property(e => e.CadtelId).HasColumnName("CADTEL_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CadtelDes)
                    .HasColumnName("CADTEL_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CadtelNum)
                    .HasColumnName("CADTEL_NUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsTelefonesContas>(entity =>
            {
                entity.HasKey(e => new { e.ContelId, e.CadtelId, e.AssId });

                entity.ToTable("GS_TELEFONES_CONTAS");

                entity.HasIndex(e => e.CadtelId)
                    .HasName("Idx_CADTEL_ID");

                entity.HasIndex(e => e.ContelAno)
                    .HasName("Idx_CONTEL_ANO");

                entity.HasIndex(e => e.ContelDes)
                    .HasName("Idx_CONTEL_DES");

                entity.HasIndex(e => e.ContelMes)
                    .HasName("Idx_CONTEL_MES");

                entity.Property(e => e.ContelId).HasColumnName("CONTEL_ID");

                entity.Property(e => e.CadtelId).HasColumnName("CADTEL_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ContelAno).HasColumnName("CONTEL_ANO");

                entity.Property(e => e.ContelDes)
                    .HasColumnName("CONTEL_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ContelMes).HasColumnName("CONTEL_MES");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<GsTelefonesContasRegistro>(entity =>
            {
                entity.HasKey(e => new { e.TelconregId, e.ContelId, e.AssId });

                entity.ToTable("GS_TELEFONES_CONTAS_REGISTRO");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.ContelId)
                    .HasName("Idx_CONTEL_ID");

                entity.HasIndex(e => e.FunId)
                    .HasName("Idx_FUN_ID");

                entity.HasIndex(e => e.TelconregData)
                    .HasName("Idx_TELCONREG_DATA");

                entity.HasIndex(e => e.TelconregTel)
                    .HasName("Idx_TELCONREG_TEL");

                entity.Property(e => e.TelconregId).HasColumnName("TELCONREG_ID");

                entity.Property(e => e.ContelId).HasColumnName("CONTEL_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TelconregData)
                    .HasColumnName("TELCONREG_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.TelconregTel)
                    .HasColumnName("TELCONREG_TEL")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TelconregTipo).HasColumnName("TELCONREG_TIPO");

                entity.Property(e => e.TelconregValor)
                    .HasColumnName("TELCONREG_VALOR")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsTipoServidor>(entity =>
            {
                entity.HasKey(e => e.Tipo)
                    .HasName("PK__GS_TIPO___B6FCAAA31352D76D");

                entity.ToTable("GS_TIPO_SERVIDOR");

                entity.Property(e => e.Tipo)
                    .HasColumnName("TIPO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descricao)
                    .HasColumnName("DESCRICAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsTipoTransporte>(entity =>
            {
                entity.HasKey(e => new { e.TiptranspId, e.AssId });

                entity.ToTable("GS_TIPO_TRANSPORTE");

                entity.Property(e => e.TiptranspId).HasColumnName("TIPTRANSP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TiptranspDesc)
                    .HasColumnName("TIPTRANSP_DESC")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsTrajeto>(entity =>
            {
                entity.HasKey(e => new { e.TraId, e.AssId });

                entity.ToTable("GS_TRAJETO");

                entity.HasIndex(e => e.CidfimId)
                    .HasName("Idx_CIDFIM_ID");

                entity.HasIndex(e => e.CidiniId)
                    .HasName("Idx_CIDINI_ID");

                entity.HasIndex(e => e.EstidaId)
                    .HasName("Idx_ESTIDA_ID");

                entity.HasIndex(e => e.EstretId)
                    .HasName("Idx_ESTRET_ID");

                entity.Property(e => e.TraId).HasColumnName("TRA_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CidfimId).HasColumnName("CIDFIM_ID");

                entity.Property(e => e.CidiniId).HasColumnName("CIDINI_ID");

                entity.Property(e => e.EstidaId).HasColumnName("ESTIDA_ID");

                entity.Property(e => e.EstretId).HasColumnName("ESTRET_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TraKmida).HasColumnName("TRA_KMIDA");

                entity.Property(e => e.TraKmret).HasColumnName("TRA_KMRET");
            });

            modelBuilder.Entity<GsTransfDadosReajusteDatacenter>(entity =>
            {
                entity.ToTable("GS_TRANSF_DADOS_REAJUSTE_DATACENTER");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CttNum).HasColumnName("CTT_NUM");

                entity.Property(e => e.DataMedicao)
                    .HasColumnName("DATA_MEDICAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EspacoTabela).HasColumnName("ESPACO_TABELA");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.TabhospId).HasColumnName("TABHOSP_ID");

                entity.Property(e => e.TotalDados).HasColumnName("TOTAL_DADOS");

                entity.Property(e => e.TotalFtp).HasColumnName("TOTAL_FTP");

                entity.Property(e => e.TotalLog).HasColumnName("TOTAL_LOG");

                entity.Property(e => e.TotalMedicao).HasColumnName("TOTAL_MEDICAO");

                entity.Property(e => e.ValorTabela)
                    .HasColumnName("VALOR_TABELA")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<GsTransportador>(entity =>
            {
                entity.HasKey(e => new { e.TranspId, e.AssId });

                entity.ToTable("GS_TRANSPORTADOR");

                entity.HasIndex(e => e.CliforId)
                    .HasName("Idx_CLIFOR_ID");

                entity.HasIndex(e => e.TranspNome)
                    .HasName("Idx_TRANSP_NOME");

                entity.Property(e => e.TranspId).HasColumnName("TRANSP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.TranspBairro)
                    .HasColumnName("TRANSP_BAIRRO")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.TranspCel)
                    .HasColumnName("TRANSP_CEL")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.TranspCep)
                    .HasColumnName("TRANSP_CEP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TranspCnh)
                    .HasColumnName("TRANSP_CNH")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TranspCpfcnpj)
                    .HasColumnName("TRANSP_CPFCNPJ")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TranspCpl)
                    .HasColumnName("TRANSP_CPL")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TranspDddcel)
                    .HasColumnName("TRANSP_DDDCEL")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TranspDddfone)
                    .HasColumnName("TRANSP_DDDFONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TranspEmail)
                    .HasColumnName("TRANSP_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TranspEnd)
                    .HasColumnName("TRANSP_END")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TranspFone)
                    .HasColumnName("TRANSP_FONE")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.TranspMunicipio)
                    .HasColumnName("TRANSP_MUNICIPIO")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.TranspNextel)
                    .HasColumnName("TRANSP_NEXTEL")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.TranspNome)
                    .HasColumnName("TRANSP_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TranspNum)
                    .HasColumnName("TRANSP_NUM")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TranspPlaca)
                    .HasColumnName("TRANSP_PLACA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TranspRazaosocial)
                    .HasColumnName("TRANSP_RAZAOSOCIAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TranspRginest)
                    .HasColumnName("TRANSP_RGINEST")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TranspUf)
                    .HasColumnName("TRANSP_UF")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TranspUfplaca)
                    .HasColumnName("TRANSP_UFPLACA")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsUnidadeMedida>(entity =>
            {
                entity.HasKey(e => new { e.UnidId, e.AssId });

                entity.ToTable("GS_UNIDADE_MEDIDA");

                entity.Property(e => e.UnidId).HasColumnName("UNID_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.ImpId).HasColumnName("IMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UnidDes)
                    .HasColumnName("UNID_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsUsuarioRagMsg>(entity =>
            {
                entity.HasKey(e => e.UsrmsgId);

                entity.ToTable("GS_USUARIO_RAG_MSG");

                entity.Property(e => e.UsrmsgId).HasColumnName("USRMSG_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.UsrmsgAviso).HasColumnName("USRMSG_AVISO");

                entity.Property(e => e.UsrmsgGeral).HasColumnName("USRMSG_GERAL");
            });

            modelBuilder.Entity<GsUsuarios>(entity =>
            {
                entity.HasKey(e => new { e.UseId, e.AssId });

                entity.ToTable("GS_USUARIOS");

                entity.HasIndex(e => e.AssempsetId)
                    .HasName("Idx_ASSEMPSET_ID");

                entity.HasIndex(e => e.SysDatcad)
                    .HasName("Idx_SYS_DATCAD");

                entity.HasIndex(e => e.UseDatter)
                    .HasName("Idx_USE_DATTER");

                entity.HasIndex(e => e.UseName)
                    .HasName("Idx_USE_NAME");

                entity.HasIndex(e => e.UseSit)
                    .HasName("Idx_USE_SIT");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.FunId).HasColumnName("FUN_ID");

                entity.Property(e => e.GrpeqtId).HasColumnName("GRPEQT_ID");

                entity.Property(e => e.LicregId).HasColumnName("LICREG_ID");

                entity.Property(e => e.LogForm)
                    .HasColumnName("LOG_FORM")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LogMacadress)
                    .HasColumnName("LOG_MACADRESS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Porta).HasColumnName("PORTA");

                entity.Property(e => e.Sispct1).HasColumnName("SISPCT_1");

                entity.Property(e => e.Sispct2).HasColumnName("SISPCT_2");

                entity.Property(e => e.Sispct3).HasColumnName("SISPCT_3");

                entity.Property(e => e.Spid).HasColumnName("SPID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.UseAce).HasColumnName("USE_ACE");

                entity.Property(e => e.UseAltsnhlog).HasColumnName("USE_ALTSNHLOG");

                entity.Property(e => e.UseAmx)
                    .HasColumnName("USE_AMX")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UseDatter)
                    .HasColumnName("USE_DATTER")
                    .HasColumnType("datetime");

                entity.Property(e => e.UseDatultace)
                    .HasColumnName("USE_DATULTACE")
                    .HasColumnType("datetime");

                entity.Property(e => e.UseEmail)
                    .HasColumnName("USE_EMAIL")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseEmailend)
                    .HasColumnName("USE_EMAILEND")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseEmailnome)
                    .HasColumnName("USE_EMAILNOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseEmailpass)
                    .HasColumnName("USE_EMAILPASS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseEmailsmtp)
                    .HasColumnName("USE_EMAILSMTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseEmailssl).HasColumnName("USE_EMAILSSL");

                entity.Property(e => e.UseEmailtls).HasColumnName("USE_EMAILTLS");

                entity.Property(e => e.UseEmailuser)
                    .HasColumnName("USE_EMAILUSER")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseExp).HasColumnName("USE_EXP");

                entity.Property(e => e.UseExpdia).HasColumnName("USE_EXPDIA");

                entity.Property(e => e.UseHost)
                    .HasColumnName("USE_HOST")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.UseIdAlt).HasColumnName("USE_ID_ALT");

                entity.Property(e => e.UseIp)
                    .HasColumnName("USE_IP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseName)
                    .HasColumnName("USE_NAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseNivel).HasColumnName("USE_NIVEL");

                entity.Property(e => e.UseNome)
                    .HasColumnName("USE_NOME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseNomeemp)
                    .HasColumnName("USE_NOMEEMP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsePass)
                    .HasColumnName("USE_PASS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UsePolAtivo).HasColumnName("USE_POL_ATIVO");

                entity.Property(e => e.UsePolDataf)
                    .HasColumnName("USE_POL_DATAF")
                    .HasColumnType("datetime");

                entity.Property(e => e.UsePolDatai)
                    .HasColumnName("USE_POL_DATAI")
                    .HasColumnType("datetime");

                entity.Property(e => e.UseProrrogar).HasColumnName("USE_PRORROGAR");

                entity.Property(e => e.UsePrvVisitaImplantacao).HasColumnName("USE_PRV_VISITA_IMPLANTACAO");

                entity.Property(e => e.UsePrvadm).HasColumnName("USE_PRVADM");

                entity.Property(e => e.UseSit).HasColumnName("USE_SIT");

                entity.Property(e => e.UseTipo).HasColumnName("USE_TIPO");

                entity.Property(e => e.UseUltPass)
                    .HasColumnName("USE_ULT_PASS")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UseVersao)
                    .HasColumnName("USE_VERSAO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsUsuariosAlmoxarifados>(entity =>
            {
                entity.HasKey(e => e.UsuamxId)
                    .HasName("PK__GS_USUAR__DC49D4B71D07F587");

                entity.ToTable("GS_USUARIOS_ALMOXARIFADOS");

                entity.Property(e => e.UsuamxId).HasColumnName("USUAMX_ID");

                entity.Property(e => e.AmxId).HasColumnName("AMX_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysdatCad)
                    .HasColumnName("SYSDAT_CAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.UseIs).HasColumnName("USE_IS");
            });

            modelBuilder.Entity<GsUsuariosParametros>(entity =>
            {
                entity.HasKey(e => new { e.UseprmId, e.AssId })
                    .HasName("PK_GS_USUARIOS_PARAMETROS_1");

                entity.ToTable("GS_USUARIOS_PARAMETROS");

                entity.Property(e => e.UseprmId).HasColumnName("USEPRM_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.UseprmMod)
                    .HasColumnName("USEPRM_MOD")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UseprmVal)
                    .HasColumnName("USEPRM_VAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsUsuariosPrivilegios>(entity =>
            {
                entity.HasKey(e => new { e.UseprvId, e.AssId })
                    .HasName("FK_GS_USUARIOS_PRIVILEGIOS");

                entity.ToTable("GS_USUARIOS_PRIVILEGIOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.HasIndex(e => e.UseprvId)
                    .HasName("Idx_USEPRV_ID");

                entity.Property(e => e.UseprvId).HasColumnName("USEPRV_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.LicregId).HasColumnName("LICREG_ID");

                entity.Property(e => e.LogForm)
                    .HasColumnName("LOG_FORM")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LogMacadress)
                    .HasColumnName("LOG_MACADRESS")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.UseprvDes)
                    .HasColumnName("USEPRV_DES")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.UseprvGrp).HasColumnName("USEPRV_GRP");

                entity.Property(e => e.UseprvIte).HasColumnName("USEPRV_ITE");

                entity.Property(e => e.UseprvMod)
                    .HasColumnName("USEPRV_MOD")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.UseprvSit).HasColumnName("USEPRV_SIT");

                entity.Property(e => e.UserId).HasColumnName("USER_ID");
            });

            modelBuilder.Entity<GsUsuariosRagMsgSup>(entity =>
            {
                entity.HasKey(e => e.UsrsupId);

                entity.ToTable("GS_USUARIOS_RAG_MSG_SUP");

                entity.Property(e => e.UsrsupId).HasColumnName("USRSUP_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.UsrsupReceber).HasColumnName("USRSUP_RECEBER");
            });

            modelBuilder.Entity<GsUsuariosSistemas>(entity =>
            {
                entity.HasKey(e => e.UsesisId);

                entity.ToTable("GS_USUARIOS_SISTEMAS");

                entity.HasIndex(e => e.UseId)
                    .HasName("Idx_USE_ID");

                entity.Property(e => e.UsesisId)
                    .HasColumnName("USESIS_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.UsesisCod).HasColumnName("USESIS_COD");
            });

            modelBuilder.Entity<GsVeiculos>(entity =>
            {
                entity.HasKey(e => e.VclId);

                entity.ToTable("GS_VEICULOS");

                entity.HasIndex(e => e.AssId)
                    .HasName("Idx_ASS_ID");

                entity.HasIndex(e => e.EmpId)
                    .HasName("Idx_EMP_ID");

                entity.Property(e => e.VclId)
                    .HasColumnName("VCL_ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.VclAnoFabricacao)
                    .HasColumnName("VCL_ANO_FABRICACAO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.VclAnoModelo)
                    .HasColumnName("VCL_ANO_MODELO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.VclChassi)
                    .HasColumnName("VCL_CHASSI")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.VclCombustivel).HasColumnName("VCL_COMBUSTIVEL");

                entity.Property(e => e.VclCor)
                    .HasColumnName("VCL_COR")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.VclCpfcnpj)
                    .HasColumnName("VCL_CPFCNPJ")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.VclEspecie)
                    .HasColumnName("VCL_ESPECIE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VclMarca)
                    .HasColumnName("VCL_MARCA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VclModelo)
                    .HasColumnName("VCL_MODELO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.VclNome)
                    .HasColumnName("VCL_NOME")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.VclPlaca)
                    .HasColumnName("VCL_PLACA")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.VclRenavam)
                    .HasColumnName("VCL_RENAVAM")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GsVersoesAlteracoes>(entity =>
            {
                entity.HasKey(e => new { e.VeraltId, e.AssId })
                    .HasName("PK_VERSOES_ALTERACOES");

                entity.ToTable("GS_VERSOES_ALTERACOES");

                entity.HasIndex(e => e.VeraltDes)
                    .HasName("Idx_VERALT_DES");

                entity.HasIndex(e => e.VeraltVer1)
                    .HasName("Idx_VERALT_VER1");

                entity.HasIndex(e => e.VeraltVer2)
                    .HasName("Idx_VERALT_VER2");

                entity.HasIndex(e => e.VeraltVer3)
                    .HasName("Idx_VERALT_VER3");

                entity.HasIndex(e => e.VeraltVer4)
                    .HasName("Idx_VERALT_VER4");

                entity.Property(e => e.VeraltId).HasColumnName("VERALT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.UseId).HasColumnName("USE_ID");

                entity.Property(e => e.VeraltDatDel)
                    .HasColumnName("VERALT_DAT_DEL")
                    .HasColumnType("datetime");

                entity.Property(e => e.VeraltDes)
                    .IsRequired()
                    .HasColumnName("VERALT_DES")
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.VeraltGerar).HasColumnName("VERALT_GERAR");

                entity.Property(e => e.VeraltScript)
                    .IsRequired()
                    .HasColumnName("VERALT_SCRIPT")
                    .HasColumnType("text");

                entity.Property(e => e.VeraltUseDel).HasColumnName("VERALT_USE_DEL");

                entity.Property(e => e.VeraltVer1).HasColumnName("VERALT_VER1");

                entity.Property(e => e.VeraltVer2).HasColumnName("VERALT_VER2");

                entity.Property(e => e.VeraltVer3).HasColumnName("VERALT_VER3");

                entity.Property(e => e.VeraltVer4).HasColumnName("VERALT_VER4");
            });

            modelBuilder.Entity<GtApostilasTreinamentos>(entity =>
            {
                entity.ToTable("GT_APOSTILAS_TREINAMENTOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AptDesc)
                    .HasColumnName("APT_DESC")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AptDiretorioFtp)
                    .HasColumnName("APT_DIRETORIO_FTP")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AptFlagSituacao).HasColumnName("APT_FLAG_SITUACAO");

                entity.Property(e => e.AptInfoAdicionais)
                    .HasColumnName("APT_INFO_ADICIONAIS")
                    .HasColumnType("text");

                entity.Property(e => e.AptNome)
                    .HasColumnName("APT_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AptTipoFtp).HasColumnName("APT_TIPO_FTP");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysId).HasColumnName("SYS_ID");

                entity.Property(e => e.SysMenu1Id).HasColumnName("SYS_MENU1_ID");

                entity.Property(e => e.SysMenu2Id).HasColumnName("SYS_MENU2_ID");

                entity.Property(e => e.SysMenu3Id).HasColumnName("SYS_MENU3_ID");

                entity.Property(e => e.SysMenu4Id).HasColumnName("SYS_MENU4_ID");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");
            });

            modelBuilder.Entity<GtApostilasTreinamentosLog>(entity =>
            {
                entity.ToTable("GT_APOSTILAS_TREINAMENTOS_LOG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AplDatacesso)
                    .HasColumnName("APL_DATACESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.AplDesc)
                    .HasColumnName("APL_DESC")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.AptId).HasColumnName("APT_ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysId).HasColumnName("SYS_ID");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");
            });

            modelBuilder.Entity<GtLogSugestoesPagamentos>(entity =>
            {
                entity.ToTable("GT_LOG_SUGESTOES_PAGAMENTOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorderoPagamentoId).HasColumnName("BORDERO_PAGAMENTO_ID");

                entity.Property(e => e.BorderoPagamentoTituloId).HasColumnName("BORDERO_PAGAMENTO_TITULO_ID");

                entity.Property(e => e.ContaPagarBaixaId).HasColumnName("CONTA_PAGAR_BAIXA_ID");

                entity.Property(e => e.ContaPagarParcelaId).HasColumnName("CONTA_PAGAR_PARCELA_ID");

                entity.Property(e => e.FormaPagamentoId).HasColumnName("FORMA_PAGAMENTO_ID");

                entity.Property(e => e.LspAuditoria)
                    .HasColumnName("LSP_AUDITORIA")
                    .HasColumnType("image");

                entity.Property(e => e.LspValdesconto)
                    .HasColumnName("LSP_VALDESCONTO")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LspValjuros)
                    .HasColumnName("LSP_VALJUROS")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LspValmulta)
                    .HasColumnName("LSP_VALMULTA")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LspValoutros)
                    .HasColumnName("LSP_VALOUTROS")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LspValpagamento)
                    .HasColumnName("LSP_VALPAGAMENTO")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LspValparcela)
                    .HasColumnName("LSP_VALPARCELA")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");
            });

            modelBuilder.Entity<GtLogSugestoesRecebimentos>(entity =>
            {
                entity.ToTable("GT_LOG_SUGESTOES_RECEBIMENTOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.BorderoRecebimentoId).HasColumnName("BORDERO_RECEBIMENTO_ID");

                entity.Property(e => e.BorderoRecebimentoTituloId).HasColumnName("BORDERO_RECEBIMENTO_TITULO_ID");

                entity.Property(e => e.ContaReceberBaixaId).HasColumnName("CONTA_RECEBER_BAIXA_ID");

                entity.Property(e => e.ContaReceberParcelaId).HasColumnName("CONTA_RECEBER_PARCELA_ID");

                entity.Property(e => e.FormaRecebimentoId).HasColumnName("FORMA_RECEBIMENTO_ID");

                entity.Property(e => e.LsrAuditoria)
                    .HasColumnName("LSR_AUDITORIA")
                    .HasColumnType("image");

                entity.Property(e => e.LsrValdesconto)
                    .HasColumnName("LSR_VALDESCONTO")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LsrValjuros)
                    .HasColumnName("LSR_VALJUROS")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LsrValmulta)
                    .HasColumnName("LSR_VALMULTA")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LsrValoutros)
                    .HasColumnName("LSR_VALOUTROS")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LsrValparcela)
                    .HasColumnName("LSR_VALPARCELA")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.LsrValrecebimento)
                    .HasColumnName("LSR_VALRECEBIMENTO")
                    .HasColumnType("numeric(15, 4)");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");
            });

            modelBuilder.Entity<GtNfseCamposXml>(entity =>
            {
                entity.ToTable("GT_NFSE_CAMPOS_XML");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CmpDescricao)
                    .HasColumnName("CMP_DESCRICAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CmpFlagUtilizarValorPadrao).HasColumnName("CMP_FLAG_UTILIZAR_VALOR_PADRAO");

                entity.Property(e => e.CmpMetodoClasse)
                    .HasColumnName("CMP_METODO_CLASSE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CmpNomeCampo)
                    .HasColumnName("CMP_NOME_CAMPO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CmpNomeClasse)
                    .HasColumnName("CMP_NOME_CLASSE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CmpTipoCampo).HasColumnName("CMP_TIPO_CAMPO");

                entity.Property(e => e.CmpValorPadrao)
                    .HasColumnName("CMP_VALOR_PADRAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ProvedorId).HasColumnName("PROVEDOR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Provedor)
                    .WithMany(p => p.GtNfseCamposXml)
                    .HasForeignKey(d => d.ProvedorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_CAMPOS_XML_PROVEDOR_ID");
            });

            modelBuilder.Entity<GtNfseCfopPrefeituras>(entity =>
            {
                entity.ToTable("GT_NFSE_CFOP_PREFEITURAS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CfopCodigo).HasColumnName("CFOP_CODIGO");

                entity.Property(e => e.CfopNome)
                    .IsRequired()
                    .HasColumnName("CFOP_NOME")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfopNota)
                    .HasColumnName("CFOP_NOTA")
                    .HasMaxLength(5000)
                    .IsUnicode(false);

                entity.Property(e => e.CfopSys).HasColumnName("CFOP_SYS");

                entity.Property(e => e.PrefeituraId).HasColumnName("PREFEITURA_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Prefeitura)
                    .WithMany(p => p.GtNfseCfopPrefeituras)
                    .HasForeignKey(d => d.PrefeituraId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_CFOP_PREFEITURAS_PREFEITURA_ID");
            });

            modelBuilder.Entity<GtNfseClassificacaoServicos>(entity =>
            {
                entity.ToTable("GT_NFSE_CLASSIFICACAO_SERVICOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.PrefeituraId).HasColumnName("PREFEITURA_ID");

                entity.Property(e => e.SrvAliquotaiss).HasColumnName("SRV_ALIQUOTAISS");

                entity.Property(e => e.SrvDescricao)
                    .IsRequired()
                    .HasColumnName("SRV_DESCRICAO")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.SrvItemLista).HasColumnName("SRV_ITEM_LISTA");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Prefeitura)
                    .WithMany(p => p.GtNfseClassificacaoServicos)
                    .HasForeignKey(d => d.PrefeituraId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_CLASSIFICACAO_SERVICOS_PREFEITURA_ID");
            });

            modelBuilder.Entity<GtNfseConfiguracao>(entity =>
            {
                entity.ToTable("GT_NFSE_CONFIGURACAO");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CfgAmbiente).HasColumnName("CFG_AMBIENTE");

                entity.Property(e => e.CfgDescricao)
                    .IsRequired()
                    .HasColumnName("CFG_DESCRICAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgNomeHost)
                    .HasColumnName("CFG_NOME_HOST")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgPastaArquivoResposta)
                    .HasColumnName("CFG_PASTA_ARQUIVO_RESPOSTA")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgPortaHost).HasColumnName("CFG_PORTA_HOST");

                entity.Property(e => e.CfgSenhaHost)
                    .HasColumnName("CFG_SENHA_HOST")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgUsuarioHost)
                    .HasColumnName("CFG_USUARIO_HOST")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgWsEndereco)
                    .HasColumnName("CFG_WS_ENDERECO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgWsNamespace)
                    .HasColumnName("CFG_WS_NAMESPACE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgWsPorta)
                    .HasColumnName("CFG_WS_PORTA")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgWsService)
                    .HasColumnName("CFG_WS_SERVICE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgWsWsdl)
                    .HasColumnName("CFG_WS_WSDL")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PrefeituraId).HasColumnName("PREFEITURA_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Prefeitura)
                    .WithMany(p => p.GtNfseConfiguracao)
                    .HasForeignKey(d => d.PrefeituraId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_CONFIGURACAO_PREFEITURA_ID");
            });

            modelBuilder.Entity<GtNfseConfiguracaoCliente>(entity =>
            {
                entity.ToTable("GT_NFSE_CONFIGURACAO_CLIENTE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CfgcAssuntoEmail)
                    .HasColumnName("CFGC_ASSUNTO_EMAIL")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcCaminhoCertificado)
                    .IsRequired()
                    .HasColumnName("CFGC_CAMINHO_CERTIFICADO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcDescricao)
                    .IsRequired()
                    .HasColumnName("CFGC_DESCRICAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcFlagSslEmail).HasColumnName("CFGC_FLAG_SSL_EMAIL");

                entity.Property(e => e.CfgcMensagemEmail)
                    .HasColumnName("CFGC_MENSAGEM_EMAIL")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcPortaSmtp).HasColumnName("CFGC_PORTA_SMTP");

                entity.Property(e => e.CfgcRemetenteEmail)
                    .HasColumnName("CFGC_REMETENTE_EMAIL")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcSenhaCertificado)
                    .IsRequired()
                    .HasColumnName("CFGC_SENHA_CERTIFICADO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcSenhaSmtp)
                    .IsRequired()
                    .HasColumnName("CFGC_SENHA_SMTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcSerieCertificado)
                    .IsRequired()
                    .HasColumnName("CFGC_SERIE_CERTIFICADO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcServidorSmtp)
                    .IsRequired()
                    .HasColumnName("CFGC_SERVIDOR_SMTP")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.CfgcUsuarioSmtp)
                    .IsRequired()
                    .HasColumnName("CFGC_USUARIO_SMTP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ConfiguracaoId).HasColumnName("CONFIGURACAO_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GtNfseConfiguracaoCliente)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_CONFIGURACAO_CLIENTE_ASS_ID");

                entity.HasOne(d => d.Configuracao)
                    .WithMany(p => p.GtNfseConfiguracaoCliente)
                    .HasForeignKey(d => d.ConfiguracaoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_CONFIGURACAO_CLIENTE_CONFIGURACAO_ID");

                entity.HasOne(d => d.GsAssociadosEmpresas)
                    .WithMany(p => p.GtNfseConfiguracaoCliente)
                    .HasForeignKey(d => new { d.EmpId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_CONFIGURACAO_CLIENTE_EMP_ID");
            });

            modelBuilder.Entity<GtNfseLayout>(entity =>
            {
                entity.ToTable("GT_NFSE_LAYOUT");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ConfiguracaoId).HasColumnName("CONFIGURACAO_ID");

                entity.Property(e => e.LayAlinhamentoHorizontal)
                    .HasColumnName("LAY_ALINHAMENTO_HORIZONTAL")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LayAlinhamentoVertical)
                    .HasColumnName("LAY_ALINHAMENTO_VERTICAL")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.LayAltura).HasColumnName("LAY_ALTURA");

                entity.Property(e => e.LayCampo)
                    .IsRequired()
                    .HasColumnName("LAY_CAMPO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LayCampoClasse)
                    .IsRequired()
                    .HasColumnName("LAY_CAMPO_CLASSE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LayFlagUtilizarValorPadrao).HasColumnName("LAY_FLAG_UTILIZAR_VALOR_PADRAO");

                entity.Property(e => e.LayFormatacaoCampo)
                    .HasColumnName("LAY_FORMATACAO_CAMPO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LayLargura).HasColumnName("LAY_LARGURA");

                entity.Property(e => e.LayMargemEsquerda).HasColumnName("LAY_MARGEM_ESQUERDA");

                entity.Property(e => e.LayMargemSuperior).HasColumnName("LAY_MARGEM_SUPERIOR");

                entity.Property(e => e.LayNomeClasse)
                    .IsRequired()
                    .HasColumnName("LAY_NOME_CLASSE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LayObjeto)
                    .IsRequired()
                    .HasColumnName("LAY_OBJETO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LayTamanho).HasColumnName("LAY_TAMANHO");

                entity.Property(e => e.LayTipo).HasColumnName("LAY_TIPO");

                entity.Property(e => e.LayTitulo)
                    .HasColumnName("LAY_TITULO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LayValorPadrao)
                    .HasColumnName("LAY_VALOR_PADRAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Configuracao)
                    .WithMany(p => p.GtNfseLayout)
                    .HasForeignKey(d => d.ConfiguracaoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LAYOUT_CONFIGURACAO_CLIENTE_ID");
            });

            modelBuilder.Entity<GtNfseLigacaoCamposMetodos>(entity =>
            {
                entity.ToTable("GT_NFSE_LIGACAO_CAMPOS_METODOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdCampo).HasColumnName("ID_CAMPO");

                entity.Property(e => e.IdMetodo).HasColumnName("ID_METODO");

                entity.Property(e => e.LcmEspacamento).HasColumnName("LCM_ESPACAMENTO");

                entity.Property(e => e.LcmSequencia).HasColumnName("LCM_SEQUENCIA");

                entity.Property(e => e.ProvedorId).HasColumnName("PROVEDOR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.IdCampoNavigation)
                    .WithMany(p => p.GtNfseLigacaoCamposMetodos)
                    .HasForeignKey(d => d.IdCampo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LIGACAO_CAMPOS_METODOS_ID_CAMPO");

                entity.HasOne(d => d.IdMetodoNavigation)
                    .WithMany(p => p.GtNfseLigacaoCamposMetodos)
                    .HasForeignKey(d => d.IdMetodo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LIGACAO_CAMPOS_METODOS_ID_METODO");

                entity.HasOne(d => d.Provedor)
                    .WithMany(p => p.GtNfseLigacaoCamposMetodos)
                    .HasForeignKey(d => d.ProvedorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LIGACAO_CAMPOS_METODOS_PROVEDOR_ID");
            });

            modelBuilder.Entity<GtNfseLigacaoCamposTagsXml>(entity =>
            {
                entity.ToTable("GT_NFSE_LIGACAO_CAMPOS_TAGS_XML");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.IdCampo).HasColumnName("ID_CAMPO");

                entity.Property(e => e.IdTag).HasColumnName("ID_TAG");

                entity.Property(e => e.ProvedorId).HasColumnName("PROVEDOR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.IdCampoNavigation)
                    .WithMany(p => p.GtNfseLigacaoCamposTagsXml)
                    .HasForeignKey(d => d.IdCampo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LIGACAO_CAMPOS_TAGS_XML_ID_CAMPO");

                entity.HasOne(d => d.IdTagNavigation)
                    .WithMany(p => p.GtNfseLigacaoCamposTagsXml)
                    .HasForeignKey(d => d.IdTag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LIGACAO_CAMPOS_TAGS_XML_ID_TAG");

                entity.HasOne(d => d.Provedor)
                    .WithMany(p => p.GtNfseLigacaoCamposTagsXml)
                    .HasForeignKey(d => d.ProvedorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LIGACAO_CAMPOS_TAGS_XML_PROVEDOR_ID");
            });

            modelBuilder.Entity<GtNfseLigacaoNotaFiscalIntermediarios>(entity =>
            {
                entity.ToTable("GT_NFSE_LIGACAO_NOTA_FISCAL_INTERMEDIARIOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.NotaFiscalId).HasColumnName("NOTA_FISCAL_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GtNfseLigacaoNotaFiscalIntermediarios)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LIGACAO_NOTA_FISCAL_INTERMEDIARIOS_ASS_ID");

                entity.HasOne(d => d.GsAssociadosEmpresas)
                    .WithMany(p => p.GtNfseLigacaoNotaFiscalIntermediarios)
                    .HasForeignKey(d => new { d.EmpId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_LIGACAO_NOTA_FISCAL_INTERMEDIARIOS_EMP_ID");
            });

            modelBuilder.Entity<GtNfseMetodos>(entity =>
            {
                entity.ToTable("GT_NFSE_METODOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ConfiguracaoNfseId).HasColumnName("CONFIGURACAO_NFSE_ID");

                entity.Property(e => e.MtdDescricao)
                    .HasColumnName("MTD_DESCRICAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MtdNome)
                    .HasColumnName("MTD_NOME")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MtdTipoRetorno).HasColumnName("MTD_TIPO_RETORNO");

                entity.Property(e => e.MtdWsEndereco)
                    .HasColumnName("MTD_WS_ENDERECO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MtdWsNamespace)
                    .HasColumnName("MTD_WS_NAMESPACE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MtdWsPorta)
                    .HasColumnName("MTD_WS_PORTA")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MtdWsService)
                    .HasColumnName("MTD_WS_SERVICE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.MtdWsWsdl)
                    .HasColumnName("MTD_WS_WSDL")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.ConfiguracaoNfse)
                    .WithMany(p => p.GtNfseMetodos)
                    .HasForeignKey(d => d.ConfiguracaoNfseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_METODOS_CONFIGURACAO_NFSE_ID");
            });

            modelBuilder.Entity<GtNfseTagsXml>(entity =>
            {
                entity.ToTable("GT_NFSE_TAGS_XML");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ProvedorId).HasColumnName("PROVEDOR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.TagDescricao)
                    .HasColumnName("TAG_DESCRICAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TagFlagUtilizarValorPadrao).HasColumnName("TAG_FLAG_UTILIZAR_VALOR_PADRAO");

                entity.Property(e => e.TagMetodoClasse)
                    .HasColumnName("TAG_METODO_CLASSE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TagNome)
                    .HasColumnName("TAG_NOME")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TagNomeClasse)
                    .HasColumnName("TAG_NOME_CLASSE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.TagValorPadrao)
                    .HasColumnName("TAG_VALOR_PADRAO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.HasOne(d => d.Provedor)
                    .WithMany(p => p.GtNfseTagsXml)
                    .HasForeignKey(d => d.ProvedorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_TAGS_XML_PROVEDOR_ID");
            });

            modelBuilder.Entity<GtNfseXmlMetodos>(entity =>
            {
                entity.ToTable("GT_NFSE_XML_METODOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.MetodoId).HasColumnName("METODO_ID");

                entity.Property(e => e.ProvedorId).HasColumnName("PROVEDOR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.XmlCompleto)
                    .HasColumnName("XML_COMPLETO")
                    .HasColumnType("text");

                entity.Property(e => e.XmlFim)
                    .HasColumnName("XML_FIM")
                    .HasColumnType("text");

                entity.Property(e => e.XmlRps)
                    .HasColumnName("XML_RPS")
                    .HasColumnType("text");

                entity.Property(e => e.XmlTopo)
                    .HasColumnName("XML_TOPO")
                    .HasColumnType("text");

                entity.HasOne(d => d.Metodo)
                    .WithMany(p => p.GtNfseXmlMetodos)
                    .HasForeignKey(d => d.MetodoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_XML_METODOS_METODO_ID");

                entity.HasOne(d => d.Provedor)
                    .WithMany(p => p.GtNfseXmlMetodos)
                    .HasForeignKey(d => d.ProvedorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NFSE_XML_METODOS_PROVEDOR_ID");
            });

            modelBuilder.Entity<GtNotaFiscalLog>(entity =>
            {
                entity.ToTable("GT_NOTA_FISCAL_LOG");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfId).HasColumnName("NF_ID");

                entity.Property(e => e.ParcelaId).HasColumnName("PARCELA_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.Tipo).HasColumnName("TIPO");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GtNotaFiscalLog)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_NOTA_FISCAL_LOG_ASS_ID");

                entity.HasOne(d => d.GsNotaFiscal)
                    .WithMany(p => p.GtNotaFiscalLog)
                    .HasForeignKey(d => new { d.NfId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_NOTA_FISCAL_LOG_NF_ID");
            });

            modelBuilder.Entity<GtNotaFiscalServicoNfse>(entity =>
            {
                entity.ToTable("GT_NOTA_FISCAL_SERVICO_NFSE");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CfopId).HasColumnName("CFOP_ID");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.ConpagId).HasColumnName("CONPAG_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.IdCfopPrefeitura).HasColumnName("ID_CFOP_PREFEITURA");

                entity.Property(e => e.NfseAliquotaCofins).HasColumnName("NFSE_ALIQUOTA_COFINS");

                entity.Property(e => e.NfseAliquotaCsll).HasColumnName("NFSE_ALIQUOTA_CSLL");

                entity.Property(e => e.NfseAliquotaInss).HasColumnName("NFSE_ALIQUOTA_INSS");

                entity.Property(e => e.NfseAliquotaIr).HasColumnName("NFSE_ALIQUOTA_IR");

                entity.Property(e => e.NfseAliquotaPis).HasColumnName("NFSE_ALIQUOTA_PIS");

                entity.Property(e => e.NfseBaseiss)
                    .HasColumnName("NFSE_BASEISS")
                    .HasColumnType("money");

                entity.Property(e => e.NfseClatitId).HasColumnName("NFSE_CLATIT_ID");

                entity.Property(e => e.NfseCodigoVerificacao)
                    .HasColumnName("NFSE_CODIGO_VERIFICACAO")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.NfseDatcan)
                    .HasColumnName("NFSE_DATCAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfseDatemissao)
                    .HasColumnName("NFSE_DATEMISSAO")
                    .HasColumnType("datetime");

                entity.Property(e => e.NfseDesgeId).HasColumnName("NFSE_DESGE_ID");

                entity.Property(e => e.NfseFlagCfopMunicipal).HasColumnName("NFSE_FLAG_CFOP_MUNICIPAL");

                entity.Property(e => e.NfseIncentivadorCultural).HasColumnName("NFSE_INCENTIVADOR_CULTURAL");

                entity.Property(e => e.NfseInfoadici)
                    .HasColumnName("NFSE_INFOADICI")
                    .HasColumnType("text");

                entity.Property(e => e.NfseLote).HasColumnName("NFSE_LOTE");

                entity.Property(e => e.NfseNumnota).HasColumnName("NFSE_NUMNOTA");

                entity.Property(e => e.NfseObscanc)
                    .HasColumnName("NFSE_OBSCANC")
                    .HasColumnType("text");

                entity.Property(e => e.NfseObsexterna)
                    .HasColumnName("NFSE_OBSEXTERNA")
                    .HasColumnType("text");

                entity.Property(e => e.NfseObsinterna)
                    .HasColumnName("NFSE_OBSINTERNA")
                    .HasColumnType("text");

                entity.Property(e => e.NfseOperacao)
                    .HasColumnName("NFSE_OPERACAO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NfseOptanteSimplesNacional).HasColumnName("NFSE_OPTANTE_SIMPLES_NACIONAL");

                entity.Property(e => e.NfsePerciss).HasColumnName("NFSE_PERCISS");

                entity.Property(e => e.NfseRps).HasColumnName("NFSE_RPS");

                entity.Property(e => e.NfseSit).HasColumnName("NFSE_SIT");

                entity.Property(e => e.NfseSituacao).HasColumnName("NFSE_SITUACAO");

                entity.Property(e => e.NfseSubtotal)
                    .HasColumnName("NFSE_SUBTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.NfseTextolivre)
                    .HasColumnName("NFSE_TEXTOLIVRE")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.NfseTipolanc)
                    .IsRequired()
                    .HasColumnName("NFSE_TIPOLANC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NfseTiponota).HasColumnName("NFSE_TIPONOTA");

                entity.Property(e => e.NfseTiporecolhimento)
                    .HasColumnName("NFSE_TIPORECOLHIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NfseTributacao)
                    .HasColumnName("NFSE_TRIBUTACAO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NfseValorCofins).HasColumnName("NFSE_VALOR_COFINS");

                entity.Property(e => e.NfseValorCsll).HasColumnName("NFSE_VALOR_CSLL");

                entity.Property(e => e.NfseValorDescCondicionado).HasColumnName("NFSE_VALOR_DESC_CONDICIONADO");

                entity.Property(e => e.NfseValorDescIncondicionado).HasColumnName("NFSE_VALOR_DESC_INCONDICIONADO");

                entity.Property(e => e.NfseValorInss).HasColumnName("NFSE_VALOR_INSS");

                entity.Property(e => e.NfseValorIr).HasColumnName("NFSE_VALOR_IR");

                entity.Property(e => e.NfseValorOutrasRetencoes).HasColumnName("NFSE_VALOR_OUTRAS_RETENCOES");

                entity.Property(e => e.NfseValorPis).HasColumnName("NFSE_VALOR_PIS");

                entity.Property(e => e.NfseValordesc)
                    .HasColumnName("NFSE_VALORDESC")
                    .HasColumnType("money");

                entity.Property(e => e.NfseValoriss)
                    .HasColumnName("NFSE_VALORISS")
                    .HasColumnType("money");

                entity.Property(e => e.NfseValoroutdesp)
                    .HasColumnName("NFSE_VALOROUTDESP")
                    .HasColumnType("money");

                entity.Property(e => e.NfseValorserv)
                    .HasColumnName("NFSE_VALORSERV")
                    .HasColumnType("money");

                entity.Property(e => e.NfseValortotal)
                    .HasColumnName("NFSE_VALORTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.NfseatId).HasColumnName("NFSEAT_ID");

                entity.Property(e => e.NotserId).HasColumnName("NOTSER_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.PrefeituraId).HasColumnName("PREFEITURA_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GtNotaFiscalServicoNfse)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_ASS_ID");

                entity.HasOne(d => d.GsCfop)
                    .WithMany(p => p.GtNotaFiscalServicoNfse)
                    .HasForeignKey(d => new { d.CfopId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_CFOP_ID");

                entity.HasOne(d => d.GsClientesFornecedores)
                    .WithMany(p => p.GtNotaFiscalServicoNfse)
                    .HasForeignKey(d => new { d.CliforId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_CLIFOR_ID");

                entity.HasOne(d => d.GsCondicoesPagto)
                    .WithMany(p => p.GtNotaFiscalServicoNfse)
                    .HasForeignKey(d => new { d.ConpagId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_CONPAG_ID");

                entity.HasOne(d => d.GsAssociadosEmpresas)
                    .WithMany(p => p.GtNotaFiscalServicoNfse)
                    .HasForeignKey(d => new { d.EmpId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_EMP_ID");

                entity.HasOne(d => d.GsClassificacaoTitulos)
                    .WithMany(p => p.GtNotaFiscalServicoNfse)
                    .HasForeignKey(d => new { d.NfseClatitId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_NFSE_CLATIT_ID");

                entity.HasOne(d => d.GsNfseAtividade)
                    .WithMany(p => p.GtNotaFiscalServicoNfse)
                    .HasForeignKey(d => new { d.NfseatId, d.AssId })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_NFSEAT_ID");
            });

            modelBuilder.Entity<GtNotaFiscalServicoNfseLog>(entity =>
            {
                entity.ToTable("GT_NOTA_FISCAL_SERVICO_NFSE_LOG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfsId).HasColumnName("NFS_ID");

                entity.Property(e => e.ParcelaId).HasColumnName("PARCELA_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.Tipo).HasColumnName("TIPO");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GtNotaFiscalServicoNfseLog)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_LOG_ASS_ID");

                entity.HasOne(d => d.Nfs)
                    .WithMany(p => p.GtNotaFiscalServicoNfseLog)
                    .HasForeignKey(d => d.NfsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_NFSE_LOG_NFS_ID");
            });

            modelBuilder.Entity<GtNotaFiscalServicoParcela>(entity =>
            {
                entity.ToTable("GT_NOTA_FISCAL_SERVICO_PARCELA");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.NfsId).HasColumnName("NFS_ID");

                entity.Property(e => e.NfsparNum).HasColumnName("NFSPAR_NUM");

                entity.Property(e => e.NfsparPrazo).HasColumnName("NFSPAR_PRAZO");

                entity.Property(e => e.NfsparValor)
                    .HasColumnName("NFSPAR_VALOR")
                    .HasColumnType("money");

                entity.Property(e => e.NfsparVecnto)
                    .HasColumnName("NFSPAR_VECNTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.HasOne(d => d.Ass)
                    .WithMany(p => p.GtNotaFiscalServicoParcela)
                    .HasForeignKey(d => d.AssId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_PARCELA_ASS_ID");

                entity.HasOne(d => d.Nfs)
                    .WithMany(p => p.GtNotaFiscalServicoParcela)
                    .HasForeignKey(d => d.NfsId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_NOTA_FISCAL_SERVICO_PARCELA_NFS_ID");
            });

            modelBuilder.Entity<GtPrefeituras>(entity =>
            {
                entity.ToTable("GT_PREFEITURAS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.PrfCodigo).HasColumnName("PRF_CODIGO");

                entity.Property(e => e.PrfLogotipo)
                    .HasColumnName("PRF_LOGOTIPO")
                    .HasMaxLength(1);

                entity.Property(e => e.PrfLote)
                    .IsRequired()
                    .HasColumnName("PRF_LOTE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PrfNome)
                    .IsRequired()
                    .HasColumnName("PRF_NOME")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PrfPastaLogotipo)
                    .HasColumnName("PRF_PASTA_LOGOTIPO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PrfUf)
                    .IsRequired()
                    .HasColumnName("PRF_UF")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProvedorId).HasColumnName("PROVEDOR_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.HasOne(d => d.Provedor)
                    .WithMany(p => p.GtPrefeituras)
                    .HasForeignKey(d => d.ProvedorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_PREFEITURAS_PROVEDOR_ID");
            });

            modelBuilder.Entity<GtProvedores>(entity =>
            {
                entity.ToTable("GT_PROVEDORES");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.PrvdNamespaceXml)
                    .HasColumnName("PRVD_NAMESPACE_XML")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PrvdNome)
                    .HasColumnName("PRVD_NOME")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PrvdVersaoXml)
                    .HasColumnName("PRVD_VERSAO_XML")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");
            });

            modelBuilder.Entity<GtVideosTreinamentos>(entity =>
            {
                entity.ToTable("GT_VIDEOS_TREINAMENTOS");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatexc)
                    .HasColumnName("SYS_DATEXC")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDatultalt)
                    .HasColumnName("SYS_DATULTALT")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysId).HasColumnName("SYS_ID");

                entity.Property(e => e.SysMenu1Id).HasColumnName("SYS_MENU1_ID");

                entity.Property(e => e.SysMenu2Id).HasColumnName("SYS_MENU2_ID");

                entity.Property(e => e.SysMenu3Id).HasColumnName("SYS_MENU3_ID");

                entity.Property(e => e.SysMenu4Id).HasColumnName("SYS_MENU4_ID");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.SysUsuexc).HasColumnName("SYS_USUEXC");

                entity.Property(e => e.SysUsuultalt).HasColumnName("SYS_USUULTALT");

                entity.Property(e => e.VdoDesc)
                    .HasColumnName("VDO_DESC")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VdoDiretorioFtp)
                    .HasColumnName("VDO_DIRETORIO_FTP")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VdoFlagNivelDiretivo).HasColumnName("VDO_FLAG_NIVEL_DIRETIVO");

                entity.Property(e => e.VdoFlagNivelGerencial).HasColumnName("VDO_FLAG_NIVEL_GERENCIAL");

                entity.Property(e => e.VdoFlagNivelOperacional).HasColumnName("VDO_FLAG_NIVEL_OPERACIONAL");

                entity.Property(e => e.VdoFlagSituacao).HasColumnName("VDO_FLAG_SITUACAO");

                entity.Property(e => e.VdoInfoAdicionais)
                    .HasColumnName("VDO_INFO_ADICIONAIS")
                    .HasColumnType("text");

                entity.Property(e => e.VdoNome)
                    .HasColumnName("VDO_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.VdoTipoFtp).HasColumnName("VDO_TIPO_FTP");
            });

            modelBuilder.Entity<GtVideosTreinamentosLog>(entity =>
            {
                entity.ToTable("GT_VIDEOS_TREINAMENTOS_LOG");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");

                entity.Property(e => e.SysId).HasColumnName("SYS_ID");

                entity.Property(e => e.SysUsucad).HasColumnName("SYS_USUCAD");

                entity.Property(e => e.VdoId).HasColumnName("VDO_ID");

                entity.Property(e => e.VtlDatacesso)
                    .HasColumnName("VTL_DATACESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.VtlDesc)
                    .HasColumnName("VTL_DESC")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.VtlTempoAssistido)
                    .IsRequired()
                    .HasColumnName("VTL_TEMPO_ASSISTIDO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VtlTempoTotal)
                    .IsRequired()
                    .HasColumnName("VTL_TEMPO_TOTAL")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MInventario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("M_INVENTARIO");

                entity.Property(e => e.EqtserNum)
                    .HasColumnName("EQTSER_NUM")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.FmlNum)
                    .HasColumnName("FML_NUM")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.GrpNum)
                    .HasColumnName("GRP_NUM")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TmpGsAgendaOperacoes>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_GS_AGENDA_OPERACOES");

                entity.Property(e => e.CliforId).HasColumnName("CLIFOR_ID");

                entity.Property(e => e.CliforNome)
                    .HasColumnName("CLIFOR_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtDatfim)
                    .HasColumnName("EVT_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtDatini)
                    .HasColumnName("EVT_DATINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.EvtEventoLocal)
                    .HasColumnName("EVT_EVENTO_LOCAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtEventoNome)
                    .HasColumnName("EVT_EVENTO_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtId).HasColumnName("EVT_ID");

                entity.Property(e => e.EvteqtterId).HasColumnName("EVTEQTTER_ID");

                entity.Property(e => e.Horafim)
                    .HasColumnName("HORAFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.Horaini)
                    .HasColumnName("HORAINI")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcCtlrenovacao).HasColumnName("ORC_CTLRENOVACAO");

                entity.Property(e => e.OrcNum).HasColumnName("ORC_NUM");

                entity.Property(e => e.StsevtDes)
                    .IsRequired()
                    .HasColumnName("STSEVT_DES")
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TmpRelComparativoDespesasReceitas8577>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_REL_COMPARATIVO_DESPESAS_RECEITAS_8577");

                entity.Property(e => e.Media).HasColumnName("MEDIA");

                entity.Property(e => e.Mes1)
                    .HasColumnName("MES1")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes10)
                    .HasColumnName("MES10")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes11)
                    .HasColumnName("MES11")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes12)
                    .HasColumnName("MES12")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes2)
                    .HasColumnName("MES2")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes3)
                    .HasColumnName("MES3")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes4)
                    .HasColumnName("MES4")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes5)
                    .HasColumnName("MES5")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes6)
                    .HasColumnName("MES6")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes7)
                    .HasColumnName("MES7")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes8)
                    .HasColumnName("MES8")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Mes9)
                    .HasColumnName("MES9")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctsctsDes)
                    .HasColumnName("PLNCTSCTS_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpDes)
                    .HasColumnName("PLNCTSGRP_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsDes)
                    .HasColumnName("PLNCTSSUBCTS_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpDes)
                    .HasColumnName("PLNCTSSUBGRP_DES")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.Valor1).HasColumnName("VALOR1");

                entity.Property(e => e.Valor10).HasColumnName("VALOR10");

                entity.Property(e => e.Valor11).HasColumnName("VALOR11");

                entity.Property(e => e.Valor12).HasColumnName("VALOR12");

                entity.Property(e => e.Valor2).HasColumnName("VALOR2");

                entity.Property(e => e.Valor3).HasColumnName("VALOR3");

                entity.Property(e => e.Valor4).HasColumnName("VALOR4");

                entity.Property(e => e.Valor5).HasColumnName("VALOR5");

                entity.Property(e => e.Valor6).HasColumnName("VALOR6");

                entity.Property(e => e.Valor7).HasColumnName("VALOR7");

                entity.Property(e => e.Valor8).HasColumnName("VALOR8");

                entity.Property(e => e.Valor9).HasColumnName("VALOR9");
            });

            modelBuilder.Entity<TmpSetoresContas>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_SETORES_CONTAS");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.AssempsetId).HasColumnName("ASSEMPSET_ID");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PlnctsctsId).HasColumnName("PLNCTSCTS_ID");

                entity.Property(e => e.PlnctsgrpId).HasColumnName("PLNCTSGRP_ID");

                entity.Property(e => e.PlnctssubctsId).HasColumnName("PLNCTSSUBCTS_ID");

                entity.Property(e => e.PlnctssubgrpId).HasColumnName("PLNCTSSUBGRP_ID");

                entity.Property(e => e.SysDatcad)
                    .HasColumnName("SYS_DATCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.SysDel).HasColumnName("SYS_DEL");
            });

            modelBuilder.Entity<VGsContasReceberEventos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_GS_CONTAS_RECEBER_EVENTOS");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.CidId).HasColumnName("CID_ID");

                entity.Property(e => e.Cliente)
                    .HasColumnName("CLIENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CrbDatbaixa)
                    .HasColumnName("CRB_DATBAIXA")
                    .HasColumnType("datetime");

                entity.Property(e => e.CrpSit).HasColumnName("CRP_SIT");

                entity.Property(e => e.CrpValpar).HasColumnName("CRP_VALPAR");

                entity.Property(e => e.DespesasBonusVendas)
                    .HasColumnName("DESPESAS_BONUS_VENDAS")
                    .HasColumnType("money");

                entity.Property(e => e.DespesasEquipamentoTerceiro)
                    .HasColumnName("DESPESAS_EQUIPAMENTO_TERCEIRO")
                    .HasColumnType("money");

                entity.Property(e => e.DespesasEvento)
                    .HasColumnName("DESPESAS_EVENTO")
                    .HasColumnType("money");

                entity.Property(e => e.DespesasTecnicos)
                    .HasColumnName("DESPESAS_TECNICOS")
                    .HasColumnType("money");

                entity.Property(e => e.EmpId).HasColumnName("EMP_ID");

                entity.Property(e => e.EmpNome)
                    .HasColumnName("EMP_NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EvtDatfim)
                    .HasColumnName("EVT_DATFIM")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcDatapr)
                    .HasColumnName("ORC_DATAPR")
                    .HasColumnType("datetime");

                entity.Property(e => e.OrcNum).HasColumnName("ORC_NUM");

                entity.Property(e => e.OrcValortotal)
                    .HasColumnName("ORC_VALORTOTAL")
                    .HasColumnType("money");

                entity.Property(e => e.ValorTotalDespVariaveis)
                    .HasColumnName("VALOR_TOTAL_DESP_VARIAVEIS")
                    .HasColumnType("money");

                entity.Property(e => e.ValorTotalTitulo).HasColumnName("VALOR_TOTAL_TITULO");

                entity.Property(e => e.Vendedor)
                    .HasColumnName("VENDEDOR")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<VwTotalEquipamentosOrcamentosCobrados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_TOTAL_EQUIPAMENTOS_ORCAMENTOS_COBRADOS");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrceqtTotal).HasColumnName("ORCEQT_TOTAL");
            });

            modelBuilder.Entity<VwTotalEquipamentosOrcamentosNaocobrados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_TOTAL_EQUIPAMENTOS_ORCAMENTOS_NAOCOBRADOS");

                entity.Property(e => e.AssId).HasColumnName("ASS_ID");

                entity.Property(e => e.OrcId).HasColumnName("ORC_ID");

                entity.Property(e => e.OrceqtTotal).HasColumnName("ORCEQT_TOTAL");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
